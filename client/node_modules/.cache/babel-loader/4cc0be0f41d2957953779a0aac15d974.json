{"ast":null,"code":"import _objectSpread from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx\";\nimport React, { Component, ChildComponent } from \"react\";\nimport { ListGroup } from \"react-bootstrap/esm\";\nimport { Button, DropdownMenu, Dropdown } from \"reactstrap/es\"; // import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar request = require('request');\n\nfunction add$sign(props) {\n  var Value = props.dataItem[props.field || \"\"];\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: \"$\" + Value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\nfunction ChangeCurPriceColor(props) {\n  var curValue = props.dataItem[props.field || \"\"];\n  var closeValue = props.dataItem[\"eodClose\" || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: curValue > closeValue ? \"green\" : \"red\"\n    },\n    children: \"$\" + curValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChangeCurPriceColor;\n;\n\nfunction ChangeCurChangeColor(props) {\n  var value = props.dataItem[props.field || \"\"] > 0 ? \"+\" + props.dataItem[props.field] : props.dataItem[props.field || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: value > 0 ? \"green\" : \"red\"\n    },\n    children: [value, \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ChangeCurChangeColor;\n;\n\nvar viewChartOver = /*#__PURE__*/function (_React$Component) {\n  _inherits(viewChartOver, _React$Component);\n\n  var _super = _createSuper(viewChartOver);\n\n  function viewChartOver() {\n    _classCallCheck(this, viewChartOver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(viewChartOver, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        title: \"View chart\",\n        children: \"view the char\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return viewChartOver;\n}(React.Component);\n\nexport default withRouter( /*#__PURE__*/function (_React$Component2) {\n  _inherits(WatchList, _React$Component2);\n\n  var _super2 = _createSuper(WatchList);\n\n  function WatchList(props) {\n    var _this;\n\n    _classCallCheck(this, WatchList);\n\n    _this = _super2.call(this, props);\n\n    _this.saveNewStockTrade = function (event) {\n      var result = JSON.parse(event.data); // console.log(result)\n\n      var user_watchlist = _this.state.stocks; // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n\n      if (result.type === \"trade\") {\n        user_watchlist.forEach(function (symbol) {\n          var tradePrice = result.data.filter(function (i, n) {\n            return i.s === symbol.Symbol;\n          });\n\n          if (tradePrice.length !== 0) {\n            symbol.currentPrice = +tradePrice[tradePrice.length - 1].p.toFixed(2);\n            symbol.CurrentAmountChange = +(symbol.currentPrice - symbol.eodClose).toFixed(2);\n            symbol.CurrentPercentChange = +(symbol.CurrentAmountChange / symbol.eodClose * 100).toFixed(2); // console.log(\"Found Updated price for \",symbol.Symbol,\"\\n\",\"Price: \",symbol.currentPrice)\n            // console.log(\"Found Updating Amount Change, updated Change: \",symbol.CurrentAmountChange)\n            // console.log(\"Found Updating Percent Change, updated Change: \",symbol.CurrentPercentChange)\n            // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n          }\n        });\n      }\n\n      _this.setState({\n        stocks: user_watchlist\n      });\n    };\n\n    _this.CommandCell = _this.CommandCell.bind(_assertThisInitialized(_this));\n    _this.getEodData = _this.getEodData.bind(_assertThisInitialized(_this));\n    _this.symbolCell = _this.symbolCell.bind(_assertThisInitialized(_this));\n    _this.removeStock = _this.removeStock.bind(_assertThisInitialized(_this));\n    _this.renderStockChart = _this.renderStockChart.bind(_assertThisInitialized(_this));\n    _this.removeHelper = _this.removeHelper.bind(_assertThisInitialized(_this)); // this.getButton=this.getButton.bind(this);\n\n    _this.state = {\n      email: _this.props.email,\n      stocks: _this.props.stocks,\n      connectionError: false,\n      dropdownOpen: false,\n      value: \"Your Watchlist\",\n      stockHasBeenRemoved: false,\n      chartStock: \"\" // eodData:\"\"\n\n    };\n    return _this;\n  }\n\n  _createClass(WatchList, [{\n    key: \"symbolCell\",\n    value: function symbolCell(props) {\n      var _this2 = this;\n\n      var symbol = props.dataItem[props.field || \"\"];\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger btn-circle btn-sm\",\n          onClick: function onClick(e) {\n            return _this2.removeStock(e, props.dataItem);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), \" \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    key: \"CommandCell\",\n    value: function CommandCell(props) {\n      return /*#__PURE__*/_jsxDEV(MyCommandCell, _objectSpread(_objectSpread({}, props), {}, {\n        remove: this.removeStock\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n        console.log('User has removed a stock.');\n\n        if (this.props.history.push !== undefined) {\n          this.setState({\n            stockHasBeenRemoved: false\n          }, function () {\n            return _this3.props.history.push(\"/profile\", [[{\n              email: _this3.state.email,\n              removeStocks: true\n            }, _this3.state.stocks]]);\n          });\n        } else {\n          this.setState({\n            stocks: this.state.stocks\n          });\n        }\n      }\n\n      if (this.props.stocks.length != prevProps.stocks.length) {\n        console.log('Update stocks');\n        this.setState({\n          stocks: this.props.stocks\n        });\n      }\n\n      if (prevState.chartStock !== this.state.chartStock && this.state.chartStock !== \"\") {\n        var stock_chart = this.state.chartStock;\n        console.log(\"render chart for \", stock_chart);\n        this.setState({\n          chartStock: \"\"\n        }, function () {\n          return _this3.props.history.push(\"/profile\", [[{\n            email: _this3.state.email,\n            chartStock: stock_chart\n          }, _this3.state.stocks]]);\n        });\n      }\n    } // componentDidMount(){\n    //   // var data = getEodData(\"AAPL\");\n    //   // console.log(data);\n    //   // this.setState({eodData:data})\n    // }\n\n  }, {\n    key: \"getEodData\",\n    value: function getEodData(symbols) {\n      var _this4 = this;\n\n      if (symbols !== 'No stocks added') {\n        var watchlists = symbols;\n        var getsymbols = \"\";\n        var x = 0;\n        symbols.forEach(function (symbol) {\n          getsymbols = getsymbols + symbol.Symbol;\n\n          if (x !== symbols.length - 1) {\n            getsymbols = getsymbols + \",\";\n          }\n\n          x = x + 1;\n        });\n        var fullUrl = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=' + getsymbols + '&apikey=2TXPYH4TGZ32RG8D'; //  var fullUrl= \"http://api.marketstack.com/v1/eod/latest?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=\"+getsymbols;\n\n        request(fullUrl, {\n          json: true\n        }, function (err, res, body) {\n          console.log(body.data);\n\n          if (err) {\n            return console.log(err);\n          }\n\n          var eod = body.data;\n          var newList = watchlists.map(function (element, index) {\n            element.eodClose = eod[index].close;\n            return element;\n          });\n          console.log(newList);\n\n          _this4.setState({\n            stocks: newList\n          });\n        });\n      } else {\n        console.log(\"No stocks added\");\n        return;\n      }\n    } //     getButton(){\n    //         return(\n    // <button className=\"k-button k-grid-remove-command\"onClick={(e) =>this.remove(e)}>Remove </button>\n    //         )\n    //     }\n    // remove(e,stocks){\n    //     console.log(stocks);\n    // }\n\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.state.stocks);\n      this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n\n      if (this.state.stock !== 'No stocks added') {\n        this.getEodData(this.state.stocks);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this5 = this;\n\n      if (this.state.stock != \"No stocks added\") {\n        this.state.stocks.forEach(function (symbol) {\n          _this5.connection.send(JSON.stringify({\n            'type': 'unsubscribe',\n            'symbol': symbol.Symbol\n          }));\n        });\n      }\n\n      this.connection.close(); // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n      // or cleaning up any subscriptions that were created in componentDidMount().\n    } // componentDidUpdate(prevProps, prevState) {\n    //     if (prevProps.stocks !== this.props.stocks) {\n    //       console.log('stocks state has changed.')\n    //     //   this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n    //         this.setState({stocks:this.props.stocks});\n    //     }\n    //   }\n    // toggle(event) {\n    //     this.setState({\n    //       dropdownOpen: !this.state.dropdownOpen,\n    //       value: event.currentTarget.textContent\n    //     });\n    //   }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      this.connection.onopen = function () {\n        if (_this6.state.stocks !== \"No stocks added\") {\n          _this6.state.stocks.forEach(function (symbol) {\n            _this6.connection.send(JSON.stringify({\n              'type': 'subscribe',\n              'symbol': symbol.Symbol\n            }));\n\n            console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol);\n          });\n        } else {\n          console.log(\"no stocks added to subscribe to\");\n        }\n      };\n\n      this.connection.onmessage = this.saveNewStockTrade;\n\n      this.connection.onclose = function () {\n        _this6.setState({\n          connectionError: true\n        });\n      };\n    } // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    //         </div></>\n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n    // }\n\n  }, {\n    key: \"removeStock\",\n    value: function removeStock(htmlEvent, stock) {\n      var _this7 = this;\n\n      //unsubsribe from listening to thsi stock\n      console.log(\"Unsubscribing from: \", stock.Symbol);\n      this.connection.send(JSON.stringify({\n        'type': 'unsubscribe',\n        'symbol': stock\n      })); //first stop the htmlEvents default status\n\n      htmlEvent.preventDefault();\n      var user = {\n        email: this.props.email,\n        stock_symbol: stock.Symbol\n      };\n      console.log(user);\n      var url = '/api/removeUserStock';\n      var req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(function (res) {\n        console.log(res);\n\n        if (res.status === 500) {\n          res.json().then(function (json) {\n            var message = json.message,\n                stackTrace = json.stackTrace;\n          }).catch(function (error) {\n            return Promise.reject(error);\n          });\n        } else {\n          return res.json();\n        }\n      }).then(function (result) {\n        console.log(\"1st remove stock rerender\");\n\n        _this7.setState({\n          remove_status: result\n        }, function () {\n          return _this7.removeHelper();\n        });\n      });\n    }\n  }, {\n    key: \"removeHelper\",\n    value: function removeHelper() {\n      console.log(\"p/179\", this.state.remove_status); //removed but still showing on watch list\n\n      if (this.state.remove_status.response === \"Stock not on watch list\") {\n        alert(\"Stock Queued For Deletion, Please Login In Again\");\n      } //stock has been removed from watchlist\n      else if (this.state.remove_status.Response === \"Sucessfully removed stock\") {\n          console.log(\"2nd remove stock rerender\");\n          this.setState({\n            stockHasBeenRemoved: true\n          });\n        }\n    } // getUserStocks(){\n    //     var user={ \n    //         email: this.state.email,\n    //     }\n    //     var url = \"/api/getUserStocks\";\n    //     const req = new Request(url,{\n    //         method:\"POST\",\n    //         headers:{\"Content-Type\":\"application/json\"},\n    //         body:JSON.stringify(user),\n    //     });\n    //     fetch(req)\n    //     .then((res)=>{\n    //         return res.json();\n    //     }).catch((error)=>{\n    //         console.log(\"p/121\");\n    //         console.log(error);\n    //         return Promise.reject(error);\n    //         })\n    //     .then(stock_results => {\n    //         console.log(\"3rdt ADD/remove Stock Rerender\");\n    //         this.setState({stocks:stock_results},()=>this.updatePage)});\n    // }\n    // updatePage(){\n    //     console.log(\"In update page \",this.state.stocks);\n    //     this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n    // }\n    // UpdateStockOnPage(){\n    //     if(this.state.stock_symbol_status === 'User had already added this stock'){\n    //         alert(\"This stock is already on your watchlist\");\n    //     }\n    //     else{\n    //         console.log(\"2nd ADD Stock Rerender\");\n    //         this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n    //     }\n    // }\n    // addUserStock(){\n    //     if(this.state.stock_symbol_status !== \"stock not found\"){\n    //         console.log(\"Subscribing to \",this.state.stock_to_watch)\n    //         this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n    //         var user={\n    //             email:this.props.email,\n    //             addStock: this.state.stock_to_watch\n    //         } \n    //         var url=\"/api/AddUserStocks\";\n    //         const req = new Request(url,{\n    //             method:\"POST\",\n    //             headers:{\"Content-Type\":\"application/json\"},\n    //             body:JSON.stringify(user),\n    //         });\n    //         fetch(req)\n    //         .then((res)=>{\n    //             return res.json();\n    //         }).catch((error)=>{\n    //             return Promise.reject(error);\n    //           })\n    //         .then(result => {\n    //             console.log(\"1st ADD Stock Rerender\");\n    //             this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n    //     }\n    //     else{\n    //         //put in this functionality \n    //         alert(\"stock not found\");\n    //     }\n    // }\n    // handleChange(event) {\n    //     this.setState({stock_to_watch: event.target.value});\n    //   }\n\n  }, {\n    key: \"renderStockChart\",\n    value: function renderStockChart(event) {\n      console.log(event.dataItem.Symbol);\n      this.setState({\n        chartStock: event.dataItem.Symbol\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.stocks);\n      // console.log(\"In render: \", this.state.stocks,this.props.stocks);\n      // // console.log(\"In render: \", this.state.dropdownDisplay);\n      // if (this.state == null){\n      //     this.props.history.push(\"/error\");\n      //     }\n      // var Message = \"Your WatchList\";\n      // if(this.state.stocks===\"No stocks added\"){\n      //     Message =\"Empty Watchlist\"; \n      // }\n      // var MessageArrowDir;\n      // if(this.state.dropdownOpen){\n      //   MessageArrowDir = \"\\u25BC\";\n      // }\n      // else{\n      //   MessageArrowDir = \"\\u25B2\";\n      // }\n      // var dropdownDisplay =\n      //     <> <div className = \"dropDiv\">\n      //         <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n      //         <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n      //                 data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n      //     </div></>\n      // var dropdown;\n      // if(this.state.stocks!==\"No stocks added\"){\n      // dropdown = \n      // <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n      //     {dropdownDisplay}\n      //     <DropdownMenu className = \"DDM\">\n      //       <div className = \"ArtistsDisplayWrapper\">\n      //         {this.state.stocks.map((stocks,index) =>\n      //     <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n      //         <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n      //         <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n      //         <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n      //     </div>\n      //         )}\n      //       </div>\n      //     </DropdownMenu>\n      // </Dropdown>\n      // }\n      // else{\n      //     dropdown = dropdownDisplay;\n      // }\n      // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n      // this.props.history.push(\"/error\",this.state)\n      // onClick={this.props.onClick}\n      var useData;\n\n      if (this.props.stocks !== \"No stocks added\") {\n        useData = this.props.stocks;\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100,\n              cell: this.symbolCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"eodClose\",\n              cell: add$sign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\",\n              cell: ChangeCurPriceColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"CurrentAmountChange\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"CurrentPercentChange\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Track\",\n              id: \"Symbol\",\n              cell: this.CommandCell,\n              width: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this);\n      } else {\n        useData = [{\n          eodClose: \"Add stocks\",\n          Symbol: \"Add stocks\",\n          currentPrice: \"Add stocks\",\n          Change: \"Add stocks\",\n          CurrentAmountChange: \"Add stocks\",\n          CurrentPercentChange: \"Add stocks\",\n          Track: \"Add stocks\"\n        }];\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"eodClose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"CurrentAmountChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"CurrentPercentChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Track\",\n              field: \"Track\",\n              width: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this);\n      } // console.log(this.state.eodData)\n\n\n      return grid;\n    }\n  }]);\n\n  return WatchList;\n}(React.Component));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeCurPriceColor\");\n$RefreshReg$(_c2, \"ChangeCurChangeColor\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx"],"names":["React","Component","ChildComponent","ListGroup","Button","DropdownMenu","Dropdown","withRouter","Grid","GridCellProps","GridColumn","ReactDOM","Tooltip","OverlayTrigger","MyCommandCell","request","require","add$sign","props","Value","dataItem","field","ChangeCurPriceColor","curValue","closeValue","color","ChangeCurChangeColor","value","viewChartOver","saveNewStockTrade","event","result","JSON","parse","data","user_watchlist","state","stocks","type","forEach","symbol","tradePrice","filter","i","n","s","Symbol","length","currentPrice","p","toFixed","CurrentAmountChange","eodClose","CurrentPercentChange","setState","CommandCell","bind","getEodData","symbolCell","removeStock","renderStockChart","removeHelper","email","connectionError","dropdownOpen","stockHasBeenRemoved","chartStock","e","prevProps","prevState","console","log","history","push","undefined","removeStocks","stock_chart","symbols","watchlists","getsymbols","x","fullUrl","json","err","res","body","eod","newList","map","element","index","close","connection","WebSocket","stock","send","stringify","onopen","onmessage","onclose","htmlEvent","preventDefault","user","stock_symbol","url","req","Request","method","headers","fetch","then","status","message","stackTrace","catch","error","Promise","reject","remove_status","response","alert","Response","useData","grid","width","Change","Track"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,cAAxB,QAA6C,OAA7C;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,MAAR,EAAeC,YAAf,EAA4BC,QAA5B,QAA4C,eAA5C,C,CACA;;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,UAA9B,QAAgD,4BAAhD;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,UAAP;;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACtB,MAAMC,KAAK,GAAGD,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAAN,IAAe,EAA9B,CAAd;AACA,sBACE;AAAA,cACG,MAAIF;AADP;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AACD,SAASG,mBAAT,CAA6BJ,KAA7B,EAAmC;AACjC,MAAMK,QAAQ,GAAGL,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAAN,IAAe,EAA9B,CAAjB;AACA,MAAMG,UAAU,GAAEN,KAAK,CAACE,QAAN,CAAe,cAAY,EAA3B,CAAlB,CAFiC,CAGjC;;AACA,sBACE;AAAI,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAEF,QAAQ,GAAGC,UAAX,GAAwB,OAAxB,GAAkC;AAA3C,KAAX;AAAA,cACG,MAAID;AADP;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAVQD,mB;AAUR;;AACD,SAASI,oBAAT,CAA8BR,KAA9B,EAAoC;AAClC,MAAMS,KAAK,GAAGT,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAAN,IAAe,EAA9B,IAAkC,CAAlC,GAAqC,MAAIH,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAArB,CAAzC,GAAqEH,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAAN,IAAe,EAA9B,CAAnF,CADkC,CAGlC;;AACA,sBACE;AAAI,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEE,KAAK,GAAG,CAAR,GAAY,OAAZ,GAAsB;AAA/B,KAAX;AAAA,eACGA,KADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;MAVQD,oB;AAUR;;IACKE,a;;;;;;;;;;;;;WACJ,kBAAS;AACP,0BACE;AAAI,QAAA,KAAK,EAAE,YAAX;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;;;EAPyB5B,KAAK,CAACC,S;;AASlC,eAAeM,UAAU;AAAA;;AAAA;;AAErB,qBAAYW,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+BAAMA,KAAN;;AADe,UAmKnBW,iBAnKmB,GAmKA,UAACC,KAAD,EAAW;AAE1B,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAb,CAF0B,CAG1B;;AACA,UAAIC,cAAc,GAAG,MAAKC,KAAL,CAAWC,MAAhC,CAJ0B,CAK1B;;AACA,UAAGN,MAAM,CAACO,IAAP,KAAc,OAAjB,EAAyB;AACrBH,QAAAA,cAAc,CAACI,OAAf,CAAuB,UAAAC,MAAM,EAAI;AAC7B,cAAIC,UAAU,GAAEV,MAAM,CAACG,IAAP,CAAYQ,MAAZ,CAAmB,UAACC,CAAD,EAAGC,CAAH;AAAA,mBAAOD,CAAC,CAACE,CAAF,KAAML,MAAM,CAACM,MAApB;AAAA,WAAnB,CAAhB;;AACA,cAAGL,UAAU,CAACM,MAAX,KAAqB,CAAxB,EAA0B;AAEtBP,YAAAA,MAAM,CAACQ,YAAP,GAAsB,CAACP,UAAU,CAACA,UAAU,CAACM,MAAX,GAAkB,CAAnB,CAAV,CAAgCE,CAAhC,CAAkCC,OAAlC,CAA0C,CAA1C,CAAvB;AACAV,YAAAA,MAAM,CAACW,mBAAP,GAA4B,CAAC,CAACX,MAAM,CAACQ,YAAP,GAAoBR,MAAM,CAACY,QAA5B,EAAsCF,OAAtC,CAA8C,CAA9C,CAA7B;AACAV,YAAAA,MAAM,CAACa,oBAAP,GAA6B,CAAC,CAAEb,MAAM,CAACW,mBAAP,GAA2BX,MAAM,CAACY,QAAnC,GAA6C,GAA9C,EAAmDF,OAAnD,CAA2D,CAA3D,CAA9B,CAJsB,CAKtB;AACA;AACA;AACA;AACH;AACJ,SAZD;AAcH;;AACD,YAAKI,QAAL,CAAc;AAACjB,QAAAA,MAAM,EAACF;AAAR,OAAd;AACH,KA1LkB;;AAEX,UAAKoB,WAAL,GAAiB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAjB;AACA,UAAKC,UAAL,GAAgB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAhB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AACA,UAAKG,WAAL,GAAiB,MAAKA,WAAL,CAAiBH,IAAjB,+BAAjB;AACA,UAAKI,gBAAL,GAAsB,MAAKA,gBAAL,CAAsBJ,IAAtB,+BAAtB;AACA,UAAKK,YAAL,GAAkB,MAAKA,YAAL,CAAkBL,IAAlB,+BAAlB,CAPW,CAQX;;AACA,UAAKpB,KAAL,GAAW;AACP0B,MAAAA,KAAK,EAAG,MAAK5C,KAAL,CAAW4C,KADZ;AAEPzB,MAAAA,MAAM,EAAC,MAAKnB,KAAL,CAAWmB,MAFX;AAGP0B,MAAAA,eAAe,EAAE,KAHV;AAIPC,MAAAA,YAAY,EAAE,KAJP;AAKPrC,MAAAA,KAAK,EAAC,gBALC;AAMPsC,MAAAA,mBAAmB,EAAC,KANb;AAOPC,MAAAA,UAAU,EAAC,EAPJ,CAQP;;AARO,KAAX;AATW;AAuBlB;;AAzBoB;AAAA;AAAA,WA0BrB,oBAAWhD,KAAX,EAAiB;AAAA;;AACf,UAAIsB,MAAM,GAAGtB,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACG,KAAN,IAAe,EAA9B,CAAb;AAEA,0BAGE;AAAA,gCACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,kCAAhC;AAAmE,UAAA,OAAO,EAAE,iBAAC8C,CAAD;AAAA,mBAE1E,MAAI,CAACR,WAAL,CAAiBQ,CAAjB,EAAmBjD,KAAK,CAACE,QAAzB,CAF0E;AAAA,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,OAIMoB,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAeD;AA5CoB;AAAA;AAAA,WA6CrB,qBAAYtB,KAAZ,EAAkB;AAChB,0BACE,QAAC,aAAD,kCACMA,KADN;AAGE,QAAA,MAAM,EAAE,KAAKyC;AAHf;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;AAtDoB;AAAA;AAAA,WAyDnB,4BAAmBS,SAAnB,EAA8BC,SAA9B,EAAyC;AAAA;;AACvC,UAAIA,SAAS,CAACJ,mBAAV,KAAkC,KAAK7B,KAAL,CAAW6B,mBAAjD,EAAsE;AACpEK,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,YAAG,KAAKrD,KAAL,CAAWsD,OAAX,CAAmBC,IAAnB,KAA2BC,SAA9B,EAAyC;AACvC,eAAKpB,QAAL,CAAc;AAACW,YAAAA,mBAAmB,EAAC;AAArB,WAAd,EAA0C;AAAA,mBAAI,MAAI,CAAC/C,KAAL,CAAWsD,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,EAAmC,CAAC,CAAC;AAACX,cAAAA,KAAK,EAAC,MAAI,CAAC1B,KAAL,CAAW0B,KAAlB;AAAwBa,cAAAA,YAAY,EAAC;AAArC,aAAD,EAA4C,MAAI,CAACvC,KAAL,CAAWC,MAAvD,CAAD,CAAnC,CAAJ;AAAA,WAA1C;AACD,SAFD,MAGI;AACA,eAAKiB,QAAL,CAAc;AAACjB,YAAAA,MAAM,EAAC,KAAKD,KAAL,CAAWC;AAAnB,WAAd;AACH;AACF;;AACC,UAAI,KAAKnB,KAAL,CAAWmB,MAAX,CAAkBU,MAAlB,IAA4BqB,SAAS,CAAC/B,MAAV,CAAiBU,MAAjD,EAAyD;AACvDuB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAKjB,QAAL,CAAc;AAACjB,UAAAA,MAAM,EAAC,KAAKnB,KAAL,CAAWmB;AAAnB,SAAd;AAEH;;AACD,UAAGgC,SAAS,CAACH,UAAV,KAAuB,KAAK9B,KAAL,CAAW8B,UAAlC,IAAgD,KAAK9B,KAAL,CAAW8B,UAAX,KAAwB,EAA3E,EAA8E;AAC5E,YAAIU,WAAW,GAAE,KAAKxC,KAAL,CAAW8B,UAA5B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,WAAjC;AAEA,aAAKtB,QAAL,CAAc;AAACY,UAAAA,UAAU,EAAC;AAAZ,SAAd,EAA8B;AAAA,iBAAI,MAAI,CAAChD,KAAL,CAAWsD,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB,EAAmC,CAAC,CAAC;AAACX,YAAAA,KAAK,EAAC,MAAI,CAAC1B,KAAL,CAAW0B,KAAlB;AAAwBI,YAAAA,UAAU,EAACU;AAAnC,WAAD,EAAiD,MAAI,CAACxC,KAAL,CAAWC,MAA5D,CAAD,CAAnC,CAAJ;AAAA,SAA9B;AACD;AACF,KA9EkB,CAgFnB;AACA;AACA;AAEA;AAEA;;AAtFmB;AAAA;AAAA,WAuFnB,oBAAWwC,OAAX,EAAmB;AAAA;;AACjB,UAAGA,OAAO,KAAK,iBAAf,EAAiC;AAC/B,YAAIC,UAAU,GAAGD,OAAjB;AACA,YAAIE,UAAU,GAAE,EAAhB;AACA,YAAIC,CAAC,GAAE,CAAP;AACAH,QAAAA,OAAO,CAACtC,OAAR,CAAgB,UAAAC,MAAM,EAAE;AACtBuC,UAAAA,UAAU,GAAEA,UAAU,GAACvC,MAAM,CAACM,MAA9B;;AACA,cAAGkC,CAAC,KAAKH,OAAO,CAAC9B,MAAR,GAAe,CAAxB,EAA0B;AACxBgC,YAAAA,UAAU,GAAGA,UAAU,GAAC,GAAxB;AACD;;AACDC,UAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AACD,SAND;AAOA,YAAIC,OAAO,GAAG,oEAAkEF,UAAlE,GAA6E,0BAA3F,CAX+B,CAa/B;;AACAhE,QAAAA,OAAO,CAACkE,OAAD,EAAU;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAV,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnDf,UAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAACnD,IAAjB;;AACA,cAAIiD,GAAJ,EAAS;AAAE,mBAAOb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAAP;AAA0B;;AACrC,cAAIG,GAAG,GAACD,IAAI,CAACnD,IAAb;AACA,cAAIqD,OAAO,GAAGT,UAAU,CAACU,GAAX,CAAe,UAACC,OAAD,EAAUC,KAAV,EAAmB;AAE9CD,YAAAA,OAAO,CAACrC,QAAR,GAAkBkC,GAAG,CAACI,KAAD,CAAH,CAAWC,KAA7B;AACA,mBAAOF,OAAP;AACD,WAJa,CAAd;AAKAnB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAZ;;AACF,UAAA,MAAI,CAACjC,QAAL,CAAc;AAACjB,YAAAA,MAAM,EAACkD;AAAR,WAAd;AAED,SAZQ,CAAP;AAYC,OA1BH,MA2BI;AACFjB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD;AACF,KAvHkB,CAwHzB;AACA;AACA;AACA;AACA;AACI;AACA;AACA;;AA/HqB;AAAA;AAAA,WAgIrB,8BAAoB;AAClBD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnC,KAAL,CAAWC,MAAvB;AACA,WAAKuD,UAAL,GAAkB,IAAIC,SAAJ,CAAc,gDAAd,CAAlB;;AACE,UAAG,KAAKzD,KAAL,CAAW0D,KAAX,KAAmB,iBAAtB,EAAwC;AAEtC,aAAKrC,UAAL,CAAgB,KAAKrB,KAAL,CAAWC,MAA3B;AACD;AAGJ;AAzIoB;AAAA;AAAA,WA0IrB,gCAAsB;AAAA;;AAClB,UAAG,KAAKD,KAAL,CAAW0D,KAAX,IAAkB,iBAArB,EAAuC;AACrC,aAAK1D,KAAL,CAAWC,MAAX,CAAkBE,OAAlB,CAA0B,UAAAC,MAAM,EAAE;AAChC,UAAA,MAAI,CAACoD,UAAL,CAAgBG,IAAhB,CAAqB/D,IAAI,CAACgE,SAAL,CAAe;AAAC,oBAAO,aAAR;AAAuB,sBAAUxD,MAAM,CAACM;AAAxC,WAAf,CAArB;AAED,SAHD;AAID;;AAED,WAAK8C,UAAL,CAAgBD,KAAhB,GARkB,CAWlB;AACA;AACH,KAvJoB,CAwJrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApKqB;AAAA;AAAA,WA8LrB,6BAAmB;AAAA;;AAEf,WAAKC,UAAL,CAAgBK,MAAhB,GAAyB,YAAK;AAC1B,YAAI,MAAI,CAAC7D,KAAL,CAAWC,MAAX,KAAoB,iBAAxB,EAA0C;AACtC,UAAA,MAAI,CAACD,KAAL,CAAWC,MAAX,CAAkBE,OAAlB,CAA0B,UAAAC,MAAM,EAAE;AAC9B,YAAA,MAAI,CAACoD,UAAL,CAAgBG,IAAhB,CAAqB/D,IAAI,CAACgE,SAAL,CAAe;AAAC,sBAAO,WAAR;AAAqB,wBAAUxD,MAAM,CAACM;AAAtC,aAAf,CAArB;;AACAwB,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C/B,MAAM,CAACM,MAArD;AACH,WAHD;AAIH,SALD,MAMI;AACAwB,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACH;AAEJ,OAXD;;AAYA,WAAKqB,UAAL,CAAgBM,SAAhB,GAA2B,KAAKrE,iBAAhC;;AACA,WAAK+D,UAAL,CAAgBO,OAAhB,GAA0B,YAAM;AAAE,QAAA,MAAI,CAAC7C,QAAL,CAAc;AAACS,UAAAA,eAAe,EAAE;AAAlB,SAAd;AAAwC,OAA1E;AACH,KA9MoB,CAgNrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAjQqB;AAAA;AAAA,WAmQrB,qBAAYqC,SAAZ,EAAsBN,KAAtB,EAA4B;AAAA;;AACxB;AACDxB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCuB,KAAK,CAAChD,MAAzC;AACC,WAAK8C,UAAL,CAAgBG,IAAhB,CAAqB/D,IAAI,CAACgE,SAAL,CAAe;AAAC,gBAAO,aAAR;AAAuB,kBAAUF;AAAjC,OAAf,CAArB,EAHwB,CAIxB;;AACAM,MAAAA,SAAS,CAACC,cAAV;AACA,UAAIC,IAAI,GAAC;AACLxC,QAAAA,KAAK,EAAC,KAAK5C,KAAL,CAAW4C,KADZ;AAELyC,QAAAA,YAAY,EAAET,KAAK,CAAChD;AAFf,OAAT;AAKAwB,MAAAA,OAAO,CAACC,GAAR,CAAY+B,IAAZ;AACA,UAAIE,GAAG,GAAG,sBAAV;AACA,UAAMC,GAAG,GAAG,IAAIC,OAAJ,CAAYF,GAAZ,EAAgB;AACxBG,QAAAA,MAAM,EAAC,MADiB;AAExBC,QAAAA,OAAO,EAAC;AAAC,0BAAe;AAAhB,SAFgB;AAGxBvB,QAAAA,IAAI,EAACrD,IAAI,CAACgE,SAAL,CAAeM,IAAf;AAHmB,OAAhB,CAAZ;AAKAO,MAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACM,UAAC1B,GAAD,EAAO;AACTd,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;;AACA,YAAGA,GAAG,CAAC2B,MAAJ,KAAa,GAAhB,EAAoB;AACpB3B,UAAAA,GAAG,CAACF,IAAJ,GACC4B,IADD,CACM,UAAC5B,IAAD,EAAQ;AACV,gBAAO8B,OAAP,GAA2B9B,IAA3B,CAAO8B,OAAP;AAAA,gBAAeC,UAAf,GAA2B/B,IAA3B,CAAe+B,UAAf;AACD,WAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAS;AACd,mBAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,WANH;AAOC,SARD,MASI;AAEF,iBAAO/B,GAAG,CAACF,IAAJ,EAAP;AACD;AACF,OAhBH,EAiBG4B,IAjBH,CAiBQ,UAAC/E,MAAD,EAAW;AAEbuC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,QAAA,MAAI,CAACjB,QAAL,CAAc;AAACgE,UAAAA,aAAa,EAACvF;AAAf,SAAd,EAAqC;AAAA,iBAAI,MAAI,CAAC8B,YAAL,EAAJ;AAAA,SAArC;AAA8D,OApBpE;AAsBH;AA3SoB;AAAA;AAAA,WA6SrB,wBAAc;AACVS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKnC,KAAL,CAAWkF,aAA/B,EADU,CAEV;;AACA,UAAG,KAAKlF,KAAL,CAAWkF,aAAX,CAAyBC,QAAzB,KAAoC,yBAAvC,EAAiE;AAC7DC,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACH,OAFD,CAGA;AAHA,WAIK,IAAG,KAAKpF,KAAL,CAAWkF,aAAX,CAAyBG,QAAzB,KAAoC,2BAAvC,EAAmE;AACpEnD,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,eAAKjB,QAAL,CAAc;AAACW,YAAAA,mBAAmB,EAAC;AAArB,WAAd;AAEH;AACJ,KAzToB,CA0TrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;;AA7YqB;AAAA;AAAA,WA+YrB,0BAAiBnC,KAAjB,EAAuB;AACrBwC,MAAAA,OAAO,CAACC,GAAR,CAAYzC,KAAK,CAACV,QAAN,CAAe0B,MAA3B;AACA,WAAKQ,QAAL,CAAc;AAACY,QAAAA,UAAU,EAACpC,KAAK,CAACV,QAAN,CAAe0B;AAA3B,OAAd;AACD;AAlZoB;AAAA;AAAA,WAmZrB,kBAAQ;AACN;AAEE;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA,UAAI4E,OAAJ;;AAEA,UAAG,KAAKxG,KAAL,CAAWmB,MAAX,KAAqB,iBAAxB,EAA0C;AACxCqF,QAAAA,OAAO,GAAC,KAAKxG,KAAL,CAAWmB,MAAnB;;AACA,YAAIsF,IAAI,gBACN,QAAC,OAAD;AAAS,UAAA,SAAS,EAAE,GAApB;AAAyB,UAAA,QAAQ,EAAC,OAAlC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED,OAAZ;AAAqB,YAAA,UAAU,EAAG,KAAK9D,gBAAvC;AAAyD,YAAA,KAAK,EAAC,WAA/D;AAAA,oCAEE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,KAAK,EAAC,QAAjC;AAAyC,cAAA,KAAK,EAAE;AAAEgE,gBAAAA,KAAK,EAAE;AAAT,eAAhD;AAAgE,cAAA,MAAM,EAAE,KAAxE;AAA+E,cAAA,KAAK,EAAE,GAAtF;AAA2F,cAAA,IAAI,EAAE,KAAKlE;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,YAAlB;AAA+B,cAAA,KAAK,EAAC,UAArC;AAAgD,cAAA,IAAI,EAAEzC;AAAtD;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAC,cAAhC;AAA+C,cAAA,IAAI,EAAEK;AAArD;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,KAAK,EAAC,qBAAjC;AAAuD,cAAA,IAAI,EAAEI;AAA7D;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,UAAlB;AAA6B,cAAA,KAAK,EAAC,sBAAnC;AAA0D,cAAA,IAAI,EAAEA;AAAhE;AAAA;AAAA;AAAA;AAAA,oBANF,eAQE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,OAAlB;AAA0B,cAAA,EAAE,EAAC,QAA7B;AAAsC,cAAA,IAAI,EAAE,KAAK6B,WAAjD;AAA8D,cAAA,KAAK,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAjBD,MAkBI;AACFmE,QAAAA,OAAO,GAAC,CAAC;AACPtE,UAAAA,QAAQ,EAAC,YADF;AAEPN,UAAAA,MAAM,EAAC,YAFA;AAGPE,UAAAA,YAAY,EAAC,YAHN;AAIP6E,UAAAA,MAAM,EAAC,YAJA;AAKP1E,UAAAA,mBAAmB,EAAC,YALb;AAMPE,UAAAA,oBAAoB,EAAC,YANd;AAOPyE,UAAAA,KAAK,EAAC;AAPC,SAAD,CAAR;;AAUA,YAAIH,IAAI,gBACN,QAAC,OAAD;AAAS,UAAA,SAAS,EAAE,GAApB;AAAyB,UAAA,QAAQ,EAAC,OAAlC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED,OAAZ;AAAqB,YAAA,UAAU,EAAG,KAAK9D,gBAAvC;AAAyD,YAAA,KAAK,EAAC,WAA/D;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,KAAK,EAAC,QAAjC;AAAyC,cAAA,KAAK,EAAE;AAAEgE,gBAAAA,KAAK,EAAE;AAAT,eAAhD;AAAgE,cAAA,MAAM,EAAE,KAAxE;AAA+E,cAAA,KAAK,EAAE;AAAtF;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,YAAlB;AAA+B,cAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,UAAlB;AAA6B,cAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAC,OAAhC;AAAwC,cAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OA5GG,CA6GJ;;;AACA,aAGED,IAHF;AAMC;AAvgBgB;;AAAA;AAAA,EAA0B3H,KAAK,CAACC,SAAhC,EAAzB","sourcesContent":["import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown,} from \"reactstrap/es\";\n// import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\nimport {withRouter} from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\n\nconst request = require('request');\n\nfunction add$sign(props){\n  const Value = props.dataItem[props.field || \"\"];\n  return (\n    <td >\n      {\"$\"+Value}\n    </td>\n  )\n}\nfunction ChangeCurPriceColor(props){\n  const curValue = props.dataItem[props.field || \"\"];\n  const closeValue =props.dataItem[\"eodClose\"||\"\"]\n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: curValue > closeValue ? \"green\" : \"red\" }}>\n      {\"$\"+curValue}\n    </td>\n  )\n  \n};\nfunction ChangeCurChangeColor(props){\n  const value = props.dataItem[props.field || \"\"]>0? \"+\"+props.dataItem[props.field]:props.dataItem[props.field || \"\"];\n  \n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: value > 0 ? \"green\" : \"red\" }}>\n      {value}%\n    </td>\n  )\n  \n};\nclass viewChartOver extends React.Component {\n  render() {\n    return (\n      <td title={\"View chart\"}>\n        {\"view the char\"}\n      </td>\n    );\n  }\n}\nexport default withRouter( class WatchList extends React.Component {\n \n    constructor(props) {\n        super(props)\n            this.CommandCell=this.CommandCell.bind(this)\n            this.getEodData=this.getEodData.bind(this)\n            this.symbolCell = this.symbolCell.bind(this);\n            this.removeStock=this.removeStock.bind(this);\n            this.renderStockChart=this.renderStockChart.bind(this);\n            this.removeHelper=this.removeHelper.bind(this);\n            // this.getButton=this.getButton.bind(this);\n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\",\n                stockHasBeenRemoved:false,\n                chartStock:\"\",\n                // eodData:\"\"\n                \n            }\n            \n        \n        \n    }\n    symbolCell(props){\n      var symbol = props.dataItem[props.field || \"\"];\n      \n      return(\n        \n        \n        <td >\n        <button type=\"button\" className=\"btn btn-danger btn-circle btn-sm\" onClick={(e) =>\n  \n          this.removeStock(e,props.dataItem)\n}>X</button> {symbol}\n        </td>\n        \n   \n      );\n     \n\n\n    }\n    CommandCell(props){\n      return(\n        <MyCommandCell\n          {...props}\n          \n          remove={this.removeStock}\n          \n        />\n      );\n    }\n        \n      \n      componentDidUpdate(prevProps, prevState) {\n        if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n          console.log('User has removed a stock.')\n          if(this.props.history.push!== undefined) {\n            this.setState({stockHasBeenRemoved:false},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,removeStocks:true},this.state.stocks]]));\n          }\n          else{\n              this.setState({stocks:this.state.stocks})\n          }\n        }\n          if (this.props.stocks.length != prevProps.stocks.length) {\n            console.log('Update stocks')\n            this.setState({stocks:this.props.stocks})\n         \n        }\n        if(prevState.chartStock!==this.state.chartStock && this.state.chartStock!==\"\"){\n          var stock_chart= this.state.chartStock;\n          console.log(\"render chart for \", stock_chart);\n          \n          this.setState({chartStock:\"\"},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,chartStock:stock_chart},this.state.stocks]]))\n        }\n      }\n      \n      // componentDidMount(){\n      //   // var data = getEodData(\"AAPL\");\n      //   // console.log(data);\n        \n      //   // this.setState({eodData:data})\n        \n      // }\n      getEodData(symbols){\n        if(symbols !== 'No stocks added'){\n          var watchlists = symbols;\n          var getsymbols =\"\";\n          var x= 0;\n          symbols.forEach(symbol=>{\n            getsymbols= getsymbols+symbol.Symbol\n            if(x !== symbols.length-1){\n              getsymbols = getsymbols+\",\";\n            }\n            x=x+1;\n          })\n          var fullUrl = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+getsymbols+'&apikey=2TXPYH4TGZ32RG8D';\n\n          //  var fullUrl= \"http://api.marketstack.com/v1/eod/latest?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=\"+getsymbols;\n          request(fullUrl, { json: true }, (err, res, body) => {\n            console.log(body.data);\n            if (err) { return console.log(err); }\n            var eod=body.data;\n            var newList = watchlists.map((element, index) =>{\n              \n              element.eodClose= eod[index].close;\n              return element\n            })\n            console.log(newList)\n          this.setState({stocks:newList});\n          \n        })}\n        else{\n          console.log(\"No stocks added\")\n          return;\n        }\n      }\n//     getButton(){\n//         return(\n// <button className=\"k-button k-grid-remove-command\"onClick={(e) =>this.remove(e)}>Remove </button>\n//         )\n//     }\n    // remove(e,stocks){\n    //     console.log(stocks);\n    // }\n    componentWillMount(){\n      console.log(this.state.stocks)\n      this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        if(this.state.stock!=='No stocks added'){\n          \n          this.getEodData(this.state.stocks);\n        }\n        \n        \n    }\n    componentWillUnmount(){\n        if(this.state.stock!=\"No stocks added\"){\n          this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n          })\n        }\n        \n        this.connection.close();\n        \n        \n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (prevProps.stocks !== this.props.stocks) {\n    //       console.log('stocks state has changed.')\n    //     //   this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n    //         this.setState({stocks:this.props.stocks});\n    //     }\n    //   }\n    // toggle(event) {\n    //     this.setState({\n    //       dropdownOpen: !this.state.dropdownOpen,\n    //       value: event.currentTarget.textContent\n    //     });\n    //   }\n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        // console.log(result)\n        let user_watchlist = this.state.stocks\n        // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol.Symbol);\n                if(tradePrice.length !==0){\n                  \n                    symbol.currentPrice = +tradePrice[tradePrice.length-1].p.toFixed(2); \n                    symbol.CurrentAmountChange= +(symbol.currentPrice-symbol.eodClose).toFixed(2);\n                    symbol.CurrentPercentChange= +((symbol.CurrentAmountChange/symbol.eodClose)*100).toFixed(2);\n                    // console.log(\"Found Updated price for \",symbol.Symbol,\"\\n\",\"Price: \",symbol.currentPrice)\n                    // console.log(\"Found Updating Amount Change, updated Change: \",symbol.CurrentAmountChange)\n                    // console.log(\"Found Updating Percent Change, updated Change: \",symbol.CurrentPercentChange)\n                    // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n                }\n            })\n            \n        }\n        this.setState({stocks:user_watchlist});\n    }\n     \n    componentDidMount(){\n       \n        this.connection.onopen = ()=> { \n            if (this.state.stocks!==\"No stocks added\"){\n                this.state.stocks.forEach(symbol=>{\n                    this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol.Symbol}));\n                    console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol)\n                })\n            }\n            else{\n                console.log(\"no stocks added to subscribe to\");\n            }\n            \n        }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n    }\n    \n    // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    \n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n        \n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n    //         </div></>\n        \n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    \n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n                \n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n        \n\n    // }\n   \n    removeStock(htmlEvent,stock){\n        //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock.Symbol)\n        this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock}))\n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock.Symbol,\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            console.log(res)\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n                \n              return res.json();\n            }\n          })\n          .then((result)=> {\n              \n              console.log(\"1st remove stock rerender\");\n              this.setState({remove_status:result},()=>this.removeHelper())});\n    \n    }\n    \n    removeHelper(){\n        console.log(\"p/179\",this.state.remove_status);\n        //removed but still showing on watch list\n        if(this.state.remove_status.response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(this.state.remove_status.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({stockHasBeenRemoved:true});\n           \n        }\n    }\n    // getUserStocks(){\n    //     var user={ \n    //         email: this.state.email,\n    //     }\n    //     var url = \"/api/getUserStocks\";\n    //     const req = new Request(url,{\n    //         method:\"POST\",\n    //         headers:{\"Content-Type\":\"application/json\"},\n    //         body:JSON.stringify(user),\n    //     });\n    //     fetch(req)\n    //     .then((res)=>{\n           \n    //         return res.json();\n    //     }).catch((error)=>{\n    //         console.log(\"p/121\");\n    //         console.log(error);\n    //         return Promise.reject(error);\n    //         })\n    //     .then(stock_results => {\n    //         console.log(\"3rdt ADD/remove Stock Rerender\");\n    //         this.setState({stocks:stock_results},()=>this.updatePage)});\n        \n    // }\n    \n    // updatePage(){\n    //     console.log(\"In update page \",this.state.stocks);\n        \n    //     this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n        \n        \n        \n    // }\n    \n    // UpdateStockOnPage(){\n    //     if(this.state.stock_symbol_status === 'User had already added this stock'){\n    //         alert(\"This stock is already on your watchlist\");\n    //     }\n        \n    //     else{\n    //         console.log(\"2nd ADD Stock Rerender\");\n    //         this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n    //     }\n    // }\n\n    // addUserStock(){\n    //     if(this.state.stock_symbol_status !== \"stock not found\"){\n    //         console.log(\"Subscribing to \",this.state.stock_to_watch)\n    //         this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n    //         var user={\n    //             email:this.props.email,\n    //             addStock: this.state.stock_to_watch\n    //         } \n           \n    //         var url=\"/api/AddUserStocks\";\n    //         const req = new Request(url,{\n    //             method:\"POST\",\n    //             headers:{\"Content-Type\":\"application/json\"},\n    //             body:JSON.stringify(user),\n    //         });\n    //         fetch(req)\n    //         .then((res)=>{\n                \n    //             return res.json();\n    //         }).catch((error)=>{\n    //             return Promise.reject(error);\n    //           })\n    //         .then(result => {\n    //             console.log(\"1st ADD Stock Rerender\");\n    //             this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n            \n    //     }\n    \n    //     else{\n    //         //put in this functionality \n    //         alert(\"stock not found\");\n    //     }\n        \n        \n    // }\n    // handleChange(event) {\n         \n    //     this.setState({stock_to_watch: event.target.value});\n    //   }\n\n    renderStockChart(event){\n      console.log(event.dataItem.Symbol)\n      this.setState({chartStock:event.dataItem.Symbol})\n    }\n    render(){\n      // console.log(this.state.stocks);\n    \n        // console.log(\"In render: \", this.state.stocks,this.props.stocks);\n        // // console.log(\"In render: \", this.state.dropdownDisplay);\n        // if (this.state == null){\n        //     this.props.history.push(\"/error\");\n        //     }\n        \n        \n        // var Message = \"Your WatchList\";\n        // if(this.state.stocks===\"No stocks added\"){\n        //     Message =\"Empty Watchlist\"; \n        // }\n        // var MessageArrowDir;\n        // if(this.state.dropdownOpen){\n        //   MessageArrowDir = \"\\u25BC\";\n        // }\n    \n        // else{\n        //   MessageArrowDir = \"\\u25B2\";\n        // }\n        \n        // var dropdownDisplay =\n        //     <> <div className = \"dropDiv\">\n        //         <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n        //         <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n        //                 data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n        //     </div></>\n        // var dropdown;\n        // if(this.state.stocks!==\"No stocks added\"){\n    \n        // dropdown = \n    \n        // <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n        //     {dropdownDisplay}\n    \n        //     <DropdownMenu className = \"DDM\">\n        //       <div className = \"ArtistsDisplayWrapper\">\n        //         {this.state.stocks.map((stocks,index) =>\n                \n        //     <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n        //         <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n        //         <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n        //         <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n        //     </div>\n        //         )}\n        //       </div>\n        //     </DropdownMenu>\n        // </Dropdown>\n        // }\n        // else{\n        //     dropdown = dropdownDisplay;\n    \n           \n      \n        // }\n       \n        // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n        \n        // this.props.history.push(\"/error\",this.state)\n        // onClick={this.props.onClick}\n        var useData;\n\n        if(this.props.stocks !==\"No stocks added\"){\n          useData=this.props.stocks\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                {/* <GridColumn title=\"Name\" field=\"name\" /> */}\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100} cell={this.symbolCell} />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" cell={add$sign}/>\n                <GridColumn title=\"Price\" field=\"currentPrice\" cell={ChangeCurPriceColor}/>\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" cell={ChangeCurChangeColor} />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" cell={ChangeCurChangeColor}/>\n                {/* <GridColumn title=\"View Chart\" id=\"Symbol\" cell={tooltiprender} width=\"200px\" /> */}\n                <GridColumn title=\"Track\" id=\"Symbol\" cell={this.CommandCell} width=\"200px\" />\n              </Grid>\n            </Tooltip>\n         \n          )\n        }\n        else{\n          useData=[{\n            eodClose:\"Add stocks\",\n            Symbol:\"Add stocks\",\n            currentPrice:\"Add stocks\",\n            Change:\"Add stocks\",\n            CurrentAmountChange:\"Add stocks\",\n            CurrentPercentChange:\"Add stocks\",\n            Track:\"Add stocks\"\n\n          },]\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100}  />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" />\n                <GridColumn title=\"Price\" field=\"currentPrice\" />\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" />\n                <GridColumn title=\"Track\" field=\"Track\" width=\"200px\" />\n              </Grid>\n            </Tooltip>\n          )\n        }\n        // console.log(this.state.eodData)\n        return (\n          \n          \n          grid\n          \n          );\n        }\n})\n"]},"metadata":{},"sourceType":"module"}