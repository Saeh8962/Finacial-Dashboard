{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\n\nvar ValidityState = require(\"../generated/ValidityState\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    cloningSteps = _require2.cloningSteps;\n\nvar _require3 = require(\"../helpers/form-controls\"),\n    isDisabled = _require3.isDisabled,\n    normalizeToCRLF = _require3.normalizeToCRLF,\n    getLabelsForLabelable = _require3.getLabelsForLabelable,\n    formOwner = _require3.formOwner;\n\nvar _require4 = require(\"../helpers/text\"),\n    childTextContent = _require4.childTextContent;\n\nvar _require5 = require(\"../helpers/events\"),\n    fireAnEvent = _require5.fireAnEvent;\n\nvar HTMLTextAreaElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLTextAreaElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLTextAreaElementImpl);\n\n  function HTMLTextAreaElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLTextAreaElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._selectionStart = _this._selectionEnd = 0;\n    _this._selectionDirection = \"none\";\n    _this._rawValue = \"\";\n    _this._dirtyValue = false;\n    _this._customValidityErrorMessage = \"\";\n    _this._labels = null;\n    return _this;\n  }\n\n  _createClass(HTMLTextAreaElementImpl, [{\n    key: \"_formReset\",\n    value: function _formReset() {\n      this._rawValue = childTextContent(this);\n      this._dirtyValue = false;\n    }\n  }, {\n    key: \"_getAPIValue\",\n    value: function _getAPIValue() {\n      return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    } // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      // Hard-wrapping omitted, for now.\n      return normalizeToCRLF(this._rawValue);\n    }\n  }, {\n    key: \"_childTextContentChangeSteps\",\n    value: function _childTextContentChangeSteps() {\n      _get(_getPrototypeOf(HTMLTextAreaElementImpl.prototype), \"_childTextContentChangeSteps\", this).call(this);\n\n      if (this._dirtyValue === false) {\n        this._rawValue = childTextContent(this);\n      }\n    }\n  }, {\n    key: \"labels\",\n    get: function get() {\n      return getLabelsForLabelable(this);\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      return formOwner(this);\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      return childTextContent(this);\n    },\n    set: function set(val) {\n      this.textContent = val;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._getAPIValue();\n    },\n    set: function set(val) {\n      // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\n      var oldAPIValue = this._getAPIValue();\n\n      this._rawValue = val;\n      this._dirtyValue = true;\n\n      if (oldAPIValue !== this._getAPIValue()) {\n        this._selectionStart = this._selectionEnd = this._getValueLength();\n        this._selectionDirection = \"none\";\n      }\n    }\n  }, {\n    key: \"textLength\",\n    get: function get() {\n      return this.value.length; // code unit length (16 bit)\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"textarea\";\n    }\n  }, {\n    key: \"_dispatchSelectEvent\",\n    value: function _dispatchSelectEvent() {\n      fireAnEvent(\"select\", this, undefined, {\n        bubbles: true,\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"_getValueLength\",\n    value: function _getValueLength() {\n      return typeof this.value === \"string\" ? this.value.length : 0;\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this._selectionStart = 0;\n      this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      return this._selectionStart;\n    },\n    set: function set(start) {\n      this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n    }\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      return this._selectionEnd;\n    },\n    set: function set(end) {\n      this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n    }\n  }, {\n    key: \"selectionDirection\",\n    get: function get() {\n      return this._selectionDirection;\n    },\n    set: function set(dir) {\n      this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(start, end, dir) {\n      this._selectionEnd = Math.min(end, this._getValueLength());\n      this._selectionStart = Math.min(start, this._selectionEnd);\n      this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"setRangeText\",\n    value: function setRangeText(repl, start, end) {\n      var selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n\n      if (arguments.length < 2) {\n        start = this._selectionStart;\n        end = this._selectionEnd;\n      } else if (start > end) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      start = Math.min(start, this._getValueLength());\n      end = Math.min(end, this._getValueLength());\n      var val = this.value;\n      var selStart = this._selectionStart;\n      var selEnd = this._selectionEnd;\n      this.value = val.slice(0, start) + repl + val.slice(end);\n      var newEnd = start + this.value.length;\n\n      if (selectionMode === \"select\") {\n        this.setSelectionRange(start, newEnd);\n      } else if (selectionMode === \"start\") {\n        this.setSelectionRange(start, start);\n      } else if (selectionMode === \"end\") {\n        this.setSelectionRange(newEnd, newEnd);\n      } else {\n        // preserve\n        var delta = repl.length - (end - start);\n\n        if (selStart > end) {\n          selStart += delta;\n        } else if (selStart > start) {\n          selStart = start;\n        }\n\n        if (selEnd > end) {\n          selEnd += delta;\n        } else if (selEnd > start) {\n          selEnd = newEnd;\n        }\n\n        this.setSelectionRange(selStart, selEnd);\n      }\n    }\n  }, {\n    key: \"cols\",\n    get: function get() {\n      if (!this.hasAttributeNS(null, \"cols\")) {\n        return 20;\n      }\n\n      return parseInt(this.getAttributeNS(null, \"cols\"));\n    },\n    set: function set(value) {\n      if (value <= 0) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      this.setAttributeNS(null, \"cols\", String(value));\n    }\n  }, {\n    key: \"rows\",\n    get: function get() {\n      if (!this.hasAttributeNS(null, \"rows\")) {\n        return 2;\n      }\n\n      return parseInt(this.getAttributeNS(null, \"rows\"));\n    },\n    set: function set(value) {\n      if (value <= 0) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      this.setAttributeNS(null, \"rows\", String(value));\n    }\n  }, {\n    key: \"_barredFromConstraintValidationSpecialization\",\n    value: function _barredFromConstraintValidationSpecialization() {\n      return this.hasAttributeNS(null, \"readonly\");\n    }\n  }, {\n    key: \"_mutable\",\n    get: function get() {\n      return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\n    } // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n\n  }, {\n    key: \"validity\",\n    get: function get() {\n      var _this2 = this;\n\n      if (!this._validity) {\n        var state = {\n          valueMissing: function valueMissing() {\n            return _this2.hasAttributeNS(null, \"required\") && _this2._mutable && _this2.value === \"\";\n          }\n        };\n        this._validity = ValidityState.createImpl(this._globalObject, [], {\n          element: this,\n          state: state\n        });\n      }\n\n      return this._validity;\n    }\n  }, {\n    key: cloningSteps,\n    value: function value(copy, node) {\n      copy._dirtyValue = node._dirtyValue;\n      copy._rawValue = node._rawValue;\n    }\n  }]);\n\n  return HTMLTextAreaElementImpl;\n}(HTMLElementImpl);\n\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js"],"names":["HTMLElementImpl","require","implementation","DefaultConstraintValidationImpl","ValidityState","mixin","DOMException","cloningSteps","isDisabled","normalizeToCRLF","getLabelsForLabelable","formOwner","childTextContent","fireAnEvent","HTMLTextAreaElementImpl","globalObject","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_rawValue","_dirtyValue","_customValidityErrorMessage","_labels","replace","val","textContent","_getAPIValue","oldAPIValue","_getValueLength","value","length","undefined","bubbles","cancelable","_dispatchSelectEvent","start","setSelectionRange","Math","max","end","dir","min","repl","selectionMode","arguments","create","_globalObject","selStart","selEnd","slice","newEnd","delta","hasAttributeNS","parseInt","getAttributeNS","setAttributeNS","String","_validity","state","valueMissing","_mutable","createImpl","element","copy","node","prototype","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { cloningSteps } = require(\"../helpers/internal-constants\");\nconst { isDisabled, normalizeToCRLF, getLabelsForLabelable, formOwner } = require(\"../helpers/form-controls\");\nconst { childTextContent } = require(\"../helpers/text\");\nconst { fireAnEvent } = require(\"../helpers/events\");\n\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._rawValue = \"\";\n    this._dirtyValue = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n  }\n\n  _formReset() {\n    this._rawValue = childTextContent(this);\n    this._dirtyValue = false;\n  }\n\n  _getAPIValue() {\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\n  _getValue() {\n    // Hard-wrapping omitted, for now.\n    return normalizeToCRLF(this._rawValue);\n  }\n\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps();\n\n    if (this._dirtyValue === false) {\n      this._rawValue = childTextContent(this);\n    }\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return formOwner(this);\n  }\n\n  get defaultValue() {\n    return childTextContent(this);\n  }\n\n  set defaultValue(val) {\n    this.textContent = val;\n  }\n\n  get value() {\n    return this._getAPIValue();\n  }\n\n  set value(val) {\n    // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\n    const oldAPIValue = this._getAPIValue();\n    this._rawValue = val;\n    this._dirtyValue = true;\n\n    if (oldAPIValue !== this._getAPIValue()) {\n      this._selectionStart = this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n    }\n  }\n\n  get textLength() {\n    return this.value.length; // code unit length (16 bit)\n  }\n\n  get type() {\n    return \"textarea\";\n  }\n\n  _dispatchSelectEvent() {\n    fireAnEvent(\"select\", this, undefined, { bubbles: true, cancelable: true });\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + this.value.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  get cols() {\n    if (!this.hasAttributeNS(null, \"cols\")) {\n      return 20;\n    }\n    return parseInt(this.getAttributeNS(null, \"cols\"));\n  }\n\n  set cols(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"cols\", String(value));\n  }\n\n  get rows() {\n    if (!this.hasAttributeNS(null, \"rows\")) {\n      return 2;\n    }\n    return parseInt(this.getAttributeNS(null, \"rows\"));\n  }\n\n  set rows(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"rows\", String(value));\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    return this.hasAttributeNS(null, \"readonly\");\n  }\n\n  get _mutable() {\n    return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n  get validity() {\n    if (!this._validity) {\n      const state = {\n        valueMissing: () => this.hasAttributeNS(null, \"required\") && this._mutable && this.value === \"\"\n      };\n\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\n        element: this,\n        state\n      });\n    }\n    return this._validity;\n  }\n\n  [cloningSteps](copy, node) {\n    copy._dirtyValue = node._dirtyValue;\n    copy._rawValue = node._rawValue;\n  }\n}\n\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}