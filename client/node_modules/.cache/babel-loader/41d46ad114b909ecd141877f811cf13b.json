{"ast":null,"code":"import _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle } from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { getHistory } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar url = \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\n\nvar request = require('request');\n\nvar categories = ['Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec', 'Jan`21', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];\nexport default function PerformancePanel() {\n  _s();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      history = _React$useState2[0],\n      setHistory = _React$useState2[1];\n\n  React.useEffect(function () {\n    request(url, {\n      json: true\n    }, function (err, res, body) {\n      if (err) {\n        return console.log(err);\n      }\n\n      return getHistory(body.data).then(function (results) {\n        setHistory(results);\n      });\n    });\n  }, []);\n\n  if (history) {\n    var dates = history.map(function (data) {\n      return data.date.slice(0, 10);\n    });\n    var history_data = history.map(function (data) {\n      return data.open;\n    }); // console.log(dates,data) \n\n    return /*#__PURE__*/_jsxDEV(Chart, {\n      children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n        text: \"Line Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n        children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n        children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"veticalLine\",\n          data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(PerformancePanel, \"m2zlKD6z2d5JHwcHk/9BlD37tsE=\");\n\n_c = PerformancePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformancePanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","getHistory","url","request","require","categories","PerformancePanel","useState","history","setHistory","useEffect","json","err","res","body","console","log","data","then","results","dates","map","date","slice","history_data","open"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,qBALF,EAMEC,UANF,QASO,8BATP;AAUA,OAAO,UAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,IAAMC,GAAG,GAAE,6IAAX;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,MAAnB,EAA0B,KAA1B,EAAgC,KAAhC,EAAsC,KAAtC,EAA4C,QAA5C,EAAqD,KAArD,EAA2D,KAA3D,EAAiE,KAAjE,EAAuE,KAAvE,EAA6E,KAA7E,EAAmF,KAAnF,CAAjB;AAIA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,wBAA8BZ,KAAK,CAACa,QAAN,EAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpBP,IAAAA,OAAO,CAACD,GAAD,EAAM;AAAES,MAAAA,IAAI,EAAE;AAAR,KAAN,EAAsB,UAACC,GAAD,EAAWC,GAAX,EAAqBC,IAArB,EAAmC;AAC9D,UAAIF,GAAJ,EAAS;AAAE,eAAOG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAAP;AAA0B;;AACrC,aAAOX,UAAU,CAACa,IAAI,CAACG,IAAN,CAAV,CAAsBC,IAAtB,CAA2B,UAACC,OAAD,EAAwB;AACxDV,QAAAA,UAAU,CAACU,OAAD,CAAV;AACD,OAFM,CAAP;AAID,KANM,CAAP;AASD,GAVD,EAUG,EAVH;;AAWF,MAAGX,OAAH,EAAW;AACT,QAAIY,KAAK,GAAGZ,OAAO,CAACa,GAAR,CAAY,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAkB,EAAlB,CAAJ;AAAA,KAAhB,CAAZ;AACA,QAAIC,YAAY,GAAGhB,OAAO,CAACa,GAAR,CAAY,UAAAJ,IAAI;AAAA,aAAEA,IAAI,CAACQ,IAAP;AAAA,KAAhB,CAAnB,CAFS,CAGT;;AAIA,wBAEQ,QAAC,KAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,iBAAD;AAAA,+BACE,QAAC,qBAAD;AAAuB,UAAA,UAAU,EAAEpB;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,WAAD;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,aAAtB;AAAoC,UAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAcC,GArBH,MAsBM;AACF,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GAtCuBC,gB;;KAAAA,gB","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n  ChartLegend,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { getHistory } from \"../services/dataService\";\nimport { History } from \"../data/models\";\nconst url =\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\nconst request = require('request');\nconst categories=['Jun','Jul','Aug','Sept','Oct','Nov','Dec','Jan`21','Feb','Mar','Apr','May','Jun','Jul']\n\n   \n    \nexport default function PerformancePanel() {\n  const [history, setHistory] = React.useState<History[]>();\n  React.useEffect(() => {\n    request(url, { json: true }, (err: any, res: any, body: any) => {\n      if (err) { return console.log(err); }\n      return getHistory(body.data).then((results: History[]) => {\n        setHistory(results);\n      });\n      \n    })\n        \n    \n  }, []);\nif(history){\n  var dates = history.map(data => data.date.slice(0,10));\n  var history_data = history.map(data=>data.open)\n  // console.log(dates,data) \n\n\n\n  return (\n    \n          <Chart>\n            <ChartTitle text=\"Line Chart\" />\n            {/* <ChartLegend position=\"top\" orientation=\"horizontal\" display=\"false\" /> */}\n            <ChartCategoryAxis>\n              <ChartCategoryAxisItem categories={categories}/>\n            </ChartCategoryAxis>\n            <ChartSeries>\n              <ChartSeriesItem type=\"veticalLine\" data={[1,2,3,4,5,6,7,8,9,10,11,12]}/>\n            </ChartSeries>\n          </Chart>\n        \n  );\n  }\n  else{ \n    return <h2>Performance</h2>\n  }\n}"]},"metadata":{},"sourceType":"module"}