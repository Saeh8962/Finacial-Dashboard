{"ast":null,"code":"import _objectSpread from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/AllocationPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\"; // import { getFundInfo } from \"../services/dataService\";\n// import { FundInfo } from \"../data/models\";\n\nimport \"hammerjs\";\nimport \"../CSS/GlobalCSS.css\";\nimport UserAlerts from \"../panels/UserAlert\"; // import AddAlert from \"../panels/AddAlert\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultIdentifier = {\n  productName: \"Select Metric ...\"\n};\nvar defaultWatch = {\n  orderName: \"Select Movment ...\"\n};\nexport default function AllocationPanel(props) {\n  _s();\n\n  var _React$useState = React.useState({\n    identifier: [\"\"],\n    movement: [\"\"]\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var identifierChange = function identifierChange(event) {\n    var identifier = event.target.value;\n\n    if (identifier === 'Price') {\n      var movements = ['Above', 'Below'];\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        identifier: identifier,\n        movement: movements\n      }));\n    } else {\n      var _movements = ['Up', 'Down'];\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        identifier: identifier,\n        movement: _movements\n      }));\n    }\n  };\n\n  var email = props.email;\n  return /*#__PURE__*/_jsxDEV(PanelBar, {\n    children: /*#__PURE__*/_jsxDEV(PanelBarItem, {\n      expanded: false,\n      title: \"Alerts\",\n      children: [/*#__PURE__*/_jsxDEV(PanelBarItem, {\n        expanded: false,\n        title: \"Your Alerts\",\n        children: /*#__PURE__*/_jsxDEV(UserAlerts, {\n          email: props.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PanelBarItem, {\n        expanded: false,\n        title: \"Add Alerts\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"FormFields\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormField\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"FormField_Input\",\n              placeholder: \"Symbol\",\n              type: \"text\",\n              name: \"stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-3\",\n                children: /*#__PURE__*/_jsxDEV(DropDownList, {\n                  label: \"$ %\",\n                  data: state.identifier //   textfield={\"Price or % Change\"}\n                  ,\n                  onChange: identifierChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-3\",\n                children: /*#__PURE__*/_jsxDEV(DropDownList, {\n                  label: \"Watch\",\n                  data: state.movement //   textfield=\"Price or % Change\"\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"m-3\",\n                children: /*#__PURE__*/_jsxDEV(NumericTextBox, {\n                  defaultValue: 0,\n                  step: .5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllocationPanel, \"UTL4MNtSelYkoAFwh/EVsHEV0ik=\");\n\n_c = AllocationPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllocationPanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/AllocationPanel.tsx"],"names":["React","NumericTextBox","DropDownList","PanelBar","PanelBarItem","UserAlerts","defaultIdentifier","productName","defaultWatch","orderName","AllocationPanel","props","useState","identifier","movement","state","setState","identifierChange","event","target","value","movements","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartSeriesLabels,\n  ChartTitle,\n  ChartTooltip\n} from \"@progress/kendo-react-charts\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { getFundAllocation } from \"../services/dataService\";\nimport { Allocation } from \"../data/models\";\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\n// import { getFundInfo } from \"../services/dataService\";\n// import { FundInfo } from \"../data/models\";\n\nimport {Button,DropdownMenu,Dropdown, Input} from \"reactstrap/es\";\nimport \"hammerjs\";\nimport \"../CSS/GlobalCSS.css\";\nimport UserAlerts from \"../panels/UserAlert\";\n// import AddAlert from \"../panels/AddAlert\";\nconst defaultIdentifier = {\n  productName: \"Select Metric ...\",\n};\nconst defaultWatch = {\n  orderName: \"Select Movment ...\",\n};\n\n\n\nexport default function AllocationPanel(props:any) {\n  const [state,setState]= React.useState({ \n    identifier:[\"\"],\n    movement: [\"\"],\n})\nconst identifierChange=(event: any)=>{\n  const identifier = event.target.value;\n  if(identifier==='Price'){\n    const movements= ['Above','Below']\n    setState({\n        ...state,\n        identifier:identifier,\n        movement: movements\n    })\n  }\n  else{\n      const movements=['Up','Down']\n      setState({\n        ...state,\n        identifier:identifier,\n        movement: movements\n    })\n  }\n  \n  \n}\n  \n  const email = props.email;\n\n  return (\n    <PanelBar>\n      <PanelBarItem expanded={false} title=\"Alerts\">\n          <PanelBarItem expanded={false} title=\"Your Alerts\">\n            <UserAlerts email={props.email}/>\n          </PanelBarItem>\n          <PanelBarItem expanded={false} title=\"Add Alerts\">\n          <form className= \"FormFields\">\n      <div className=\"FormField\">\n      <input  className= \"FormField_Input\"  placeholder= \"Symbol\" type=\"text\" name=\"stock\" />\n        <div className=\"row\">\n          <div className=\"m-3\">\n            <DropDownList \n            label = \"$ %\"\n            data={state.identifier}\n          //   textfield={\"Price or % Change\"}\n            onChange= {identifierChange}\n            />\n          </div>\n          <div className= \"m-3\">\n            <DropDownList \n            label = \"Watch\"\n            data={state.movement}\n          //   textfield=\"Price or % Change\"\n            />\n          </div>\n          <div className= \"m-3\">\n            <NumericTextBox defaultValue={0} step={.5} />\n          </div>\n        </div>\n      </div>\n      {/* <Button  className= \"ButtonNoRight\" onClick={(e)=>handleNewAlert(e)}>Save Alert</Button> */}\n    </form>\n          </PanelBarItem>\n        </PanelBarItem>\n    </PanelBar>\n    \n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}