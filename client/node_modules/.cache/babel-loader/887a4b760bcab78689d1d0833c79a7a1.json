{"ast":null,"code":"import _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartTooltip, ChartLegend } from \"@progress/kendo-react-charts\";\nimport { getHistory } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar url = \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\n\nvar request = require('request');\n\nexport default function PerformancePanel() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      history = _React$useState2[0],\n      setHistory = _React$useState2[1];\n\n  React.useEffect(function () {\n    request(url, {\n      json: true\n    }, function (err, res, body) {\n      if (err) {\n        return console.log(err);\n      }\n\n      return getHistory(body.data).then(function (results) {\n        setHistory(results);\n      });\n    });\n  }, []);\n\n  if (history) {\n    var dates = history.map(function (data) {\n      return data.date.slice(0, 10);\n    }); // var data = history.map(data=>data.open)\n    // console.log(dates,data) \n\n    var ChartContainer = function ChartContainer() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"k-card\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                style: {\n                  height: 350\n                },\n                children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n                  text: \"Line Chart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(ChartLegend, {\n                  position: \"top\",\n                  orientation: \"horizontal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n                  children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n                    categories: dates\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 15\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n                  children: history.map(function (data) {\n                    return /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n                      type: \"line\",\n                      tooltip: {\n                        visible: true\n                      },\n                      data: data.data,\n                      name: data.symbol\n                    }, data.symbol, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 17\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 13\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, _this)]\n      }, void 0, true);\n    };\n  } // console.log(history);\n\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      text: \"Fund Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n      children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n        categories: dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n      children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n        type: \"line\",\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartTooltip, {\n      render: renderTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PerformancePanel, \"m2zlKD6z2d5JHwcHk/9BlD37tsE=\");\n\n_c = PerformancePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformancePanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartTooltip","ChartLegend","getHistory","url","request","require","PerformancePanel","useState","history","setHistory","useEffect","json","err","res","body","console","log","data","then","results","dates","map","date","slice","ChartContainer","height","visible","symbol","renderTooltip"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n  ChartLegend,\n} from \"@progress/kendo-react-charts\";\nimport { getHistory } from \"../services/dataService\";\nimport { History } from \"../data/models\";\nconst url =\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\nconst request = require('request');\n\n\n   \n    \nexport default function PerformancePanel() {\n  const [history, setHistory] = React.useState<History[]>();\n  React.useEffect(() => {\n    request(url, { json: true }, (err: any, res: any, body: any) => {\n      if (err) { return console.log(err); }\n      return getHistory(body.data).then((results: History[]) => {\n        setHistory(results);\n      });\n      \n    })\n        \n    \n  }, []);\nif(history){\n  var dates = history.map(data => data.date.slice(0,10));\n  // var data = history.map(data=>data.open)\n  // console.log(dates,data) \n\n\nconst ChartContainer = () => (\n  <>\n    <div className=\"row mb-3\">\n      <div className=\"col-6\">\n        <div className=\"k-card\">\n          <Chart\n            style={{\n              height: 350,\n            }}\n          >\n            <ChartTitle text=\"Line Chart\" />\n            <ChartLegend position=\"top\" orientation=\"horizontal\" />\n            <ChartCategoryAxis>\n              <ChartCategoryAxisItem categories={dates}/>\n            </ChartCategoryAxis>\n            <ChartSeries>\n              {history.map((data) => (\n                <ChartSeriesItem\n                  key={data.symbol}\n                  type=\"line\"\n                  tooltip={{\n                    visible: true,\n                  }}\n                  data={data.data}\n                  name={data.symbol}\n                />\n              ))}\n            </ChartSeries>\n          </Chart>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n      \n      \n    </div>\n  </>\n);\n                }\n// console.log(history);\n  return (\n    <Chart>\n  <ChartTitle text=\"Fund Performance\" />\n  <ChartCategoryAxis>\n    <ChartCategoryAxisItem categories={dates} />\n  </ChartCategoryAxis>\n  <ChartSeries>\n    <ChartSeriesItem type=\"line\" data={data} />\n  </ChartSeries>\n  <ChartTooltip render={renderTooltip} />\n</Chart>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}