{"ast":null,"code":"import _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/UserAlert.tsx\",\n    _s = $RefreshSig$();\n\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\nimport { Button } from \"reactstrap/es\";\nimport React from \"react\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar $ = require(\"jquery\");\n\nfunction handleToggle(event) {\n  console.log(event);\n  var user = {\n    email: props.email,\n    symbol: data.symbol,\n    identifier: data.Identifier,\n    movement: data.movement\n  };\n  console.log(user, data);\n  var url = \"/api/toggleAlert\";\n  var req = new Request(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  fetch(req).then(function (res) {\n    //Catch server error\n    //no error\n    return res.json();\n  }).catch(function (error) {\n    console.log(error);\n    return Promise.reject(error);\n  }).then(function (query_result) {\n    console.log(query_result);\n    setState({\n      alertChange: !state.alertChange\n    });\n  });\n}\n\nvar columns = [{\n  field: \"Identifier\",\n  header: \"ID\",\n  width: \"100px\"\n}, {\n  field: \"movement\",\n  header: \"Tracking\",\n  width: \"300px\"\n}, {\n  field: \"valuechange\",\n  header: \"Change\",\n  width: \"300px\"\n}];\n\nfunction getAlertData(email, callback) {\n  var user = {\n    email: email,\n    request: \"getData\"\n  };\n  var url = \"/api/UserAlerts\";\n  var req = new Request(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  fetch(req).then(function (res) {\n    //Catch server error\n    //no error\n    return res.json();\n  }).catch(function (error) {\n    console.log(error);\n    return Promise.reject(error);\n  }).then(function (query_result) {\n    console.log(query_result);\n    callback(query_result);\n  });\n}\n\nexport default function Useralerts(props) {\n  _s();\n\n  var _this = this;\n\n  function toggleButton(props) {\n    var activeValue = props.dataItem[props.field || \"\"];\n    var x = {\n      \"fill\": \"none\",\n      \"stroke-width\": 3,\n      \"stroke-linejoin\": \"round\",\n      \"stroke-miterlimit\": 10\n    };\n    var y = {\n      \"fill\": \"none\",\n      \"stroke\": \"#CD4C10\",\n      \"stroke-width\": 3,\n      \"stroke-linejoin\": \"round\",\n      \"stroke-miterlimit\": 10\n    };\n    var a = {\n      \"fill\": \"none\",\n      \"stroke\": \"#557D25\",\n      \"stroke-width\": 3,\n      \"stroke-linejoin\": \"round\",\n      \"stroke-miterlimit\": 10\n    };\n    var ss = {\n      \"enable-background\": \"new 0 0 33 33\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"ButtonNoRight\",\n        onClick: function onClick(e) {\n          return handleToggle(e);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: props.id,\n          className: \"cf\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: props.id,\n            defaultChecked: JSON.parse(activeValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: 20,\n              viewBox: \"0 0 33 33\",\n              children: /*#__PURE__*/_jsxDEV(\"switch\", {\n                children: /*#__PURE__*/_jsxDEV(\"g\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    className: \"circ path\",\n                    style: x,\n                    d: \"M6.2,6.2L6.2,6.2 c-5.7,5.7-5.7,14.8,0,20.5l0,0c5.7,5.7,14.8,5.7,20.5,0l0,0c5.7-5.7,5.7-14.8,0-20.5l0,0C21.1,0.6,11.9,0.6,6.2,6.2z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    className: \"cross path\",\n                    style: y,\n                    points: \" 11.4,11.4 21.6,21.6 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    className: \"cross path\",\n                    style: y,\n                    points: \"21.6,11.4 11.4,21.6\\t\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                    className: \"tick path\",\n                    style: a,\n                    points: \"10,17.3 13.8,21.1 23,11.9 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-danger btn-circle btn-sm\",\n        onClick: function onClick(e) {\n          return removeAlert(e, props.dataItem);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n  function changeprefix(props) {\n    var Value = props.dataItem[props.field || \"\"];\n    var check = props.dataItem['Identifier'];\n\n    if (check == \"Percent\") {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"%\" + Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"$\" + Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function handleToggle(event) {\n    console.log(event.target.attributes); // var user={\n    //     email:props.email,\n    //     active:event.target.attributes.checked,\n    //     identifier:data.Identifier,\n    //     movement:data.movement\n    // }\n    // console.log(user,data)\n    // var url=\"/api/toggleAlert\";\n    //     const req = new Request(url,{\n    //         method:\"POST\",\n    //         headers:{\"Content-Type\":\"application/json\"},\n    //         body:JSON.stringify(user),\n    //     });\n    //     fetch(req)\n    //     .then((res)=>{\n    //         //Catch server error\n    //             //no error\n    //         return res.json();\n    //     }).catch((error)=>{\n    //         console.log(error);\n    //         return Promise.reject(error);\n    //     })\n    //     .then(query_result=>{\n    //         console.log(query_result);\n    //        setState({alertChange:!state.alertChange})\n    //     }) \n  }\n\n  function removeAlert(event, data) {\n    var user = {\n      email: props.email,\n      symbol: data.symbol,\n      identifier: data.Identifier,\n      movement: data.movement\n    };\n    console.log(user, data);\n    var url = \"/api/RemoveAlerts\";\n    var req = new Request(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    fetch(req).then(function (res) {\n      //Catch server error\n      //no error\n      return res.json();\n    }).catch(function (error) {\n      console.log(error);\n      return Promise.reject(error);\n    }).then(function (query_result) {\n      console.log(query_result);\n      setState({\n        removedAlert: !state.removedAlert\n      });\n    });\n  }\n\n  var _React$useState = React.useState({\n    removedAlert: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      AlertData = _React$useState4[0],\n      setAlertData = _React$useState4[1];\n\n  React.useEffect(function () {\n    getAlertData(props.email, setAlertData);\n    props.callback(AlertData);\n  }, [props.alertChange]);\n\n  if (JSON.stringify(AlertData) !== JSON.stringify(\"No Alerts found\")) {\n    //get the unique symbols, then get Alert type\n    if (AlertData) {\n      var Stock_Alerts = AlertData.uniqueSymbols.map(function (symbol) {\n        console.log(symbol.symbol); //alert data for the unique stock\n\n        var uniqueAlertData = {\n          Symbol: symbol,\n          alerts: AlertData.alerts.filter(function (i, n) {\n            return i.symbol === symbol.symbol;\n          })\n        };\n        return uniqueAlertData;\n      });\n      return /*#__PURE__*/_jsxDEV(PanelBar, {\n        children: Stock_Alerts.map(function (Alert) {\n          return /*#__PURE__*/_jsxDEV(PanelBarItem, {\n            expanded: false,\n            title: Alert.Symbol.symbol,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              data: Alert.alerts,\n              style: {\n                top: '0px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n                title: \"$ %\",\n                field: \"Identifier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(GridColumn, {\n                title: \"Watch\",\n                field: \"movement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(GridColumn, {\n                title: \"Value\",\n                field: \"valuechange\",\n                cell: changeprefix\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(GridColumn, {\n                title: \"On/Off\",\n                field: \"active\",\n                cell: toggleButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 28\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"there was an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 16\n      }, this);\n    } // var rendItem = Stock_Alerts.forEach((Alert,n)=>{\n    //     console.log(Alert);\n    //     return(<PanelBarItem expanded={false} title={Alert.Symbol} >\n    //          <MultiColumnComboBox\n    //             data={Alert.alerts}\n    //             columns={columns}\n    //             />   \n    //     </PanelBarItem>)\n    // })\n    // Object.values(Stock_Alerts).map((element: any) =>{\n    //     console.log(element);\n    // })\n    //************Too DOO handle the uniqueAlertData to display it has a panel with the stock symbol and then a bulti combo box as the drop down  */\n\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Add Some Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 18\n    }, this);\n  }\n}\n\n_s(Useralerts, \"5I/mDeK9PU9Yi1migPTSJSAw8AY=\");\n\n_c = Useralerts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Useralerts\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/UserAlert.tsx"],"names":["PanelBar","PanelBarItem","Button","React","Grid","GridColumn","$","require","handleToggle","event","console","log","user","email","props","symbol","data","identifier","Identifier","movement","url","req","Request","method","headers","body","JSON","stringify","fetch","then","res","json","catch","error","Promise","reject","query_result","setState","alertChange","state","columns","field","header","width","getAlertData","callback","request","Useralerts","toggleButton","activeValue","dataItem","x","y","a","ss","e","id","parse","removeAlert","changeprefix","Value","check","target","attributes","removedAlert","useState","AlertData","setAlertData","useEffect","Stock_Alerts","uniqueSymbols","map","uniqueAlertData","Symbol","alerts","filter","i","n","Alert","top"],"mappings":"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","sourcesContent":["\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\nimport {Button} from \"reactstrap/es\";\nimport React from \"react\";\nimport { MultiColumnComboBox } from \"@progress/kendo-react-dropdowns\";\nimport { Alerts } from \"../data/models\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport \"./style.css\"\nimport { isJsxAttributes } from \"typescript\";\n\n\nconst $ = require( \"jquery\" );\nfunction handleToggle(event){\n    console.log(event)\n    var user={\n        email:props.email,\n        symbol:data.symbol,\n        identifier:data.Identifier,\n        movement:data.movement\n    }\n    console.log(user,data)\n    var url=\"/api/toggleAlert\";\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        \n        fetch(req)\n        .then((res)=>{\n            //Catch server error\n                //no error\n                \n            return res.json();\n        }).catch((error)=>{\n            console.log(error);\n            return Promise.reject(error);\n        })\n        .then(query_result=>{\n            console.log(query_result);\n            \n           setState({alertChange:!state.alertChange})\n        }) \n\n}\nconst columns = [\n    {\n      field: \"Identifier\",\n      header: \"ID\",\n      width: \"100px\",\n    },\n    {\n      field: \"movement\",\n      header: \"Tracking\",\n      width: \"300px\",\n    },\n    {\n      field: \"valuechange\",\n      header: \"Change\",\n      width: \"300px\",\n    },\n  ];\n\nfunction getAlertData(email:string,callback:(arg0: Alerts) => void){\n    var user = {\n        email:email,\n        request:\"getData\"\n    }\n    var url=\"/api/UserAlerts\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                callback(query_result)\n            }) \n    \n}\nexport default function Useralerts(props:any) {\n    function toggleButton(props:any){\n        const activeValue = props.dataItem[props.field || \"\"];\n         var x = {\n             \"fill\": \"none\",\n             \"stroke-width\":3,\n             \"stroke-linejoin\":\"round\",\n             \"stroke-miterlimit\":10\n         }\n         var y ={\n            \"fill\":\"none\",\n            \"stroke\":\"#CD4C10\",\n            \"stroke-width\":3,\n            \"stroke-linejoin\":\"round\",\n            \"stroke-miterlimit\":10\n         }\n         var a ={\n            \"fill\":\"none\",\n            \"stroke\":\"#557D25\",\n            \"stroke-width\":3,\n            \"stroke-linejoin\":\"round\",\n            \"stroke-miterlimit\":10\n         }\n         var ss={\n            \"enable-background\":\"new 0 0 33 33\"\n         }\n        \n\n    \n        return(\n            <div>\n               <Button  className= \"ButtonNoRight\" onClick={(e)=> handleToggle(e)}>\n\n               \n                <label htmlFor={props.id} className=\"cf\">\n                <input type=\"checkbox\" id={props.id} defaultChecked={JSON.parse(activeValue)}/> \n                <span>active</span>\n                <i className=\"indicator\">\n                <svg  xmlns=\"http://www.w3.org/2000/svg\" width={20} viewBox=\"0 0 33 33\">\n            <switch>\n                <g>\n                <path className=\"circ path\" style= {x} d=\"M6.2,6.2L6.2,6.2 c-5.7,5.7-5.7,14.8,0,20.5l0,0c5.7,5.7,14.8,5.7,20.5,0l0,0c5.7-5.7,5.7-14.8,0-20.5l0,0C21.1,0.6,11.9,0.6,6.2,6.2z\"/>\n                <polyline className=\"cross path\" style={y} points=\" 11.4,11.4 21.6,21.6 \"/>\n                <polyline className=\"cross path\" style={y} points=\"21.6,11.4 11.4,21.6\t\"/> \n                <polyline className=\"tick path\" style={a} points=\"10,17.3 13.8,21.1 23,11.9 \"/>\n                </g>\n            </switch>\n        </svg>\n                </i> \n                <span>Inactive</span>\n                </label>\n                </Button>\n                <button type=\"button\" className=\"btn-danger btn-circle btn-sm\" onClick={(e) =>removeAlert(e,props.dataItem)}>X</button>\n\n                </div>\n\n                \n        \n                  )\n        \n    }\n    function changeprefix(props: any){\n        const Value = props.dataItem[props.field || \"\"];\n        const check=props.dataItem['Identifier']\n        if(check == \"Percent\"){\n            return (\n                <td >\n                  {\"%\"+Value}   \n                </td>\n              )\n        }\n        else{\n            return (\n                <td >\n                  {\"$\"+Value}   \n                </td>\n              )\n        }\n        \n    }\n    function handleToggle(event:any){\n        console.log(event.target.attributes)\n        // var user={\n        //     email:props.email,\n        //     active:event.target.attributes.checked,\n        //     identifier:data.Identifier,\n        //     movement:data.movement\n        // }\n        // console.log(user,data)\n        // var url=\"/api/toggleAlert\";\n        //     const req = new Request(url,{\n        //         method:\"POST\",\n        //         headers:{\"Content-Type\":\"application/json\"},\n        //         body:JSON.stringify(user),\n        //     });\n            \n        //     fetch(req)\n        //     .then((res)=>{\n        //         //Catch server error\n        //             //no error\n                    \n        //         return res.json();\n        //     }).catch((error)=>{\n        //         console.log(error);\n        //         return Promise.reject(error);\n        //     })\n        //     .then(query_result=>{\n        //         console.log(query_result);\n                \n        //        setState({alertChange:!state.alertChange})\n        //     }) \n    \n    }\n    function removeAlert(event:any,data:any){\n        var user={\n            email:props.email,\n            symbol:data.symbol,\n            identifier:data.Identifier,\n            movement:data.movement\n        }\n        console.log(user,data)\n        var url=\"/api/RemoveAlerts\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                \n               setState({removedAlert:!state.removedAlert})\n            }) \n    }\n    const [state,setState]= React.useState({ \n        \n        removedAlert:false\n    })\n    const [AlertData, setAlertData] = React.useState<(Alerts)>();\n    React.useEffect(() => {\n      getAlertData(props.email,setAlertData)\n      props.callback(AlertData)\n    }, [props.alertChange]);\n    if(JSON.stringify(AlertData)!==JSON.stringify(\"No Alerts found\")){ \n        //get the unique symbols, then get Alert type\n      \n       if(AlertData){ \n        var Stock_Alerts = AlertData.uniqueSymbols.map(symbol => {\n            console.log((symbol.symbol))\n            //alert data for the unique stock\n            var uniqueAlertData={Symbol:symbol,alerts:AlertData.alerts.filter((i,n)=>i.symbol===(symbol).symbol)};\n            \n            return uniqueAlertData;\n        })\n        return (\n            <PanelBar>\n                {Stock_Alerts.map(Alert=>{\n                    return(<PanelBarItem expanded={false} title={Alert.Symbol.symbol} >\n                                <Grid\n                                data={Alert.alerts}\n                                style={{top: '0px'}}\n                                 > \n                                    <GridColumn title=\"$ %\" field=\"Identifier\" />\n                                    <GridColumn title=\"Watch\" field=\"movement\" />\n                                    <GridColumn title=\"Value\" field=\"valuechange\" cell={changeprefix} />\n                                    <GridColumn title=\"On/Off\" field=\"active\"cell={toggleButton}/>\n                                </Grid>\n                   </PanelBarItem>)\n                    \n                })}\n            </PanelBar>)\n       }else{\n           return(\n               <td>there was an error</td>\n          )\n       }\n        \n        \n        // var rendItem = Stock_Alerts.forEach((Alert,n)=>{\n        //     console.log(Alert);\n        //     return(<PanelBarItem expanded={false} title={Alert.Symbol} >\n\n        //          <MultiColumnComboBox\n        //             data={Alert.alerts}\n        //             columns={columns}\n        //             />   \n        //     </PanelBarItem>)\n        // })\n        // Object.values(Stock_Alerts).map((element: any) =>{\n        //     console.log(element);\n        // })\n        \n        //************Too DOO handle the uniqueAlertData to display it has a panel with the stock symbol and then a bulti combo box as the drop down  */\n        \n    }\n    else {\n        return (\n            \n                 <td>Add Some Alerts</td>\n           \n           \n        )\n    }\n\n\n    \n    \n}"]},"metadata":{},"sourceType":"module"}