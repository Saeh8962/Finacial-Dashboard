{"ast":null,"code":"/* eslint no-console: 0 */\n'use strict';\n\nvar _toConsumableArray = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar urllib = require('url');\n\nvar util = require('util');\n\nvar fs = require('fs');\n\nvar fetch = require('../fetch');\n/**\n * Parses connection url to a structured configuration object\n *\n * @param {String} str Connection url\n * @return {Object} Configuration object\n */\n\n\nmodule.exports.parseConnectionUrl = function (str) {\n  str = str || '';\n  var options = {};\n  [urllib.parse(str, true)].forEach(function (url) {\n    var auth;\n\n    switch (url.protocol) {\n      case 'smtp:':\n        options.secure = false;\n        break;\n\n      case 'smtps:':\n        options.secure = true;\n        break;\n\n      case 'direct:':\n        options.direct = true;\n        break;\n    }\n\n    if (!isNaN(url.port) && Number(url.port)) {\n      options.port = Number(url.port);\n    }\n\n    if (url.hostname) {\n      options.host = url.hostname;\n    }\n\n    if (url.auth) {\n      auth = url.auth.split(':');\n\n      if (!options.auth) {\n        options.auth = {};\n      }\n\n      options.auth.user = auth.shift();\n      options.auth.pass = auth.join(':');\n    }\n\n    Object.keys(url.query || {}).forEach(function (key) {\n      var obj = options;\n      var lKey = key;\n      var value = url.query[key];\n\n      if (!isNaN(value)) {\n        value = Number(value);\n      }\n\n      switch (value) {\n        case 'true':\n          value = true;\n          break;\n\n        case 'false':\n          value = false;\n          break;\n      } // tls is nested object\n\n\n      if (key.indexOf('tls.') === 0) {\n        lKey = key.substr(4);\n\n        if (!options.tls) {\n          options.tls = {};\n        }\n\n        obj = options.tls;\n      } else if (key.indexOf('.') >= 0) {\n        // ignore nested properties besides tls\n        return;\n      }\n\n      if (!(lKey in obj)) {\n        obj[lKey] = value;\n      }\n    });\n  });\n  return options;\n};\n\nmodule.exports._logFunc = function (logger, level, defaults, data, message) {\n  var entry = {};\n  Object.keys(defaults || {}).forEach(function (key) {\n    if (key !== 'level') {\n      entry[key] = defaults[key];\n    }\n  });\n  Object.keys(data || {}).forEach(function (key) {\n    if (key !== 'level') {\n      entry[key] = data[key];\n    }\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n    args[_key - 5] = arguments[_key];\n  }\n\n  logger[level].apply(logger, [entry, message].concat(args));\n};\n/**\n * Returns a bunyan-compatible logger interface. Uses either provided logger or\n * creates a default console logger\n *\n * @param {Object} [options] Options object that might include 'logger' value\n * @return {Object} bunyan compatible logger\n */\n\n\nmodule.exports.getLogger = function (options, defaults) {\n  options = options || {};\n  var response = {};\n  var levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\n\n  if (!options.logger) {\n    // use vanity logger\n    levels.forEach(function (level) {\n      response[level] = function () {\n        return false;\n      };\n    });\n    return response;\n  }\n\n  var logger = options.logger;\n\n  if (options.logger === true) {\n    // create console logger\n    logger = createDefaultLogger(levels);\n  }\n\n  levels.forEach(function (level) {\n    response[level] = function (data, message) {\n      var _module$exports;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      (_module$exports = module.exports)._logFunc.apply(_module$exports, [logger, level, defaults, data, message].concat(args));\n    };\n  });\n  return response;\n};\n/**\n * Wrapper for creating a callback than either resolves or rejects a promise\n * based on input\n *\n * @param {Function} resolve Function to run if callback is called\n * @param {Function} reject Function to run if callback ends with an error\n */\n\n\nmodule.exports.callbackPromise = function (resolve, reject) {\n  return function () {\n    var args = Array.from(arguments);\n    var err = args.shift();\n\n    if (err) {\n      reject(err);\n    } else {\n      resolve.apply(void 0, _toConsumableArray(args));\n    }\n  };\n};\n/**\n * Resolves a String or a Buffer value for content value. Useful if the value\n * is a Stream or a file or an URL. If the value is a Stream, overwrites\n * the stream object with the resolved value (you can't stream a value twice).\n *\n * This is useful when you want to create a plugin that needs a content value,\n * for example the `html` or `text` value as a String or a Buffer but not as\n * a file path or an URL.\n *\n * @param {Object} data An object or an Array you want to resolve an element for\n * @param {String|Number} key Property name or an Array index\n * @param {Function} callback Callback function with (err, value)\n */\n\n\nmodule.exports.resolveContent = function (data, key, callback) {\n  var promise;\n\n  if (!callback && typeof Promise === 'function') {\n    promise = new Promise(function (resolve, reject) {\n      callback = module.exports.callbackPromise(resolve, reject);\n    });\n  }\n\n  var content = data && data[key] && data[key].content || data[key];\n  var contentStream;\n  var encoding = (typeof data[key] === 'object' && data[key].encoding || 'utf8').toString().toLowerCase().replace(/[-_\\s]/g, '');\n\n  if (!content) {\n    return callback(null, content);\n  }\n\n  if (typeof content === 'object') {\n    if (typeof content.pipe === 'function') {\n      return resolveStream(content, function (err, value) {\n        if (err) {\n          return callback(err);\n        } // we can't stream twice the same content, so we need\n        // to replace the stream object with the streaming result\n\n\n        data[key] = value;\n        callback(null, value);\n      });\n    } else if (/^https?:\\/\\//i.test(content.path || content.href)) {\n      contentStream = fetch(content.path || content.href);\n      return resolveStream(contentStream, callback);\n    } else if (/^data:/i.test(content.path || content.href)) {\n      var parts = (content.path || content.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n\n      if (!parts) {\n        return callback(null, Buffer.from(0));\n      }\n\n      return callback(null, /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2])));\n    } else if (content.path) {\n      return resolveStream(fs.createReadStream(content.path), callback);\n    }\n  }\n\n  if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n    content = Buffer.from(data[key].content, encoding);\n  } // default action, return as is\n\n\n  setImmediate(function () {\n    return callback(null, content);\n  });\n  return promise;\n};\n/**\n * Copies properties from source objects to target objects\n */\n\n\nmodule.exports.assign = function ()\n/* target, ... sources */\n{\n  var args = Array.from(arguments);\n  var target = args.shift() || {};\n  args.forEach(function (source) {\n    Object.keys(source || {}).forEach(function (key) {\n      if (['tls', 'auth'].includes(key) && source[key] && typeof source[key] === 'object') {\n        // tls and auth are special keys that need to be enumerated separately\n        // other objects are passed as is\n        if (!target[key]) {\n          // ensure that target has this key\n          target[key] = {};\n        }\n\n        Object.keys(source[key]).forEach(function (subKey) {\n          target[key][subKey] = source[key][subKey];\n        });\n      } else {\n        target[key] = source[key];\n      }\n    });\n  });\n  return target;\n};\n\nmodule.exports.encodeXText = function (str) {\n  // ! 0x21\n  // + 0x2B\n  // = 0x3D\n  // ~ 0x7E\n  if (!/[^\\x21-\\x2A\\x2C-\\x3C\\x3E-\\x7E]/.test(str)) {\n    return str;\n  }\n\n  var buf = Buffer.from(str);\n  var result = '';\n\n  for (var i = 0, len = buf.length; i < len; i++) {\n    var c = buf[i];\n\n    if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {\n      result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();\n    } else {\n      result += String.fromCharCode(c);\n    }\n  }\n\n  return result;\n};\n/**\n * Streams a stream value into a Buffer\n *\n * @param {Object} stream Readable stream\n * @param {Function} callback Callback function with (err, value)\n */\n\n\nfunction resolveStream(stream, callback) {\n  var responded = false;\n  var chunks = [];\n  var chunklen = 0;\n  stream.on('error', function (err) {\n    if (responded) {\n      return;\n    }\n\n    responded = true;\n    callback(err);\n  });\n  stream.on('readable', function () {\n    var chunk;\n\n    while ((chunk = stream.read()) !== null) {\n      chunks.push(chunk);\n      chunklen += chunk.length;\n    }\n  });\n  stream.on('end', function () {\n    if (responded) {\n      return;\n    }\n\n    responded = true;\n    var value;\n\n    try {\n      value = Buffer.concat(chunks, chunklen);\n    } catch (E) {\n      return callback(E);\n    }\n\n    callback(null, value);\n  });\n}\n/**\n * Generates a bunyan-like logger that prints to console\n *\n * @returns {Object} Bunyan logger instance\n */\n\n\nfunction createDefaultLogger(levels) {\n  var levelMaxLen = 0;\n  var levelNames = new Map();\n  levels.forEach(function (level) {\n    if (level.length > levelMaxLen) {\n      levelMaxLen = level.length;\n    }\n  });\n  levels.forEach(function (level) {\n    var levelName = level.toUpperCase();\n\n    if (levelName.length < levelMaxLen) {\n      levelName += ' '.repeat(levelMaxLen - levelName.length);\n    }\n\n    levelNames.set(level, levelName);\n  });\n\n  var print = function print(level, entry, message) {\n    var prefix = '';\n\n    if (entry) {\n      if (entry.tnx === 'server') {\n        prefix = 'S: ';\n      } else if (entry.tnx === 'client') {\n        prefix = 'C: ';\n      }\n\n      if (entry.sid) {\n        prefix = '[' + entry.sid + '] ' + prefix;\n      }\n\n      if (entry.cid) {\n        prefix = '[#' + entry.cid + '] ' + prefix;\n      }\n    }\n\n    for (var _len3 = arguments.length, args = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      args[_key3 - 3] = arguments[_key3];\n    }\n\n    message = util.format.apply(util, [message].concat(args));\n    message.split(/\\r?\\n/).forEach(function (line) {\n      console.log('[%s] %s %s', new Date().toISOString().substr(0, 19).replace(/T/, ' '), levelNames.get(level), prefix + line);\n    });\n  };\n\n  var logger = {};\n  levels.forEach(function (level) {\n    logger[level] = print.bind(null, level);\n  });\n  return logger;\n}","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/nodemailer/lib/shared/index.js"],"names":["urllib","require","util","fs","fetch","module","exports","parseConnectionUrl","str","options","parse","forEach","url","auth","protocol","secure","direct","isNaN","port","Number","hostname","host","split","user","shift","pass","join","Object","keys","query","key","obj","lKey","value","indexOf","substr","tls","_logFunc","logger","level","defaults","data","message","entry","args","getLogger","response","levels","createDefaultLogger","callbackPromise","resolve","reject","Array","from","arguments","err","resolveContent","callback","promise","Promise","content","contentStream","encoding","toString","toLowerCase","replace","pipe","resolveStream","test","path","href","parts","match","Buffer","decodeURIComponent","createReadStream","includes","setImmediate","assign","target","source","subKey","encodeXText","buf","result","i","len","length","c","toUpperCase","String","fromCharCode","stream","responded","chunks","chunklen","on","chunk","read","push","concat","E","levelMaxLen","levelNames","Map","levelName","repeat","set","print","prefix","tnx","sid","cid","format","line","console","log","Date","toISOString","get","bind"],"mappings":"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","sourcesContent":["/* eslint no-console: 0 */\n\n'use strict';\n\nconst urllib = require('url');\nconst util = require('util');\nconst fs = require('fs');\nconst fetch = require('../fetch');\n\n/**\n * Parses connection url to a structured configuration object\n *\n * @param {String} str Connection url\n * @return {Object} Configuration object\n */\nmodule.exports.parseConnectionUrl = str => {\n    str = str || '';\n    let options = {};\n\n    [urllib.parse(str, true)].forEach(url => {\n        let auth;\n\n        switch (url.protocol) {\n            case 'smtp:':\n                options.secure = false;\n                break;\n            case 'smtps:':\n                options.secure = true;\n                break;\n            case 'direct:':\n                options.direct = true;\n                break;\n        }\n\n        if (!isNaN(url.port) && Number(url.port)) {\n            options.port = Number(url.port);\n        }\n\n        if (url.hostname) {\n            options.host = url.hostname;\n        }\n\n        if (url.auth) {\n            auth = url.auth.split(':');\n\n            if (!options.auth) {\n                options.auth = {};\n            }\n\n            options.auth.user = auth.shift();\n            options.auth.pass = auth.join(':');\n        }\n\n        Object.keys(url.query || {}).forEach(key => {\n            let obj = options;\n            let lKey = key;\n            let value = url.query[key];\n\n            if (!isNaN(value)) {\n                value = Number(value);\n            }\n\n            switch (value) {\n                case 'true':\n                    value = true;\n                    break;\n                case 'false':\n                    value = false;\n                    break;\n            }\n\n            // tls is nested object\n            if (key.indexOf('tls.') === 0) {\n                lKey = key.substr(4);\n                if (!options.tls) {\n                    options.tls = {};\n                }\n                obj = options.tls;\n            } else if (key.indexOf('.') >= 0) {\n                // ignore nested properties besides tls\n                return;\n            }\n\n            if (!(lKey in obj)) {\n                obj[lKey] = value;\n            }\n        });\n    });\n\n    return options;\n};\n\nmodule.exports._logFunc = (logger, level, defaults, data, message, ...args) => {\n    let entry = {};\n\n    Object.keys(defaults || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = defaults[key];\n        }\n    });\n\n    Object.keys(data || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = data[key];\n        }\n    });\n\n    logger[level](entry, message, ...args);\n};\n\n/**\n * Returns a bunyan-compatible logger interface. Uses either provided logger or\n * creates a default console logger\n *\n * @param {Object} [options] Options object that might include 'logger' value\n * @return {Object} bunyan compatible logger\n */\nmodule.exports.getLogger = (options, defaults) => {\n    options = options || {};\n\n    let response = {};\n    let levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\n\n    if (!options.logger) {\n        // use vanity logger\n        levels.forEach(level => {\n            response[level] = () => false;\n        });\n        return response;\n    }\n\n    let logger = options.logger;\n\n    if (options.logger === true) {\n        // create console logger\n        logger = createDefaultLogger(levels);\n    }\n\n    levels.forEach(level => {\n        response[level] = (data, message, ...args) => {\n            module.exports._logFunc(logger, level, defaults, data, message, ...args);\n        };\n    });\n\n    return response;\n};\n\n/**\n * Wrapper for creating a callback than either resolves or rejects a promise\n * based on input\n *\n * @param {Function} resolve Function to run if callback is called\n * @param {Function} reject Function to run if callback ends with an error\n */\nmodule.exports.callbackPromise = (resolve, reject) =>\n    function() {\n        let args = Array.from(arguments);\n        let err = args.shift();\n        if (err) {\n            reject(err);\n        } else {\n            resolve(...args);\n        }\n    };\n\n/**\n * Resolves a String or a Buffer value for content value. Useful if the value\n * is a Stream or a file or an URL. If the value is a Stream, overwrites\n * the stream object with the resolved value (you can't stream a value twice).\n *\n * This is useful when you want to create a plugin that needs a content value,\n * for example the `html` or `text` value as a String or a Buffer but not as\n * a file path or an URL.\n *\n * @param {Object} data An object or an Array you want to resolve an element for\n * @param {String|Number} key Property name or an Array index\n * @param {Function} callback Callback function with (err, value)\n */\nmodule.exports.resolveContent = (data, key, callback) => {\n    let promise;\n\n    if (!callback && typeof Promise === 'function') {\n        promise = new Promise((resolve, reject) => {\n            callback = module.exports.callbackPromise(resolve, reject);\n        });\n    }\n\n    let content = (data && data[key] && data[key].content) || data[key];\n    let contentStream;\n    let encoding = ((typeof data[key] === 'object' && data[key].encoding) || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!content) {\n        return callback(null, content);\n    }\n\n    if (typeof content === 'object') {\n        if (typeof content.pipe === 'function') {\n            return resolveStream(content, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n                // we can't stream twice the same content, so we need\n                // to replace the stream object with the streaming result\n                data[key] = value;\n                callback(null, value);\n            });\n        } else if (/^https?:\\/\\//i.test(content.path || content.href)) {\n            contentStream = fetch(content.path || content.href);\n            return resolveStream(contentStream, callback);\n        } else if (/^data:/i.test(content.path || content.href)) {\n            let parts = (content.path || content.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n            if (!parts) {\n                return callback(null, Buffer.from(0));\n            }\n            return callback(null, /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2])));\n        } else if (content.path) {\n            return resolveStream(fs.createReadStream(content.path), callback);\n        }\n    }\n\n    if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n        content = Buffer.from(data[key].content, encoding);\n    }\n\n    // default action, return as is\n    setImmediate(() => callback(null, content));\n\n    return promise;\n};\n\n/**\n * Copies properties from source objects to target objects\n */\nmodule.exports.assign = function(/* target, ... sources */) {\n    let args = Array.from(arguments);\n    let target = args.shift() || {};\n\n    args.forEach(source => {\n        Object.keys(source || {}).forEach(key => {\n            if (['tls', 'auth'].includes(key) && source[key] && typeof source[key] === 'object') {\n                // tls and auth are special keys that need to be enumerated separately\n                // other objects are passed as is\n                if (!target[key]) {\n                    // ensure that target has this key\n                    target[key] = {};\n                }\n                Object.keys(source[key]).forEach(subKey => {\n                    target[key][subKey] = source[key][subKey];\n                });\n            } else {\n                target[key] = source[key];\n            }\n        });\n    });\n    return target;\n};\n\nmodule.exports.encodeXText = str => {\n    // ! 0x21\n    // + 0x2B\n    // = 0x3D\n    // ~ 0x7E\n    if (!/[^\\x21-\\x2A\\x2C-\\x3C\\x3E-\\x7E]/.test(str)) {\n        return str;\n    }\n    let buf = Buffer.from(str);\n    let result = '';\n    for (let i = 0, len = buf.length; i < len; i++) {\n        let c = buf[i];\n        if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {\n            result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();\n        } else {\n            result += String.fromCharCode(c);\n        }\n    }\n    return result;\n};\n\n/**\n * Streams a stream value into a Buffer\n *\n * @param {Object} stream Readable stream\n * @param {Function} callback Callback function with (err, value)\n */\nfunction resolveStream(stream, callback) {\n    let responded = false;\n    let chunks = [];\n    let chunklen = 0;\n\n    stream.on('error', err => {\n        if (responded) {\n            return;\n        }\n\n        responded = true;\n        callback(err);\n    });\n\n    stream.on('readable', () => {\n        let chunk;\n        while ((chunk = stream.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    stream.on('end', () => {\n        if (responded) {\n            return;\n        }\n        responded = true;\n\n        let value;\n\n        try {\n            value = Buffer.concat(chunks, chunklen);\n        } catch (E) {\n            return callback(E);\n        }\n        callback(null, value);\n    });\n}\n\n/**\n * Generates a bunyan-like logger that prints to console\n *\n * @returns {Object} Bunyan logger instance\n */\nfunction createDefaultLogger(levels) {\n    let levelMaxLen = 0;\n    let levelNames = new Map();\n    levels.forEach(level => {\n        if (level.length > levelMaxLen) {\n            levelMaxLen = level.length;\n        }\n    });\n\n    levels.forEach(level => {\n        let levelName = level.toUpperCase();\n        if (levelName.length < levelMaxLen) {\n            levelName += ' '.repeat(levelMaxLen - levelName.length);\n        }\n        levelNames.set(level, levelName);\n    });\n\n    let print = (level, entry, message, ...args) => {\n        let prefix = '';\n        if (entry) {\n            if (entry.tnx === 'server') {\n                prefix = 'S: ';\n            } else if (entry.tnx === 'client') {\n                prefix = 'C: ';\n            }\n\n            if (entry.sid) {\n                prefix = '[' + entry.sid + '] ' + prefix;\n            }\n\n            if (entry.cid) {\n                prefix = '[#' + entry.cid + '] ' + prefix;\n            }\n        }\n\n        message = util.format(message, ...args);\n        message.split(/\\r?\\n/).forEach(line => {\n            console.log(\n                '[%s] %s %s',\n                new Date()\n                    .toISOString()\n                    .substr(0, 19)\n                    .replace(/T/, ' '),\n                levelNames.get(level),\n                prefix + line\n            );\n        });\n    };\n\n    let logger = {};\n    levels.forEach(level => {\n        logger[level] = print.bind(null, level);\n    });\n\n    return logger;\n}\n"]},"metadata":{},"sourceType":"script"}