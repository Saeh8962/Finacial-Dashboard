{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar _require = require(\"whatwg-url\"),\n    serializeURL = _require.serializeURL;\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar _require3 = require(\"../helpers/events\"),\n    fireAnEvent = _require3.fireAnEvent;\n\nvar _require4 = require(\"../helpers/form-controls\"),\n    formOwner = _require4.formOwner,\n    isListed = _require4.isListed,\n    isSubmittable = _require4.isSubmittable,\n    isSubmitButton = _require4.isSubmitButton;\n\nvar HTMLCollection = require(\"../generated/HTMLCollection\");\n\nvar notImplemented = require(\"../../browser/not-implemented\");\n\nvar _require5 = require(\"../helpers/document-base-url\"),\n    parseURLToResultingURLRecord = _require5.parseURLToResultingURLRecord;\n\nvar encTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nvar methods = new Set([\"get\", \"post\", \"dialog\"]);\nvar constraintValidationPositiveResult = Symbol(\"positive\");\nvar constraintValidationNegativeResult = Symbol(\"negative\");\n\nvar HTMLFormElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLFormElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLFormElementImpl);\n\n  function HTMLFormElementImpl() {\n    _classCallCheck(this, HTMLFormElementImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLFormElementImpl, [{\n    key: \"_descendantAdded\",\n    value: function _descendantAdded(parent, child) {\n      var form = this;\n\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.treeIterator(child)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var el = _step.value;\n\n          if (typeof el._changedFormOwner === \"function\") {\n            el._changedFormOwner(form);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _get(_getPrototypeOf(HTMLFormElementImpl.prototype), \"_descendantAdded\", this).call(this, parent, child);\n    }\n  }, {\n    key: \"_descendantRemoved\",\n    value: function _descendantRemoved(parent, child) {\n      var _iterator2 = _createForOfIteratorHelper(domSymbolTree.treeIterator(child)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var el = _step2.value;\n\n          if (typeof el._changedFormOwner === \"function\") {\n            el._changedFormOwner(null);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      _get(_getPrototypeOf(HTMLFormElementImpl.prototype), \"_descendantRemoved\", this).call(this, parent, child);\n    }\n  }, {\n    key: \"_getElementNodes\",\n    value: function _getElementNodes() {\n      var _this = this;\n\n      return domSymbolTree.treeToArray(this.getRootNode({}), {\n        filter: function filter(node) {\n          if (!isListed(node) || node._localName === \"input\" && node.type === \"image\") {\n            return false;\n          }\n\n          return formOwner(node) === _this;\n        }\n      });\n    } // https://html.spec.whatwg.org/multipage/forms.html#dom-form-elements\n\n  }, {\n    key: \"elements\",\n    get: function get() {\n      var _this2 = this;\n\n      // TODO: Return a HTMLFormControlsCollection\n      return HTMLCollection.createImpl(this._globalObject, [], {\n        element: this.getRootNode({}),\n        query: function query() {\n          return _this2._getElementNodes();\n        }\n      });\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.elements.length;\n    }\n  }, {\n    key: \"_doSubmit\",\n    value: function _doSubmit() {\n      if (!this.isConnected) {\n        return;\n      }\n\n      this.submit();\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (!fireAnEvent(\"submit\", this, undefined, {\n        bubbles: true,\n        cancelable: true\n      })) {\n        return;\n      }\n\n      notImplemented(\"HTMLFormElement.prototype.submit\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"requestSubmit\",\n    value: function requestSubmit() {\n      var submitter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (submitter !== undefined) {\n        if (!isSubmitButton(submitter)) {\n          throw new TypeError(\"The specified element is not a submit button\");\n        }\n\n        if (submitter.form !== this) {\n          throw DOMException.create(this._globalObject, [\"The specified element is not owned by this form element\", \"NotFoundError\"]);\n        }\n      }\n\n      if (!fireAnEvent(\"submit\", this, undefined, {\n        bubbles: true,\n        cancelable: true\n      })) {\n        return;\n      }\n\n      notImplemented(\"HTMLFormElement.prototype.requestSubmit\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"_doReset\",\n    value: function _doReset() {\n      if (!this.isConnected) {\n        return;\n      }\n\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (!fireAnEvent(\"reset\", this, undefined, {\n        bubbles: true,\n        cancelable: true\n      })) {\n        return;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(this.elements),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var el = _step3.value;\n\n          if (typeof el._formReset === \"function\") {\n            el._formReset();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"method\",\n    get: function get() {\n      var method = this.getAttributeNS(null, \"method\");\n\n      if (method) {\n        method = method.toLowerCase();\n      }\n\n      if (methods.has(method)) {\n        return method;\n      }\n\n      return \"get\";\n    },\n    set: function set(V) {\n      this.setAttributeNS(null, \"method\", V);\n    }\n  }, {\n    key: \"enctype\",\n    get: function get() {\n      var type = this.getAttributeNS(null, \"enctype\");\n\n      if (type) {\n        type = type.toLowerCase();\n      }\n\n      if (encTypes.has(type)) {\n        return type;\n      }\n\n      return \"application/x-www-form-urlencoded\";\n    },\n    set: function set(V) {\n      this.setAttributeNS(null, \"enctype\", V);\n    }\n  }, {\n    key: \"action\",\n    get: function get() {\n      var attributeValue = this.getAttributeNS(null, \"action\");\n\n      if (attributeValue === null || attributeValue === \"\") {\n        return this._ownerDocument.URL;\n      }\n\n      var urlRecord = parseURLToResultingURLRecord(attributeValue, this._ownerDocument);\n\n      if (urlRecord === null) {\n        return attributeValue;\n      }\n\n      return serializeURL(urlRecord);\n    },\n    set: function set(V) {\n      this.setAttributeNS(null, \"action\", V);\n    } // If the checkValidity() method is invoked, the user agent must statically validate the\n    // constraints of the form element, and return true if the constraint validation returned\n    // a positive result, and false if it returned a negative result.\n\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity() {\n      return this._staticallyValidateConstraints().result === constraintValidationPositiveResult;\n    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#interactively-validate-the-constraints\n\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      return this.checkValidity();\n    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#statically-validate-the-constraints\n\n  }, {\n    key: \"_staticallyValidateConstraints\",\n    value: function _staticallyValidateConstraints() {\n      var controls = [];\n\n      var _iterator4 = _createForOfIteratorHelper(this.elements),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var el = _step4.value;\n\n          if (el.form === this && isSubmittable(el)) {\n            controls.push(el);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var invalidControls = [];\n\n      for (var _i = 0, _controls = controls; _i < _controls.length; _i++) {\n        var control = _controls[_i];\n\n        if (control._isCandidateForConstraintValidation() && !control._satisfiesConstraints()) {\n          invalidControls.push(control);\n        }\n      }\n\n      if (invalidControls.length === 0) {\n        return {\n          result: constraintValidationPositiveResult\n        };\n      }\n\n      var unhandledInvalidControls = [];\n\n      for (var _i2 = 0, _invalidControls = invalidControls; _i2 < _invalidControls.length; _i2++) {\n        var invalidControl = _invalidControls[_i2];\n        var notCancelled = fireAnEvent(\"invalid\", invalidControl, undefined, {\n          cancelable: true\n        });\n\n        if (notCancelled) {\n          unhandledInvalidControls.push(invalidControl);\n        }\n      }\n\n      return {\n        result: constraintValidationNegativeResult,\n        unhandledInvalidControls: unhandledInvalidControls\n      };\n    }\n  }]);\n\n  return HTMLFormElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLFormElementImpl\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js"],"names":["DOMException","require","serializeURL","HTMLElementImpl","implementation","domSymbolTree","fireAnEvent","formOwner","isListed","isSubmittable","isSubmitButton","HTMLCollection","notImplemented","parseURLToResultingURLRecord","encTypes","Set","methods","constraintValidationPositiveResult","Symbol","constraintValidationNegativeResult","HTMLFormElementImpl","parent","child","form","treeIterator","el","_changedFormOwner","treeToArray","getRootNode","filter","node","_localName","type","createImpl","_globalObject","element","query","_getElementNodes","elements","length","isConnected","submit","undefined","bubbles","cancelable","_ownerDocument","_defaultView","submitter","TypeError","create","reset","_formReset","method","getAttributeNS","toLowerCase","has","V","setAttributeNS","attributeValue","URL","urlRecord","_staticallyValidateConstraints","result","checkValidity","controls","push","invalidControls","control","_isCandidateForConstraintValidation","_satisfiesConstraints","unhandledInvalidControls","invalidControl","notCancelled","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { serializeURL } = require(\"whatwg-url\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { formOwner, isListed, isSubmittable, isSubmitButton } = require(\"../helpers/form-controls\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\n\nconst encTypes = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\n\nconst methods = new Set([\n  \"get\",\n  \"post\",\n  \"dialog\"\n]);\n\nconst constraintValidationPositiveResult = Symbol(\"positive\");\nconst constraintValidationNegativeResult = Symbol(\"negative\");\n\nclass HTMLFormElementImpl extends HTMLElementImpl {\n  _descendantAdded(parent, child) {\n    const form = this;\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(form);\n      }\n    }\n\n    super._descendantAdded(parent, child);\n  }\n\n  _descendantRemoved(parent, child) {\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(null);\n      }\n    }\n\n    super._descendantRemoved(parent, child);\n  }\n\n  _getElementNodes() {\n    return domSymbolTree.treeToArray(this.getRootNode({}), {\n      filter: node => {\n        if (!isListed(node) || (node._localName === \"input\" && node.type === \"image\")) {\n          return false;\n        }\n\n        return formOwner(node) === this;\n      }\n    });\n  }\n\n  // https://html.spec.whatwg.org/multipage/forms.html#dom-form-elements\n  get elements() {\n    // TODO: Return a HTMLFormControlsCollection\n    return HTMLCollection.createImpl(this._globalObject, [], {\n      element: this.getRootNode({}),\n      query: () => this._getElementNodes()\n    });\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  _doSubmit() {\n    if (!this.isConnected) {\n      return;\n    }\n\n    this.submit();\n  }\n\n  submit() {\n    if (!fireAnEvent(\"submit\", this, undefined, { bubbles: true, cancelable: true })) {\n      return;\n    }\n\n    notImplemented(\"HTMLFormElement.prototype.submit\", this._ownerDocument._defaultView);\n  }\n\n  requestSubmit(submitter = undefined) {\n    if (submitter !== undefined) {\n      if (!isSubmitButton(submitter)) {\n        throw new TypeError(\"The specified element is not a submit button\");\n      }\n      if (submitter.form !== this) {\n        throw DOMException.create(this._globalObject, [\n          \"The specified element is not owned by this form element\",\n          \"NotFoundError\"\n        ]);\n      }\n    }\n\n    if (!fireAnEvent(\"submit\", this, undefined, { bubbles: true, cancelable: true })) {\n      return;\n    }\n\n    notImplemented(\"HTMLFormElement.prototype.requestSubmit\", this._ownerDocument._defaultView);\n  }\n\n  _doReset() {\n    if (!this.isConnected) {\n      return;\n    }\n\n    this.reset();\n  }\n\n  reset() {\n    if (!fireAnEvent(\"reset\", this, undefined, { bubbles: true, cancelable: true })) {\n      return;\n    }\n\n    for (const el of this.elements) {\n      if (typeof el._formReset === \"function\") {\n        el._formReset();\n      }\n    }\n  }\n\n  get method() {\n    let method = this.getAttributeNS(null, \"method\");\n    if (method) {\n      method = method.toLowerCase();\n    }\n\n    if (methods.has(method)) {\n      return method;\n    }\n    return \"get\";\n  }\n\n  set method(V) {\n    this.setAttributeNS(null, \"method\", V);\n  }\n\n  get enctype() {\n    let type = this.getAttributeNS(null, \"enctype\");\n    if (type) {\n      type = type.toLowerCase();\n    }\n\n    if (encTypes.has(type)) {\n      return type;\n    }\n    return \"application/x-www-form-urlencoded\";\n  }\n\n  set enctype(V) {\n    this.setAttributeNS(null, \"enctype\", V);\n  }\n\n  get action() {\n    const attributeValue = this.getAttributeNS(null, \"action\");\n    if (attributeValue === null || attributeValue === \"\") {\n      return this._ownerDocument.URL;\n    }\n    const urlRecord = parseURLToResultingURLRecord(attributeValue, this._ownerDocument);\n    if (urlRecord === null) {\n      return attributeValue;\n    }\n    return serializeURL(urlRecord);\n  }\n\n  set action(V) {\n    this.setAttributeNS(null, \"action\", V);\n  }\n\n  // If the checkValidity() method is invoked, the user agent must statically validate the\n  // constraints of the form element, and return true if the constraint validation returned\n  // a positive result, and false if it returned a negative result.\n  checkValidity() {\n    return this._staticallyValidateConstraints().result === constraintValidationPositiveResult;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#interactively-validate-the-constraints\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#statically-validate-the-constraints\n  _staticallyValidateConstraints() {\n    const controls = [];\n    for (const el of this.elements) {\n      if (el.form === this && isSubmittable(el)) {\n        controls.push(el);\n      }\n    }\n\n    const invalidControls = [];\n\n    for (const control of controls) {\n      if (control._isCandidateForConstraintValidation() && !control._satisfiesConstraints()) {\n        invalidControls.push(control);\n      }\n    }\n\n    if (invalidControls.length === 0) {\n      return { result: constraintValidationPositiveResult };\n    }\n\n    const unhandledInvalidControls = [];\n    for (const invalidControl of invalidControls) {\n      const notCancelled = fireAnEvent(\"invalid\", invalidControl, undefined, { cancelable: true });\n      if (notCancelled) {\n        unhandledInvalidControls.push(invalidControl);\n      }\n    }\n\n    return { result: constraintValidationNegativeResult, unhandledInvalidControls };\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLFormElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}