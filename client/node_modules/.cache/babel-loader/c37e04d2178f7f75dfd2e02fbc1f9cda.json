{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar ErrorEvent = require(\"../generated/ErrorEvent\");\n\nvar EventHandlerNonNull = require(\"../generated/EventHandlerNonNull.js\");\n\nvar OnBeforeUnloadEventHandlerNonNull = require(\"../generated/OnBeforeUnloadEventHandlerNonNull.js\");\n\nvar OnErrorEventHandlerNonNull = require(\"../generated/OnErrorEventHandlerNonNull.js\");\n\nvar reportException = require(\"./runtime-script-errors\");\n\nexports.appendHandler = function (el, eventName) {\n  // tryImplForWrapper() is currently required due to use in Window.js\n  idlUtils.tryImplForWrapper(el).addEventListener(eventName, function (event) {\n    // https://html.spec.whatwg.org/#the-event-handler-processing-algorithm\n    var callback = exports.getCurrentEventHandlerValue(el, eventName);\n\n    if (callback === null) {\n      return;\n    }\n\n    var specialError = ErrorEvent.isImpl(event) && event.type === \"error\" && event.currentTarget.constructor.name === \"Window\";\n    var returnValue = null; // https://heycam.github.io/webidl/#es-invoking-callback-functions\n\n    if (typeof callback === \"function\") {\n      if (specialError) {\n        returnValue = callback.call(event.currentTarget, event.message, event.filename, event.lineno, event.colno, event.error);\n      } else {\n        returnValue = callback.call(event.currentTarget, event);\n      }\n    } // TODO: we don't implement BeforeUnloadEvent so we can't brand-check here\n\n\n    if (event.type === \"beforeunload\") {\n      if (returnValue !== null) {\n        event._canceledFlag = true;\n\n        if (event.returnValue === \"\") {\n          event.returnValue = returnValue;\n        }\n      }\n    } else if (specialError) {\n      if (returnValue === true) {\n        event._canceledFlag = true;\n      }\n    } else if (returnValue === false) {\n      event._canceledFlag = true;\n    }\n  });\n}; // \"Simple\" in this case means \"no content attributes involved\"\n\n\nexports.setupForSimpleEventAccessors = function (prototype, events) {\n  prototype._getEventHandlerFor = function (event) {\n    return this._eventHandlers ? this._eventHandlers[event] : undefined;\n  };\n\n  prototype._setEventHandlerFor = function (event, handler) {\n    if (!this._registeredHandlers) {\n      this._registeredHandlers = new Set();\n      this._eventHandlers = Object.create(null);\n    }\n\n    if (!this._registeredHandlers.has(event) && handler !== null) {\n      this._registeredHandlers.add(event);\n\n      exports.appendHandler(this, event);\n    }\n\n    this._eventHandlers[event] = handler;\n  };\n\n  var _iterator = _createForOfIteratorHelper(events),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var event = _step.value;\n      exports.createEventAccessor(prototype, event);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}; // https://html.spec.whatwg.org/multipage/webappapis.html#getting-the-current-value-of-the-event-handler\n\n\nexports.getCurrentEventHandlerValue = function (target, event) {\n  var value = target._getEventHandlerFor(event);\n\n  if (!value) {\n    return null;\n  }\n\n  if (value.body !== undefined) {\n    var element, document, fn;\n\n    if (target.constructor.name === \"Window\") {\n      element = null;\n      document = idlUtils.implForWrapper(target.document);\n    } else {\n      element = target;\n      document = element.ownerDocument;\n    }\n\n    var body = value.body;\n    var formOwner = element !== null && element.form ? element.form : null;\n    var window = target.constructor.name === \"Window\" && target._document ? target : document.defaultView;\n\n    try {\n      // eslint-disable-next-line no-new-func\n      Function(body); // properly error out on syntax errors\n      // Note: this won't execute body; that would require `Function(body)()`.\n    } catch (e) {\n      if (window) {\n        reportException(window, e);\n      }\n\n      target._setEventHandlerFor(event, null);\n\n      return null;\n    } // Note: the with (window) { } is not necessary in Node, but is necessary in a browserified environment.\n\n\n    var createFunction = document.defaultView.Function;\n\n    if (event === \"error\" && element === null) {\n      var sourceURL = document ? \"\\n//# sourceURL=\".concat(document.URL) : \"\";\n      fn = createFunction(\"with (arguments[0]) { return function onerror(event, source, lineno, colno, error) {\\n\".concat(body, \"\\n}; }\").concat(sourceURL))(window);\n      fn = OnErrorEventHandlerNonNull.convert(fn);\n    } else {\n      var calls = [];\n\n      if (element !== null) {\n        calls.push(idlUtils.wrapperForImpl(document));\n      }\n\n      if (formOwner !== null) {\n        calls.push(idlUtils.wrapperForImpl(formOwner));\n      }\n\n      if (element !== null) {\n        calls.push(idlUtils.wrapperForImpl(element));\n      }\n\n      var wrapperBody = \"with (arguments[0]) { return function on\".concat(event, \"(event) {\\n\").concat(body, \"\\n}; }\"); // eslint-disable-next-line no-unused-vars\n\n      for (var _i = 0, _calls = calls; _i < _calls.length; _i++) {\n        var call = _calls[_i];\n        wrapperBody = \"with (arguments[0]) { return function () {\\n\".concat(wrapperBody, \"\\n}; }\");\n      }\n\n      if (document) {\n        wrapperBody += \"\\n//# sourceURL=\".concat(document.URL);\n      }\n\n      fn = createFunction(wrapperBody)(window);\n\n      for (var _i2 = 0, _calls2 = calls; _i2 < _calls2.length; _i2++) {\n        var _call = _calls2[_i2];\n        fn = fn(_call);\n      }\n\n      if (event === \"beforeunload\") {\n        fn = OnBeforeUnloadEventHandlerNonNull.convert(fn);\n      } else {\n        fn = EventHandlerNonNull.convert(fn);\n      }\n    }\n\n    target._setEventHandlerFor(event, fn);\n  }\n\n  return target._getEventHandlerFor(event);\n}; // https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-idl-attributes\n// TODO: Consider replacing this with `[ReflectEvent]`\n\n\nexports.createEventAccessor = function (obj, event) {\n  Object.defineProperty(obj, \"on\" + event, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      return exports.getCurrentEventHandlerValue(this, event);\n    },\n    set: function set(val) {\n      this._setEventHandlerFor(event, val);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/helpers/create-event-accessor.js"],"names":["idlUtils","require","ErrorEvent","EventHandlerNonNull","OnBeforeUnloadEventHandlerNonNull","OnErrorEventHandlerNonNull","reportException","exports","appendHandler","el","eventName","tryImplForWrapper","addEventListener","event","callback","getCurrentEventHandlerValue","specialError","isImpl","type","currentTarget","constructor","name","returnValue","call","message","filename","lineno","colno","error","_canceledFlag","setupForSimpleEventAccessors","prototype","events","_getEventHandlerFor","_eventHandlers","undefined","_setEventHandlerFor","handler","_registeredHandlers","Set","Object","create","has","add","createEventAccessor","target","value","body","element","document","fn","implForWrapper","ownerDocument","formOwner","form","window","_document","defaultView","Function","e","createFunction","sourceURL","URL","convert","calls","push","wrapperForImpl","wrapperBody","obj","defineProperty","configurable","enumerable","get","set","val"],"mappings":"AAAA;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAME,mBAAmB,GAAGF,OAAO,CAAC,qCAAD,CAAnC;;AACA,IAAMG,iCAAiC,GAAGH,OAAO,CAAC,mDAAD,CAAjD;;AACA,IAAMI,0BAA0B,GAAGJ,OAAO,CAAC,4CAAD,CAA1C;;AACA,IAAMK,eAAe,GAAGL,OAAO,CAAC,yBAAD,CAA/B;;AAEAM,OAAO,CAACC,aAAR,GAAwB,UAACC,EAAD,EAAKC,SAAL,EAAmB;AACzC;AACAV,EAAAA,QAAQ,CAACW,iBAAT,CAA2BF,EAA3B,EAA+BG,gBAA/B,CAAgDF,SAAhD,EAA2D,UAAAG,KAAK,EAAI;AAClE;AACA,QAAMC,QAAQ,GAAGP,OAAO,CAACQ,2BAAR,CAAoCN,EAApC,EAAwCC,SAAxC,CAAjB;;AACA,QAAII,QAAQ,KAAK,IAAjB,EAAuB;AACrB;AACD;;AAED,QAAME,YAAY,GAAGd,UAAU,CAACe,MAAX,CAAkBJ,KAAlB,KAA4BA,KAAK,CAACK,IAAN,KAAe,OAA3C,IACnBL,KAAK,CAACM,aAAN,CAAoBC,WAApB,CAAgCC,IAAhC,KAAyC,QAD3C;AAGA,QAAIC,WAAW,GAAG,IAAlB,CAVkE,CAWlE;;AACA,QAAI,OAAOR,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAIE,YAAJ,EAAkB;AAChBM,QAAAA,WAAW,GAAGR,QAAQ,CAACS,IAAT,CACZV,KAAK,CAACM,aADM,EAEZN,KAAK,CAACW,OAFM,EAGZX,KAAK,CAACY,QAHM,EAIZZ,KAAK,CAACa,MAJM,EAKZb,KAAK,CAACc,KALM,EAMZd,KAAK,CAACe,KANM,CAAd;AAQD,OATD,MASO;AACLN,QAAAA,WAAW,GAAGR,QAAQ,CAACS,IAAT,CAAcV,KAAK,CAACM,aAApB,EAAmCN,KAAnC,CAAd;AACD;AACF,KAzBiE,CA2BlE;;;AACA,QAAIA,KAAK,CAACK,IAAN,KAAe,cAAnB,EAAmC;AACjC,UAAII,WAAW,KAAK,IAApB,EAA0B;AACxBT,QAAAA,KAAK,CAACgB,aAAN,GAAsB,IAAtB;;AACA,YAAIhB,KAAK,CAACS,WAAN,KAAsB,EAA1B,EAA8B;AAC5BT,UAAAA,KAAK,CAACS,WAAN,GAAoBA,WAApB;AACD;AACF;AACF,KAPD,MAOO,IAAIN,YAAJ,EAAkB;AACvB,UAAIM,WAAW,KAAK,IAApB,EAA0B;AACxBT,QAAAA,KAAK,CAACgB,aAAN,GAAsB,IAAtB;AACD;AACF,KAJM,MAIA,IAAIP,WAAW,KAAK,KAApB,EAA2B;AAChCT,MAAAA,KAAK,CAACgB,aAAN,GAAsB,IAAtB;AACD;AACF,GA1CD;AA2CD,CA7CD,C,CA+CA;;;AACAtB,OAAO,CAACuB,4BAAR,GAAuC,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AAC5DD,EAAAA,SAAS,CAACE,mBAAV,GAAgC,UAAUpB,KAAV,EAAiB;AAC/C,WAAO,KAAKqB,cAAL,GAAsB,KAAKA,cAAL,CAAoBrB,KAApB,CAAtB,GAAmDsB,SAA1D;AACD,GAFD;;AAIAJ,EAAAA,SAAS,CAACK,mBAAV,GAAgC,UAAUvB,KAAV,EAAiBwB,OAAjB,EAA0B;AACxD,QAAI,CAAC,KAAKC,mBAAV,EAA+B;AAC7B,WAAKA,mBAAL,GAA2B,IAAIC,GAAJ,EAA3B;AACA,WAAKL,cAAL,GAAsBM,MAAM,CAACC,MAAP,CAAc,IAAd,CAAtB;AACD;;AAED,QAAI,CAAC,KAAKH,mBAAL,CAAyBI,GAAzB,CAA6B7B,KAA7B,CAAD,IAAwCwB,OAAO,KAAK,IAAxD,EAA8D;AAC5D,WAAKC,mBAAL,CAAyBK,GAAzB,CAA6B9B,KAA7B;;AACAN,MAAAA,OAAO,CAACC,aAAR,CAAsB,IAAtB,EAA4BK,KAA5B;AACD;;AACD,SAAKqB,cAAL,CAAoBrB,KAApB,IAA6BwB,OAA7B;AACD,GAXD;;AAL4D,6CAkBxCL,MAlBwC;AAAA;;AAAA;AAkB5D,wDAA4B;AAAA,UAAjBnB,KAAiB;AAC1BN,MAAAA,OAAO,CAACqC,mBAAR,CAA4Bb,SAA5B,EAAuClB,KAAvC;AACD;AApB2D;AAAA;AAAA;AAAA;AAAA;AAqB7D,CArBD,C,CAuBA;;;AACAN,OAAO,CAACQ,2BAAR,GAAsC,UAAC8B,MAAD,EAAShC,KAAT,EAAmB;AACvD,MAAMiC,KAAK,GAAGD,MAAM,CAACZ,mBAAP,CAA2BpB,KAA3B,CAAd;;AACA,MAAI,CAACiC,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,CAACC,IAAN,KAAeZ,SAAnB,EAA8B;AAC5B,QAAIa,OAAJ,EAAaC,QAAb,EAAuBC,EAAvB;;AACA,QAAIL,MAAM,CAACzB,WAAP,CAAmBC,IAAnB,KAA4B,QAAhC,EAA0C;AACxC2B,MAAAA,OAAO,GAAG,IAAV;AACAC,MAAAA,QAAQ,GAAGjD,QAAQ,CAACmD,cAAT,CAAwBN,MAAM,CAACI,QAA/B,CAAX;AACD,KAHD,MAGO;AACLD,MAAAA,OAAO,GAAGH,MAAV;AACAI,MAAAA,QAAQ,GAAGD,OAAO,CAACI,aAAnB;AACD;;AACD,QAAQL,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AAEA,QAAMM,SAAS,GAAGL,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAACM,IAA5B,GAAmCN,OAAO,CAACM,IAA3C,GAAkD,IAApE;AACA,QAAMC,MAAM,GAAGV,MAAM,CAACzB,WAAP,CAAmBC,IAAnB,KAA4B,QAA5B,IAAwCwB,MAAM,CAACW,SAA/C,GAA2DX,MAA3D,GAAoEI,QAAQ,CAACQ,WAA5F;;AAEA,QAAI;AACF;AACAC,MAAAA,QAAQ,CAACX,IAAD,CAAR,CAFE,CAEc;AAChB;AACD,KAJD,CAIE,OAAOY,CAAP,EAAU;AACV,UAAIJ,MAAJ,EAAY;AACVjD,QAAAA,eAAe,CAACiD,MAAD,EAASI,CAAT,CAAf;AACD;;AACDd,MAAAA,MAAM,CAACT,mBAAP,CAA2BvB,KAA3B,EAAkC,IAAlC;;AACA,aAAO,IAAP;AACD,KAxB2B,CA0B5B;;;AAEA,QAAM+C,cAAc,GAAGX,QAAQ,CAACQ,WAAT,CAAqBC,QAA5C;;AACA,QAAI7C,KAAK,KAAK,OAAV,IAAqBmC,OAAO,KAAK,IAArC,EAA2C;AACzC,UAAMa,SAAS,GAAGZ,QAAQ,6BAAsBA,QAAQ,CAACa,GAA/B,IAAuC,EAAjE;AAEAZ,MAAAA,EAAE,GAAGU,cAAc,iGAEvBb,IAFuB,mBAGnBc,SAHmB,EAAd,CAGQN,MAHR,CAAL;AAKAL,MAAAA,EAAE,GAAG7C,0BAA0B,CAAC0D,OAA3B,CAAmCb,EAAnC,CAAL;AACD,KATD,MASO;AACL,UAAMc,KAAK,GAAG,EAAd;;AACA,UAAIhB,OAAO,KAAK,IAAhB,EAAsB;AACpBgB,QAAAA,KAAK,CAACC,IAAN,CAAWjE,QAAQ,CAACkE,cAAT,CAAwBjB,QAAxB,CAAX;AACD;;AAED,UAAII,SAAS,KAAK,IAAlB,EAAwB;AACtBW,QAAAA,KAAK,CAACC,IAAN,CAAWjE,QAAQ,CAACkE,cAAT,CAAwBb,SAAxB,CAAX;AACD;;AAED,UAAIL,OAAO,KAAK,IAAhB,EAAsB;AACpBgB,QAAAA,KAAK,CAACC,IAAN,CAAWjE,QAAQ,CAACkE,cAAT,CAAwBlB,OAAxB,CAAX;AACD;;AAED,UAAImB,WAAW,qDACqBtD,KADrB,wBAEnBkC,IAFmB,WAAf,CAdK,CAmBL;;AACA,gCAAmBiB,KAAnB,4BAA0B;AAArB,YAAMzC,IAAI,aAAV;AACH4C,QAAAA,WAAW,yDAEjBA,WAFiB,WAAX;AAID;;AAED,UAAIlB,QAAJ,EAAc;AACZkB,QAAAA,WAAW,8BAAuBlB,QAAQ,CAACa,GAAhC,CAAX;AACD;;AAEDZ,MAAAA,EAAE,GAAGU,cAAc,CAACO,WAAD,CAAd,CAA4BZ,MAA5B,CAAL;;AACA,kCAAmBS,KAAnB,+BAA0B;AAArB,YAAMzC,KAAI,eAAV;AACH2B,QAAAA,EAAE,GAAGA,EAAE,CAAC3B,KAAD,CAAP;AACD;;AAED,UAAIV,KAAK,KAAK,cAAd,EAA8B;AAC5BqC,QAAAA,EAAE,GAAG9C,iCAAiC,CAAC2D,OAAlC,CAA0Cb,EAA1C,CAAL;AACD,OAFD,MAEO;AACLA,QAAAA,EAAE,GAAG/C,mBAAmB,CAAC4D,OAApB,CAA4Bb,EAA5B,CAAL;AACD;AACF;;AAEDL,IAAAA,MAAM,CAACT,mBAAP,CAA2BvB,KAA3B,EAAkCqC,EAAlC;AACD;;AAED,SAAOL,MAAM,CAACZ,mBAAP,CAA2BpB,KAA3B,CAAP;AACD,CA3FD,C,CA6FA;AACA;;;AACAN,OAAO,CAACqC,mBAAR,GAA8B,UAACwB,GAAD,EAAMvD,KAAN,EAAgB;AAC5C2B,EAAAA,MAAM,CAAC6B,cAAP,CAAsBD,GAAtB,EAA2B,OAAOvD,KAAlC,EAAyC;AACvCyD,IAAAA,YAAY,EAAE,IADyB;AAEvCC,IAAAA,UAAU,EAAE,IAF2B;AAGvCC,IAAAA,GAHuC,iBAGjC;AACJ,aAAOjE,OAAO,CAACQ,2BAAR,CAAoC,IAApC,EAA0CF,KAA1C,CAAP;AACD,KALsC;AAMvC4D,IAAAA,GANuC,eAMnCC,GANmC,EAM9B;AACP,WAAKtC,mBAAL,CAAyBvB,KAAzB,EAAgC6D,GAAhC;AACD;AARsC,GAAzC;AAUD,CAXD","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst ErrorEvent = require(\"../generated/ErrorEvent\");\nconst EventHandlerNonNull = require(\"../generated/EventHandlerNonNull.js\");\nconst OnBeforeUnloadEventHandlerNonNull = require(\"../generated/OnBeforeUnloadEventHandlerNonNull.js\");\nconst OnErrorEventHandlerNonNull = require(\"../generated/OnErrorEventHandlerNonNull.js\");\nconst reportException = require(\"./runtime-script-errors\");\n\nexports.appendHandler = (el, eventName) => {\n  // tryImplForWrapper() is currently required due to use in Window.js\n  idlUtils.tryImplForWrapper(el).addEventListener(eventName, event => {\n    // https://html.spec.whatwg.org/#the-event-handler-processing-algorithm\n    const callback = exports.getCurrentEventHandlerValue(el, eventName);\n    if (callback === null) {\n      return;\n    }\n\n    const specialError = ErrorEvent.isImpl(event) && event.type === \"error\" &&\n      event.currentTarget.constructor.name === \"Window\";\n\n    let returnValue = null;\n    // https://heycam.github.io/webidl/#es-invoking-callback-functions\n    if (typeof callback === \"function\") {\n      if (specialError) {\n        returnValue = callback.call(\n          event.currentTarget,\n          event.message,\n          event.filename,\n          event.lineno,\n          event.colno,\n          event.error\n        );\n      } else {\n        returnValue = callback.call(event.currentTarget, event);\n      }\n    }\n\n    // TODO: we don't implement BeforeUnloadEvent so we can't brand-check here\n    if (event.type === \"beforeunload\") {\n      if (returnValue !== null) {\n        event._canceledFlag = true;\n        if (event.returnValue === \"\") {\n          event.returnValue = returnValue;\n        }\n      }\n    } else if (specialError) {\n      if (returnValue === true) {\n        event._canceledFlag = true;\n      }\n    } else if (returnValue === false) {\n      event._canceledFlag = true;\n    }\n  });\n};\n\n// \"Simple\" in this case means \"no content attributes involved\"\nexports.setupForSimpleEventAccessors = (prototype, events) => {\n  prototype._getEventHandlerFor = function (event) {\n    return this._eventHandlers ? this._eventHandlers[event] : undefined;\n  };\n\n  prototype._setEventHandlerFor = function (event, handler) {\n    if (!this._registeredHandlers) {\n      this._registeredHandlers = new Set();\n      this._eventHandlers = Object.create(null);\n    }\n\n    if (!this._registeredHandlers.has(event) && handler !== null) {\n      this._registeredHandlers.add(event);\n      exports.appendHandler(this, event);\n    }\n    this._eventHandlers[event] = handler;\n  };\n\n  for (const event of events) {\n    exports.createEventAccessor(prototype, event);\n  }\n};\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#getting-the-current-value-of-the-event-handler\nexports.getCurrentEventHandlerValue = (target, event) => {\n  const value = target._getEventHandlerFor(event);\n  if (!value) {\n    return null;\n  }\n\n  if (value.body !== undefined) {\n    let element, document, fn;\n    if (target.constructor.name === \"Window\") {\n      element = null;\n      document = idlUtils.implForWrapper(target.document);\n    } else {\n      element = target;\n      document = element.ownerDocument;\n    }\n    const { body } = value;\n\n    const formOwner = element !== null && element.form ? element.form : null;\n    const window = target.constructor.name === \"Window\" && target._document ? target : document.defaultView;\n\n    try {\n      // eslint-disable-next-line no-new-func\n      Function(body); // properly error out on syntax errors\n      // Note: this won't execute body; that would require `Function(body)()`.\n    } catch (e) {\n      if (window) {\n        reportException(window, e);\n      }\n      target._setEventHandlerFor(event, null);\n      return null;\n    }\n\n    // Note: the with (window) { } is not necessary in Node, but is necessary in a browserified environment.\n\n    const createFunction = document.defaultView.Function;\n    if (event === \"error\" && element === null) {\n      const sourceURL = document ? `\\n//# sourceURL=${document.URL}` : \"\";\n\n      fn = createFunction(`\\\nwith (arguments[0]) { return function onerror(event, source, lineno, colno, error) {\n${body}\n}; }${sourceURL}`)(window);\n\n      fn = OnErrorEventHandlerNonNull.convert(fn);\n    } else {\n      const calls = [];\n      if (element !== null) {\n        calls.push(idlUtils.wrapperForImpl(document));\n      }\n\n      if (formOwner !== null) {\n        calls.push(idlUtils.wrapperForImpl(formOwner));\n      }\n\n      if (element !== null) {\n        calls.push(idlUtils.wrapperForImpl(element));\n      }\n\n      let wrapperBody = `\\\nwith (arguments[0]) { return function on${event}(event) {\n${body}\n}; }`;\n\n      // eslint-disable-next-line no-unused-vars\n      for (const call of calls) {\n        wrapperBody = `\\\nwith (arguments[0]) { return function () {\n${wrapperBody}\n}; }`;\n      }\n\n      if (document) {\n        wrapperBody += `\\n//# sourceURL=${document.URL}`;\n      }\n\n      fn = createFunction(wrapperBody)(window);\n      for (const call of calls) {\n        fn = fn(call);\n      }\n\n      if (event === \"beforeunload\") {\n        fn = OnBeforeUnloadEventHandlerNonNull.convert(fn);\n      } else {\n        fn = EventHandlerNonNull.convert(fn);\n      }\n    }\n\n    target._setEventHandlerFor(event, fn);\n  }\n\n  return target._getEventHandlerFor(event);\n};\n\n// https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-idl-attributes\n// TODO: Consider replacing this with `[ReflectEvent]`\nexports.createEventAccessor = (obj, event) => {\n  Object.defineProperty(obj, \"on\" + event, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      return exports.getCurrentEventHandlerValue(this, event);\n    },\n    set(val) {\n      this._setEventHandlerFor(event, val);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}