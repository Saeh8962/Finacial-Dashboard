{"ast":null,"code":"var _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx\";\nimport React, { Component, ChildComponent } from \"react\";\nimport { ListGroup } from \"react-bootstrap/esm\";\nimport { Button, DropdownMenu, Dropdown } from \"reactstrap/es\";\nimport { withRouter } from \"react-router-dom\"; // import \"./CSS/GlobalCSS.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WatchList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveNewStockTrade = event => {\n      let result = JSON.parse(event.data);\n      console.log(result);\n      let user_watchlist = this.state.stocks;\n      console.log(\"InsidesaveNewStockTrade: \", user_watchlist);\n\n      if (result.type === \"trade\") {\n        user_watchlist.forEach(symbol => {\n          var tradePrice = result.data.filter((i, n) => i.s === symbol.Symbol);\n\n          if (tradePrice.length !== 0) {\n            symbol.currentPrice = tradePrice[tradePrice.length - 1].p;\n            console.log(\"Found Updated price for \", symbol.Symbol); // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n          }\n        });\n      }\n\n      this.setState({\n        stocks: user_watchlist\n      });\n    };\n\n    this.saveNewStockTrade = this.saveNewStockTrade.bind(this);\n    this.getUserStocks = this.getUserStocks.bind(this);\n    this.UpdateStockOnPage = this.UpdateStockOnPage.bind(this);\n    this.addUserStock = this.addUserStock.bind(this); // this.updateDropdown=this.updateDropdown.bind(this);\n\n    this.handleChange = this.handleChange.bind(this); // this.updatePage= this.updatePage.bind(this);\n\n    this.removeStock = this.removeStock.bind(this); // this.UpdateStockOnPageRemove=this.UpdateStockOnPageRemove.bind(this); \n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      email: this.props.email,\n      stocks: this.props.stocks,\n      connectionError: false,\n      dropdownOpen: false,\n      value: \"Your Watchlist\"\n    };\n  }\n\n  componentWillMount() {\n    this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n    this.getUserStocks();\n  }\n\n  componentWillUnmount() {\n    this.state.stocks.forEach(symbol => {\n      this.connection.send(JSON.stringify({\n        'type': 'unsubscribe',\n        'symbol': symbol.Symbol\n      }));\n    });\n    this.connection.close(); // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n    // or cleaning up any subscriptions that were created in componentDidMount().\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.stocks !== this.state.stocks) {\n      console.log('stocks state has changed.');\n      this.props.history.push(\"/profile\", [[{\n        email: this.state.email\n      }], this.state.stocks]);\n    }\n  }\n\n  toggle(event) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n      value: event.currentTarget.textContent\n    });\n  }\n\n  componentDidMount() {\n    this.connection.onopen = () => {\n      if (this.state.stocks !== \"No stocks added\") {\n        this.state.stocks.forEach(symbol => {\n          this.connection.send(JSON.stringify({\n            'type': 'subscribe',\n            'symbol': symbol.Symbol\n          }));\n          console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol);\n        });\n      } else {\n        console.log(\"no stocks added to subscribe to\");\n      }\n    };\n\n    this.connection.onmessage = this.saveNewStockTrade;\n\n    this.connection.onclose = () => {\n      this.setState({\n        connectionError: true\n      });\n    };\n  } // updateDropdown(){\n  //     var Message = \"Your WatchList\";\n  //     if(this.state.stocks===\"No stocks added\"){\n  //         Message =\"Empty Watchlist\"; \n  //     }\n  //     var MessageArrowDir;\n  //     if(this.state.dropdownOpen){\n  //       MessageArrowDir = \"\\u25BC\";\n  //     }\n  //     else{\n  //       MessageArrowDir = \"\\u25B2\";\n  //     }\n  //     var header =\n  //         <> <div className = \"dropDiv\">\n  //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n  //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n  //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n  //         </div></>\n  //     if(this.state.stocks!==\"No stocks added\"){\n  //     var display = \n  //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n  //         {header}\n  //         <DropdownMenu className = \"DDM\">\n  //           <div className = \"ArtistsDisplayWrapper\">\n  //             {this.state.stocks.map((stocks,index) =>\n  //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n  //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n  //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n  //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n  //         </div>\n  //             )}\n  //           </div>\n  //         </DropdownMenu>\n  //     </Dropdown>\n  //     this.setState({dropdownDisplay:display});\n  //             }\n  //             else{\n  //                 this.setState({dropdownDisplay:header});\n  //             }\n  // }\n\n\n  removeStock(htmlEvent, stock) {\n    //unsubsribe from listening to thsi stock\n    console.log(\"Unsubscribing from: \", stock);\n    this.connection.send(JSON.stringify({\n      'type': 'unsubscribe',\n      'symbol': stock\n    })); //first stop the htmlEvents default status\n\n    htmlEvent.preventDefault();\n    var user = {\n      email: this.props.email,\n      stock_symbol: stock\n    };\n    console.log(user);\n    var url = '/api/removeUserStock';\n    const req = new Request(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    fetch(req).then(res => {\n      if (res.status === 500) {\n        res.json().then(json => {\n          const message = json.message,\n                stackTrace = json.stackTrace;\n        }).catch(error => {\n          return Promise.reject(error);\n        });\n      } else {\n        return res.json();\n      }\n    }).then(result => {\n      console.log(\"1st remove stock rerender\");\n      this.setState({\n        remove_status: result\n      }, () => this.removeHelper());\n    });\n  }\n\n  removeHelper() {\n    console.log(\"p/179\", this.state.remove_status); //removed but still showing on watch list\n\n    if (this.state.remove_status.response === \"Stock not on watch list\") {\n      alert(\"Stock Queued For Deletion, Please Login In Again\");\n    } //stock has been removed from watchlist\n    else if (this.state.remove_status.Response === \"Sucessfully removed stock\") {\n        console.log(\"2nd remove stock rerender\");\n        this.setState({\n          Remove_Status: \"\"\n        }, () => this.getUserStocks());\n      }\n  }\n\n  getUserStocks() {\n    var user = {\n      email: this.state.email\n    };\n    var url = \"/api/getUserStocks\";\n    const req = new Request(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    fetch(req).then(res => {\n      return res.json();\n    }).catch(error => {\n      console.log(\"p/121\");\n      console.log(error);\n      return Promise.reject(error);\n    }).then(stock_results => {\n      console.log(\"3rdt ADD/remove Stock Rerender\");\n      this.setState({\n        stocks: stock_results\n      }, () => this.updatePage);\n    });\n  }\n\n  updatePage() {\n    console.log(\"In update page \", this.state.stocks);\n    this.props.history.push(\"/profile\", [[{\n      email: this.state.email\n    }], this.state.stocks]);\n  }\n\n  UpdateStockOnPage() {\n    if (this.state.stock_symbol_status === 'User had already added this stock') {\n      alert(\"This stock is already on your watchlist\");\n    } else {\n      console.log(\"2nd ADD Stock Rerender\");\n      this.setState({\n        stock_symbol_status: \"\",\n        Remove_Status: \"\"\n      }, () => this.getUserStocks());\n    }\n  }\n\n  addUserStock() {\n    if (this.state.stock_symbol_status !== \"stock not found\") {\n      console.log(\"Subscribing to \", this.state.stock_to_watch);\n      this.connection.send(JSON.stringify({\n        'type': 'subscribe',\n        'symbol': this.state.stock_to_watch\n      }));\n      var user = {\n        email: this.props.email,\n        addStock: this.state.stock_to_watch\n      };\n      var url = \"/api/AddUserStocks\";\n      const req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(res => {\n        return res.json();\n      }).catch(error => {\n        return Promise.reject(error);\n      }).then(result => {\n        console.log(\"1st ADD Stock Rerender\");\n        this.setState({\n          stock_symbol_status: result\n        }, () => this.UpdateStockOnPage());\n      });\n    } else {\n      //put in this functionality \n      alert(\"stock not found\");\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      stock_to_watch: event.target.value\n    });\n  }\n\n  render() {\n    console.log(\"In render: \", this.state.stocks, this.props.stocks); // console.log(\"In render: \", this.state.dropdownDisplay);\n\n    if (this.state == null) {\n      this.props.history.push(\"/error\");\n    }\n\n    var Message = \"Your WatchList\";\n\n    if (this.state.stocks === \"No stocks added\") {\n      Message = \"Empty Watchlist\";\n    }\n\n    var MessageArrowDir;\n\n    if (this.state.dropdownOpen) {\n      MessageArrowDir = \"\\u25BC\";\n    } else {\n      MessageArrowDir = \"\\u25B2\";\n    }\n\n    var dropdownDisplay = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"FakeDropDown\",\n          onClick: e => {\n            this.doNothing(e);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"55px\"\n            },\n            children: Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 89\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"realDropDown \",\n          onClick: this.toggle,\n          \"aria-expanded\": this.state.dropdownOpen,\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"18px\"\n            },\n            children: MessageArrowDir\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n\n    var dropdown;\n\n    if (this.state.stocks !== \"No stocks added\") {\n      dropdown = /*#__PURE__*/_jsxDEV(Dropdown, {\n        style: {\n          marginBottom: \"20px\"\n        },\n        isOpen: this.state.dropdownOpen,\n        children: [dropdownDisplay, /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          className: \"DDM\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ArtistsDisplayWrapper\",\n            children: this.state.stocks.map((stocks, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ArtistLine\",\n              style: {\n                marginBottom: \"55px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  this.doNothing(e);\n                },\n                className: \"artistButton\",\n                children: stocks.Symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: stocks.symbol,\n                onClick: e => {\n                  this.doNothing(e);\n                },\n                className: \"playArtistButton\",\n                children: [\"$\", stocks.currentPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  this.removeStock(e, stocks.Symbol);\n                },\n                className: \"removeButton\",\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this);\n    } else {\n      dropdown = dropdownDisplay;\n    } // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n    // this.props.history.push(\"/error\",this.state)\n\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ALL\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HeaderInfo\",\n          id: \"ProfileInfo\",\n          children: [\"Hey! \", this.state.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"FormFields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormField\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleChange,\n              className: \"FormField_Input\",\n              placeholder: \"Stock Name\",\n              type: \"text\",\n              name: \"stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"play\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.addUserStock,\n                className: \"ButtonNoRight\",\n                children: \"Track \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), dropdown]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(WatchList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx"],"names":["React","Component","ChildComponent","ListGroup","Button","DropdownMenu","Dropdown","withRouter","WatchList","constructor","props","saveNewStockTrade","event","result","JSON","parse","data","console","log","user_watchlist","state","stocks","type","forEach","symbol","tradePrice","filter","i","n","s","Symbol","length","currentPrice","p","setState","bind","getUserStocks","UpdateStockOnPage","addUserStock","handleChange","removeStock","toggle","email","connectionError","dropdownOpen","value","componentWillMount","connection","WebSocket","componentWillUnmount","send","stringify","close","componentDidUpdate","prevProps","prevState","history","push","currentTarget","textContent","componentDidMount","onopen","onmessage","onclose","htmlEvent","stock","preventDefault","user","stock_symbol","url","req","Request","method","headers","body","fetch","then","res","status","json","message","stackTrace","catch","error","Promise","reject","remove_status","removeHelper","response","alert","Response","Remove_Status","stock_results","updatePage","stock_symbol_status","stock_to_watch","addStock","target","render","Message","MessageArrowDir","dropdownDisplay","e","doNothing","marginLeft","fontSize","dropdown","marginBottom","map","index"],"mappings":"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","sourcesContent":["import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\n// import \"./CSS/GlobalCSS.css\";\n\nclass WatchList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.saveNewStockTrade=this.saveNewStockTrade.bind(this);\n        this.getUserStocks= this.getUserStocks.bind(this);\n        this.UpdateStockOnPage= this.UpdateStockOnPage.bind(this);\n        this.addUserStock = this.addUserStock.bind(this);\n        // this.updateDropdown=this.updateDropdown.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        // this.updatePage= this.updatePage.bind(this);\n        this.removeStock= this.removeStock.bind(this);\n        // this.UpdateStockOnPageRemove=this.UpdateStockOnPageRemove.bind(this); \n        this.toggle=this.toggle.bind(this);\n       \n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\"\n            }\n        \n        \n    }\n    componentWillMount(){\n        this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        this.getUserStocks();\n        \n    }\n    componentWillUnmount(){\n        \n        this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n        })\n        this.connection.close();\n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.stocks !== this.state.stocks) {\n          console.log('stocks state has changed.')\n          this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n        }\n      }\n    toggle(event) {\n        this.setState({\n          dropdownOpen: !this.state.dropdownOpen,\n          value: event.currentTarget.textContent\n        });\n      }\n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        console.log(result)\n        let user_watchlist = this.state.stocks\n        console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol.Symbol);\n                if(tradePrice.length !==0){\n                    symbol.currentPrice = tradePrice[tradePrice.length-1].p; \n                    console.log(\"Found Updated price for \",symbol.Symbol)\n                    // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n                }\n            })\n            \n        }\n        this.setState({stocks:user_watchlist});\n    }\n     \n    componentDidMount(){\n       \n        this.connection.onopen = ()=> { \n            if (this.state.stocks!==\"No stocks added\"){\n                this.state.stocks.forEach(symbol=>{\n                    this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol.Symbol}));\n                    console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol)\n                })\n            }\n            else{\n                console.log(\"no stocks added to subscribe to\");\n            }\n            \n        }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n    }\n    \n    // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    \n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n        \n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n    //         </div></>\n        \n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    \n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n                \n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n        \n\n    // }\n   \n    removeStock(htmlEvent,stock){\n        //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock)\n        this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock}))\n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock,\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n              return res.json();\n            }\n          })\n          .then((result)=> {\n              console.log(\"1st remove stock rerender\");\n              this.setState({remove_status:result},()=>this.removeHelper())});\n    \n    }\n    \n    removeHelper(){\n        console.log(\"p/179\",this.state.remove_status);\n        //removed but still showing on watch list\n        if(this.state.remove_status.response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(this.state.remove_status.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({Remove_Status:\"\"},()=>this.getUserStocks());\n           \n        }\n    }\n    getUserStocks(){\n        var user={ \n            email: this.state.email,\n        }\n        var url = \"/api/getUserStocks\";\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n           \n            return res.json();\n        }).catch((error)=>{\n            console.log(\"p/121\");\n            console.log(error);\n            return Promise.reject(error);\n            })\n        .then(stock_results => {\n            console.log(\"3rdt ADD/remove Stock Rerender\");\n            this.setState({stocks:stock_results},()=>this.updatePage)});\n        \n    }\n    \n    updatePage(){\n        console.log(\"In update page \",this.state.stocks);\n        \n        this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n        \n        \n        \n    }\n    \n    UpdateStockOnPage(){\n        if(this.state.stock_symbol_status === 'User had already added this stock'){\n            alert(\"This stock is already on your watchlist\");\n        }\n        \n        else{\n            console.log(\"2nd ADD Stock Rerender\");\n            this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n        }\n    }\n\n    addUserStock(){\n        if(this.state.stock_symbol_status !== \"stock not found\"){\n            console.log(\"Subscribing to \",this.state.stock_to_watch)\n            this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n            var user={\n                email:this.props.email,\n                addStock: this.state.stock_to_watch\n            } \n           \n            var url=\"/api/AddUserStocks\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            fetch(req)\n            .then((res)=>{\n                \n                return res.json();\n            }).catch((error)=>{\n                return Promise.reject(error);\n              })\n            .then(result => {\n                console.log(\"1st ADD Stock Rerender\");\n                this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n            \n        }\n    \n        else{\n            //put in this functionality \n            alert(\"stock not found\");\n        }\n        \n        \n    }\n    handleChange(event) {\n         \n        this.setState({stock_to_watch: event.target.value});\n      }\n    \n    render(){\n       \n        console.log(\"In render: \", this.state.stocks,this.props.stocks);\n        // console.log(\"In render: \", this.state.dropdownDisplay);\n        if (this.state == null){\n            this.props.history.push(\"/error\");\n            }\n        \n        \n        var Message = \"Your WatchList\";\n        if(this.state.stocks===\"No stocks added\"){\n            Message =\"Empty Watchlist\"; \n        }\n        var MessageArrowDir;\n        if(this.state.dropdownOpen){\n          MessageArrowDir = \"\\u25BC\";\n        }\n    \n        else{\n          MessageArrowDir = \"\\u25B2\";\n        }\n        \n        var dropdownDisplay =\n            <> <div className = \"dropDiv\">\n                <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n                <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n                        data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n            </div></>\n        var dropdown;\n        if(this.state.stocks!==\"No stocks added\"){\n    \n        dropdown = \n    \n        <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n            {dropdownDisplay}\n    \n            <DropdownMenu className = \"DDM\">\n              <div className = \"ArtistsDisplayWrapper\">\n                {this.state.stocks.map((stocks,index) =>\n                \n            <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n                <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n                <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n                <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n            </div>\n                )}\n              </div>\n            </DropdownMenu>\n        </Dropdown>\n        }\n        else{\n            dropdown = dropdownDisplay;\n    \n           \n      \n        }\n       \n        // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n    \n        // this.props.history.push(\"/error\",this.state)\n        return (\n            \n            <>\n    <div className = \"ALL\">\n    \n            <div className= \"HeaderInfo\" id=\"ProfileInfo\">\n              Hey! {this.state.email}<br></br>\n            </div>\n    \n            <form className= \"FormFields\">\n              <div className=\"FormField\">\n                <input onChange={this.handleChange} className= \"FormField_Input\" placeholder= \"Stock Name\" type=\"text\" name=\"stock\" />\n                <span className = \"play\"><Button onClick={this.addUserStock} className= \"ButtonNoRight\" >Track </Button></span> \n              \n              </div>\n              {/* {trackButton} */}\n              {dropdown}\n    \n          \n    \n              {/* <div style = {{fontSize:12},{marginTop:\"20px\"},{marginBottom:\"20px\"}}>An email will be sent to you at the email above when your artist releases new music.</div>  */}\n    \n            </form>\n    \n          </div>\n            </>\n          );\n        }\n}\nexport default withRouter(WatchList);"]},"metadata":{},"sourceType":"module"}