{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar punycode = require(\"punycode\");\n\nvar urlParse = require(\"url\").parse;\n\nvar util = require(\"util\");\n\nvar pubsuffix = require(\"./pubsuffix-psl\");\n\nvar Store = require(\"./store\").Store;\n\nvar MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\n\nvar pathMatch = require(\"./pathMatch\").pathMatch;\n\nvar VERSION = require(\"./version\");\n\nvar _require = require(\"universalify\"),\n    fromCallback = _require.fromCallback; // From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\n\n\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\nvar CONTROL_CHARS = /[\\x00-\\x1F]/; // From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\n\nvar TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"]; // RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\n\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/; // date-time parsing constants (RFC6265 S5.1.1)\n\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\nvar MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\nvar MAX_TIME = 2147483647000; // 31-bit max\n\nvar MIN_TIME = 0; // 31-bit min\n\nvar SAME_SITE_CONTEXT_VAL_ERR = 'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\n\nfunction checkSameSiteContext(value) {\n  var context = String(value).toLowerCase();\n\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return null;\n  }\n}\n\nvar PrefixSecurityEnum = Object.freeze({\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n}); // Dumped from ip-regex@4.0.0, with the following changes:\n// * all capturing groups converted to non-capturing -- \"(?:)\"\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\n// * lowercase hexadecimal only\n\nvar IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\n\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  var count = 0;\n\n  while (count < token.length) {\n    var c = token.charCodeAt(count); // \"non-digit = %x00-2F / %x3A-FF\"\n\n    if (c <= 0x2f || c >= 0x3a) {\n      break;\n    }\n\n    count++;\n  } // constrain to a minimum and maximum number of digits.\n\n\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0, count), 10);\n}\n\nfunction parseTime(token) {\n  var parts = token.split(\":\");\n  var result = [0, 0, 0];\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (var i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    var trailingOK = i == 2;\n    var num = parseDigits(parts[i], 1, 2, trailingOK);\n\n    if (num === null) {\n      return null;\n    }\n\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token).substr(0, 3).toLowerCase();\n  var num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\n\n\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n\n\n  var tokens = str.split(DATE_DELIM);\n\n  if (!tokens) {\n    return;\n  }\n\n  var hour = null;\n  var minute = null;\n  var second = null;\n  var dayOfMonth = null;\n  var month = null;\n  var year = null;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i].trim();\n\n    if (!token.length) {\n      continue;\n    }\n\n    var result = void 0;\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n\n    if (second === null) {\n      result = parseTime(token);\n\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n\n\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n\n\n    if (month === null) {\n      result = parseMonth(token);\n\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n\n\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n\n\n  if (dayOfMonth === null || month === null || year === null || second === null || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  return date.toUTCString();\n} // S5.1.2 Canonicalized Host Names\n\n\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\n  // convert to IDN if any non-ASCII characters\n\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n} // S5.1.3 Domain Matching\n\n\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n  /*\n   * S5.1.3:\n   * \"A string domain-matches a given domain string if at least one of the\n   * following conditions hold:\"\n   *\n   * \" o The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n\n\n  if (str == domStr) {\n    return true;\n  }\n  /* \" o All of the following [three] conditions hold:\" */\n\n  /* \"* The domain string is a suffix of the string\" */\n\n\n  var idx = str.indexOf(domStr);\n\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  } // next, check it's a proper suffix\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n\n\n  if (str.length !== domStr.length + idx) {\n    return false; // it's not a suffix\n  }\n  /* \"  * The last character of the string that is not included in the\n   * domain string is a %x2E (\".\") character.\" */\n\n\n  if (str.substr(idx - 1, 1) !== '.') {\n    return false; // doesn't align on \".\"\n  }\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\n\n\n  if (IP_REGEX_LOWERCASE.test(str)) {\n    return false; // it's an IP address\n  }\n\n  return true;\n} // RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\n\n\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  } // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n\n\n  if (path === \"/\") {\n    return path;\n  }\n\n  var rightSlash = path.lastIndexOf(\"/\");\n\n  if (rightSlash === 0) {\n    return \"/\";\n  } // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n\n\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (var t = 0; t < TERMINATORS.length; t++) {\n    var terminatorIdx = str.indexOf(TERMINATORS[t]);\n\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  var firstEq = cookiePair.indexOf(\"=\");\n\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  var cookieName, cookieValue;\n\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  var c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== \"object\") {\n    options = {};\n  }\n\n  str = str.trim(); // We use a regex to parse the \"name-value-pair\" part of S5.2\n\n  var firstSemi = str.indexOf(\";\"); // S5.2 step 1\n\n  var cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  var c = parseCookiePair(cookiePair, !!options.loose);\n\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  } // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n\n\n  var unparsed = str.slice(firstSemi + 1).trim(); // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n\n  if (unparsed.length === 0) {\n    return c;\n  }\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n\n\n  var cookie_avs = unparsed.split(\";\");\n\n  while (cookie_avs.length) {\n    var av = cookie_avs.shift().trim();\n\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n\n    var av_sep = av.indexOf(\"=\");\n    var av_key = void 0,\n        av_value = void 0;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch (av_key) {\n      case \"expires\":\n        // S5.2.1\n        if (av_value) {\n          var exp = parseDate(av_value); // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n\n        break;\n\n      case \"max-age\":\n        // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            var delta = parseInt(av_value, 10); // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n\n            c.setMaxAge(delta);\n          }\n        }\n\n        break;\n\n      case \"domain\":\n        // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          var domain = av_value.trim().replace(/^\\./, \"\");\n\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n\n        break;\n\n      case \"path\":\n        // S5.2.4\n\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n\n      case \"secure\":\n        // S5.2.5\n\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n\n      case \"httponly\":\n        // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n\n      case \"samesite\":\n        // RFC6265bis-02 S5.3.7\n        var enforcement = av_value ? av_value.toLowerCase() : \"\";\n\n        switch (enforcement) {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n\n          default:\n            // RFC6265bis-02 S5.3.7 step 1:\n            // \"If cookie-av's attribute-value is not a case-insensitive match\n            //  for \"Strict\" or \"Lax\", ignore the \"cookie-av\".\"\n            // This effectively sets it to 'none' from the prototype.\n            break;\n        }\n\n        break;\n\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n\n  return c;\n}\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Secure-\", abort these steps and ignore the cookie\n *  entirely unless the cookie's secure-only-flag is true.\n * @param cookie\n * @returns boolean\n */\n\n\nfunction isSecurePrefixConditionMet(cookie) {\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n}\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Host-\", abort these steps and ignore the cookie\n *  entirely unless the cookie meets all the following criteria:\n *    1.  The cookie's secure-only-flag is true.\n *    2.  The cookie's host-only-flag is true.\n *    3.  The cookie-attribute-list contains an attribute with an\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\n * @param cookie\n * @returns boolean\n */\n\n\nfunction isHostPrefixConditionMet(cookie) {\n  return !cookie.key.startsWith(\"__Host-\") || cookie.secure && cookie.hostOnly && cookie.path != null && cookie.path === \"/\";\n} // avoid the V8 deoptimization monster!\n\n\nfunction jsonParse(str) {\n  var obj;\n\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  var obj;\n\n  if (typeof str === \"string\") {\n    obj = jsonParse(str);\n\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  var c = new Cookie();\n\n  for (var i = 0; i < Cookie.serializableProperties.length; i++) {\n    var prop = Cookie.serializableProperties[i];\n\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\n\nfunction cookieCompare(a, b) {\n  var cmp = 0; // descending for length: b CMP a\n\n  var aPathLen = a.path ? a.path.length : 0;\n  var bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n\n  if (cmp !== 0) {\n    return cmp;\n  } // ascending for time: a CMP b\n\n\n  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n\n  if (cmp !== 0) {\n    return cmp;\n  } // break ties for the same millisecond (precision of JavaScript's clock)\n\n\n  cmp = a.creationIndex - b.creationIndex;\n  return cmp;\n} // Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\n\n\nfunction permutePath(path) {\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n\n  var permutations = [path];\n\n  while (path.length > 1) {\n    var lindex = path.lastIndexOf(\"/\");\n\n    if (lindex === 0) {\n      break;\n    }\n\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n\n  permutations.push(\"/\");\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  } // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n\n\n  try {\n    url = decodeURI(url);\n  } catch (err) {// Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nvar cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: \"none\"\n};\n\nvar Cookie = /*#__PURE__*/function () {\n  function Cookie() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Cookie);\n\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n\n    Object.assign(this, cookieDefaults, options);\n    this.creation = this.creation || new Date(); // used to break creation ties in cookieCompare():\n\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false,\n      // important for assert.deepEqual checks\n      writable: true,\n      value: ++Cookie.cookiesCreated\n    });\n  }\n\n  _createClass(Cookie, [{\n    key: \"inspect\",\n    value: function inspect() {\n      var now = Date.now();\n      var hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n      var createAge = this.creation ? \"\".concat(now - this.creation.getTime(), \"ms\") : \"?\";\n      var accessAge = this.lastAccessed ? \"\".concat(now - this.lastAccessed.getTime(), \"ms\") : \"?\";\n      return \"Cookie=\\\"\".concat(this.toString(), \"; hostOnly=\").concat(hostOnly, \"; aAge=\").concat(accessAge, \"; cAge=\").concat(createAge, \"\\\"\");\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {};\n\n      var _iterator = _createForOfIteratorHelper(Cookie.serializableProperties),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var prop = _step.value;\n\n          if (this[prop] === cookieDefaults[prop]) {\n            continue; // leave as prototype default\n          }\n\n          if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n            if (this[prop] === null) {\n              obj[prop] = null;\n            } else {\n              obj[prop] = this[prop] == \"Infinity\" // intentionally not ===\n              ? \"Infinity\" : this[prop].toISOString();\n            }\n          } else if (prop === \"maxAge\") {\n            if (this[prop] !== null) {\n              // again, intentionally not ===\n              obj[prop] = this[prop] == Infinity || this[prop] == -Infinity ? this[prop].toString() : this[prop];\n            }\n          } else {\n            if (this[prop] !== cookieDefaults[prop]) {\n              obj[prop] = this[prop];\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return fromJSON(this.toJSON());\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      if (!COOKIE_OCTETS.test(this.value)) {\n        return false;\n      }\n\n      if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n        return false;\n      }\n\n      if (this.maxAge != null && this.maxAge <= 0) {\n        return false; // \"Max-Age=\" non-zero-digit *DIGIT\n      }\n\n      if (this.path != null && !PATH_VALUE.test(this.path)) {\n        return false;\n      }\n\n      var cdomain = this.cdomain();\n\n      if (cdomain) {\n        if (cdomain.match(/\\.$/)) {\n          return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n        }\n\n        var suffix = pubsuffix.getPublicSuffix(cdomain);\n\n        if (suffix == null) {\n          // it's a public suffix\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"setExpires\",\n    value: function setExpires(exp) {\n      if (exp instanceof Date) {\n        this.expires = exp;\n      } else {\n        this.expires = parseDate(exp) || \"Infinity\";\n      }\n    }\n  }, {\n    key: \"setMaxAge\",\n    value: function setMaxAge(age) {\n      if (age === Infinity || age === -Infinity) {\n        this.maxAge = age.toString(); // so JSON.stringify() works\n      } else {\n        this.maxAge = age;\n      }\n    }\n  }, {\n    key: \"cookieString\",\n    value: function cookieString() {\n      var val = this.value;\n\n      if (val == null) {\n        val = \"\";\n      }\n\n      if (this.key === \"\") {\n        return val;\n      }\n\n      return \"\".concat(this.key, \"=\").concat(val);\n    } // gives Set-Cookie header format\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var str = this.cookieString();\n\n      if (this.expires != Infinity) {\n        if (this.expires instanceof Date) {\n          str += \"; Expires=\".concat(formatDate(this.expires));\n        } else {\n          str += \"; Expires=\".concat(this.expires);\n        }\n      }\n\n      if (this.maxAge != null && this.maxAge != Infinity) {\n        str += \"; Max-Age=\".concat(this.maxAge);\n      }\n\n      if (this.domain && !this.hostOnly) {\n        str += \"; Domain=\".concat(this.domain);\n      }\n\n      if (this.path) {\n        str += \"; Path=\".concat(this.path);\n      }\n\n      if (this.secure) {\n        str += \"; Secure\";\n      }\n\n      if (this.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n\n      if (this.sameSite && this.sameSite !== \"none\") {\n        var ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n        str += \"; SameSite=\".concat(ssCanon ? ssCanon : this.sameSite);\n      }\n\n      if (this.extensions) {\n        this.extensions.forEach(function (ext) {\n          str += \"; \".concat(ext);\n        });\n      }\n\n      return str;\n    } // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n    // elsewhere)\n    // S5.3 says to give the \"latest representable date\" for which we use Infinity\n    // For \"expired\" we use 0\n\n  }, {\n    key: \"TTL\",\n    value: function TTL(now) {\n      /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n       * attribute, the Max-Age attribute has precedence and controls the\n       * expiration date of the cookie.\n       * (Concurs with S5.3 step 3)\n       */\n      if (this.maxAge != null) {\n        return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n      }\n\n      var expires = this.expires;\n\n      if (expires != Infinity) {\n        if (!(expires instanceof Date)) {\n          expires = parseDate(expires) || Infinity;\n        }\n\n        if (expires == Infinity) {\n          return Infinity;\n        }\n\n        return expires.getTime() - (now || Date.now());\n      }\n\n      return Infinity;\n    } // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n    // elsewhere)\n\n  }, {\n    key: \"expiryTime\",\n    value: function expiryTime(now) {\n      if (this.maxAge != null) {\n        var relativeTo = now || this.creation || new Date();\n        var age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n        return relativeTo.getTime() + age;\n      }\n\n      if (this.expires == Infinity) {\n        return Infinity;\n      }\n\n      return this.expires.getTime();\n    } // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n    // elsewhere), except it returns a Date\n\n  }, {\n    key: \"expiryDate\",\n    value: function expiryDate(now) {\n      var millisec = this.expiryTime(now);\n\n      if (millisec == Infinity) {\n        return new Date(MAX_TIME);\n      } else if (millisec == -Infinity) {\n        return new Date(MIN_TIME);\n      } else {\n        return new Date(millisec);\n      }\n    } // This replaces the \"persistent-flag\" parts of S5.3 step 3\n\n  }, {\n    key: \"isPersistent\",\n    value: function isPersistent() {\n      return this.maxAge != null || this.expires != Infinity;\n    } // Mostly S5.1.2 and S5.2.3:\n\n  }, {\n    key: \"canonicalizedDomain\",\n    value: function canonicalizedDomain() {\n      if (this.domain == null) {\n        return null;\n      }\n\n      return canonicalDomain(this.domain);\n    }\n  }, {\n    key: \"cdomain\",\n    value: function cdomain() {\n      return this.canonicalizedDomain();\n    }\n  }]);\n\n  return Cookie;\n}();\n\nCookie.cookiesCreated = 0;\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.serializableProperties = Object.keys(cookieDefaults);\nCookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\nCookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\n\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  if (prefixSecurity != null) {\n    var normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n    /* The three supported options */\n\n    switch (normalizedPrefixSecurity) {\n      case PrefixSecurityEnum.STRICT:\n      case PrefixSecurityEnum.SILENT:\n      case PrefixSecurityEnum.DISABLED:\n        return normalizedPrefixSecurity;\n    }\n  }\n  /* Default is SILENT */\n\n\n  return PrefixSecurityEnum.SILENT;\n}\n\nvar CookieJar = /*#__PURE__*/function () {\n  function CookieJar(store) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      rejectPublicSuffixes: true\n    };\n\n    _classCallCheck(this, CookieJar);\n\n    if (typeof options === \"boolean\") {\n      options = {\n        rejectPublicSuffixes: options\n      };\n    }\n\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n    this.enableLooseMode = !!options.looseMode;\n    this.allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n    this.store = store || new MemoryCookieStore();\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n    this._cloneSync = syncWrap(\"clone\");\n    this._importCookiesSync = syncWrap(\"_importCookies\");\n    this.getCookiesSync = syncWrap(\"getCookies\");\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n    this.setCookieSync = syncWrap(\"setCookie\");\n    this.serializeSync = syncWrap(\"serialize\");\n  }\n\n  _createClass(CookieJar, [{\n    key: \"setCookie\",\n    value: function setCookie(cookie, url, options, cb) {\n      var err;\n      var context = getCookieContext(url);\n\n      if (typeof options === \"function\") {\n        cb = options;\n        options = {};\n      }\n\n      var host = canonicalDomain(context.hostname);\n      var loose = options.loose || this.enableLooseMode;\n      var sameSiteContext = null;\n\n      if (options.sameSiteContext) {\n        sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n\n        if (!sameSiteContext) {\n          return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n        }\n      } // S5.3 step 1\n\n\n      if (typeof cookie === \"string\" || cookie instanceof String) {\n        cookie = Cookie.parse(cookie, {\n          loose: loose\n        });\n\n        if (!cookie) {\n          err = new Error(\"Cookie failed to parse\");\n          return cb(options.ignoreError ? null : err);\n        }\n      } else if (!(cookie instanceof Cookie)) {\n        // If you're seeing this error, and are passing in a Cookie object,\n        // it *might* be a Cookie object from another loaded version of tough-cookie.\n        err = new Error(\"First argument to setCookie must be a Cookie object or string\");\n        return cb(options.ignoreError ? null : err);\n      } // S5.3 step 2\n\n\n      var now = options.now || new Date(); // will assign later to save effort in the face of errors\n      // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n      // S5.3 step 4: NOOP; domain is null by default\n      // S5.3 step 5: public suffixes\n\n      if (this.rejectPublicSuffixes && cookie.domain) {\n        var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n\n        if (suffix == null) {\n          // e.g. \"com\"\n          err = new Error(\"Cookie has domain set to a public suffix\");\n          return cb(options.ignoreError ? null : err);\n        }\n      } // S5.3 step 6:\n\n\n      if (cookie.domain) {\n        if (!domainMatch(host, cookie.cdomain(), false)) {\n          err = new Error(\"Cookie not in this host's domain. Cookie:\".concat(cookie.cdomain(), \" Request:\").concat(host));\n          return cb(options.ignoreError ? null : err);\n        }\n\n        if (cookie.hostOnly == null) {\n          // don't reset if already set\n          cookie.hostOnly = false;\n        }\n      } else {\n        cookie.hostOnly = true;\n        cookie.domain = host;\n      } //S5.2.4 If the attribute-value is empty or if the first character of the\n      //attribute-value is not %x2F (\"/\"):\n      //Let cookie-path be the default-path.\n\n\n      if (!cookie.path || cookie.path[0] !== \"/\") {\n        cookie.path = defaultPath(context.pathname);\n        cookie.pathIsDefault = true;\n      } // S5.3 step 8: NOOP; secure attribute\n      // S5.3 step 9: NOOP; httpOnly attribute\n      // S5.3 step 10\n\n\n      if (options.http === false && cookie.httpOnly) {\n        err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n        return cb(options.ignoreError ? null : err);\n      } // 6252bis-02 S5.4 Step 13 & 14:\n\n\n      if (cookie.sameSite !== \"none\" && sameSiteContext) {\n        // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\n        //  is being set from a context whose \"site for cookies\" is not an\n        //  exact match for request-uri's host's registered domain, then\n        //  abort these steps and ignore the newly created cookie entirely.\"\n        if (sameSiteContext === \"none\") {\n          err = new Error(\"Cookie is SameSite but this is a cross-origin request\");\n          return cb(options.ignoreError ? null : err);\n        }\n      }\n      /* 6265bis-02 S5.4 Steps 15 & 16 */\n\n\n      var ignoreErrorForPrefixSecurity = this.prefixSecurity === PrefixSecurityEnum.SILENT;\n      var prefixSecurityDisabled = this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n      /* If prefix checking is not disabled ...*/\n\n      if (!prefixSecurityDisabled) {\n        var errorFound = false;\n        var errorMsg;\n        /* Check secure prefix condition */\n\n        if (!isSecurePrefixConditionMet(cookie)) {\n          errorFound = true;\n          errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n        } else if (!isHostPrefixConditionMet(cookie)) {\n          /* Check host prefix condition */\n          errorFound = true;\n          errorMsg = \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n        }\n\n        if (errorFound) {\n          return cb(options.ignoreError || ignoreErrorForPrefixSecurity ? null : new Error(errorMsg));\n        }\n      }\n\n      var store = this.store;\n\n      if (!store.updateCookie) {\n        store.updateCookie = function (oldCookie, newCookie, cb) {\n          this.putCookie(newCookie, cb);\n        };\n      }\n\n      function withCookie(err, oldCookie) {\n        if (err) {\n          return cb(err);\n        }\n\n        var next = function next(err) {\n          if (err) {\n            return cb(err);\n          } else {\n            cb(null, cookie);\n          }\n        };\n\n        if (oldCookie) {\n          // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n          // domain, and path as the newly created cookie:\"\n          if (options.http === false && oldCookie.httpOnly) {\n            // step 11.2\n            err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n            return cb(options.ignoreError ? null : err);\n          }\n\n          cookie.creation = oldCookie.creation; // step 11.3\n\n          cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n\n          cookie.lastAccessed = now; // Step 11.4 (delete cookie) is implied by just setting the new one:\n\n          store.updateCookie(oldCookie, cookie, next); // step 12\n        } else {\n          cookie.creation = cookie.lastAccessed = now;\n          store.putCookie(cookie, next); // step 12\n        }\n      }\n\n      store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n    } // RFC6365 S5.4\n\n  }, {\n    key: \"getCookies\",\n    value: function getCookies(url, options, cb) {\n      var context = getCookieContext(url);\n\n      if (typeof options === \"function\") {\n        cb = options;\n        options = {};\n      }\n\n      var host = canonicalDomain(context.hostname);\n      var path = context.pathname || \"/\";\n      var secure = options.secure;\n\n      if (secure == null && context.protocol && (context.protocol == \"https:\" || context.protocol == \"wss:\")) {\n        secure = true;\n      }\n\n      var sameSiteLevel = 0;\n\n      if (options.sameSiteContext) {\n        var sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n        sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n\n        if (!sameSiteLevel) {\n          return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n        }\n      }\n\n      var http = options.http;\n\n      if (http == null) {\n        http = true;\n      }\n\n      var now = options.now || Date.now();\n      var expireCheck = options.expire !== false;\n      var allPaths = !!options.allPaths;\n      var store = this.store;\n\n      function matchingCookie(c) {\n        // \"Either:\n        //   The cookie's host-only-flag is true and the canonicalized\n        //   request-host is identical to the cookie's domain.\n        // Or:\n        //   The cookie's host-only-flag is false and the canonicalized\n        //   request-host domain-matches the cookie's domain.\"\n        if (c.hostOnly) {\n          if (c.domain != host) {\n            return false;\n          }\n        } else {\n          if (!domainMatch(host, c.domain, false)) {\n            return false;\n          }\n        } // \"The request-uri's path path-matches the cookie's path.\"\n\n\n        if (!allPaths && !pathMatch(path, c.path)) {\n          return false;\n        } // \"If the cookie's secure-only-flag is true, then the request-uri's\n        // scheme must denote a \"secure\" protocol\"\n\n\n        if (c.secure && !secure) {\n          return false;\n        } // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n        // cookie-string is being generated for a \"non-HTTP\" API\"\n\n\n        if (c.httpOnly && !http) {\n          return false;\n        } // RFC6265bis-02 S5.3.7\n\n\n        if (sameSiteLevel) {\n          var cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n\n          if (cookieLevel > sameSiteLevel) {\n            // only allow cookies at or below the request level\n            return false;\n          }\n        } // deferred from S5.3\n        // non-RFC: allow retention of expired cookies by choice\n\n\n        if (expireCheck && c.expiryTime() <= now) {\n          store.removeCookie(c.domain, c.path, c.key, function () {}); // result ignored\n\n          return false;\n        }\n\n        return true;\n      }\n\n      store.findCookies(host, allPaths ? null : path, this.allowSpecialUseDomain, function (err, cookies) {\n        if (err) {\n          return cb(err);\n        }\n\n        cookies = cookies.filter(matchingCookie); // sorting of S5.4 part 2\n\n        if (options.sort !== false) {\n          cookies = cookies.sort(cookieCompare);\n        } // S5.4 part 3\n\n\n        var now = new Date();\n\n        var _iterator2 = _createForOfIteratorHelper(cookies),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var cookie = _step2.value;\n            cookie.lastAccessed = now;\n          } // TODO persist lastAccessed\n\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        cb(null, cookies);\n      });\n    }\n  }, {\n    key: \"getCookieString\",\n    value: function getCookieString() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var cb = args.pop();\n\n      var next = function next(err, cookies) {\n        if (err) {\n          cb(err);\n        } else {\n          cb(null, cookies.sort(cookieCompare).map(function (c) {\n            return c.cookieString();\n          }).join(\"; \"));\n        }\n      };\n\n      args.push(next);\n      this.getCookies.apply(this, args);\n    }\n  }, {\n    key: \"getSetCookieStrings\",\n    value: function getSetCookieStrings() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var cb = args.pop();\n\n      var next = function next(err, cookies) {\n        if (err) {\n          cb(err);\n        } else {\n          cb(null, cookies.map(function (c) {\n            return c.toString();\n          }));\n        }\n      };\n\n      args.push(next);\n      this.getCookies.apply(this, args);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(cb) {\n      var type = this.store.constructor.name;\n\n      if (type === \"Object\") {\n        type = null;\n      } // update README.md \"Serialization Format\" if you change this, please!\n\n\n      var serialized = {\n        // The version of tough-cookie that serialized this jar. Generally a good\n        // practice since future versions can make data import decisions based on\n        // known past behavior. When/if this matters, use `semver`.\n        version: \"tough-cookie@\".concat(VERSION),\n        // add the store type, to make humans happy:\n        storeType: type,\n        // CookieJar configuration:\n        rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n        // this gets filled from getAllCookies:\n        cookies: []\n      };\n\n      if (!(this.store.getAllCookies && typeof this.store.getAllCookies === \"function\")) {\n        return cb(new Error(\"store does not support getAllCookies and cannot be serialized\"));\n      }\n\n      this.store.getAllCookies(function (err, cookies) {\n        if (err) {\n          return cb(err);\n        }\n\n        serialized.cookies = cookies.map(function (cookie) {\n          // convert to serialized 'raw' cookies\n          cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie; // Remove the index so new ones get assigned during deserialization\n\n          delete cookie.creationIndex;\n          return cookie;\n        });\n        return cb(null, serialized);\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.serializeSync();\n    } // use the class method CookieJar.deserialize instead of calling this directly\n\n  }, {\n    key: \"_importCookies\",\n    value: function _importCookies(serialized, cb) {\n      var _this = this;\n\n      var cookies = serialized.cookies;\n\n      if (!cookies || !Array.isArray(cookies)) {\n        return cb(new Error(\"serialized jar has no cookies array\"));\n      }\n\n      cookies = cookies.slice(); // do not modify the original\n\n      var putNext = function putNext(err) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (!cookies.length) {\n          return cb(err, _this);\n        }\n\n        var cookie;\n\n        try {\n          cookie = fromJSON(cookies.shift());\n        } catch (e) {\n          return cb(e);\n        }\n\n        if (cookie === null) {\n          return putNext(null); // skip this cookie\n        }\n\n        _this.store.putCookie(cookie, putNext);\n      };\n\n      putNext();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(newStore, cb) {\n      if (arguments.length === 1) {\n        cb = newStore;\n        newStore = null;\n      }\n\n      this.serialize(function (err, serialized) {\n        if (err) {\n          return cb(err);\n        }\n\n        CookieJar.deserialize(serialized, newStore, cb);\n      });\n    }\n  }, {\n    key: \"cloneSync\",\n    value: function cloneSync(newStore) {\n      if (arguments.length === 0) {\n        return this._cloneSync();\n      }\n\n      if (!newStore.synchronous) {\n        throw new Error(\"CookieJar clone destination store is not synchronous; use async API instead.\");\n      }\n\n      return this._cloneSync(newStore);\n    }\n  }, {\n    key: \"removeAllCookies\",\n    value: function removeAllCookies(cb) {\n      var store = this.store; // Check that the store implements its own removeAllCookies(). The default\n      // implementation in Store will immediately call the callback with a \"not\n      // implemented\" Error.\n\n      if (typeof store.removeAllCookies === \"function\" && store.removeAllCookies !== Store.prototype.removeAllCookies) {\n        return store.removeAllCookies(cb);\n      }\n\n      store.getAllCookies(function (err, cookies) {\n        if (err) {\n          return cb(err);\n        }\n\n        if (cookies.length === 0) {\n          return cb(null);\n        }\n\n        var completedCount = 0;\n        var removeErrors = [];\n\n        function removeCookieCb(removeErr) {\n          if (removeErr) {\n            removeErrors.push(removeErr);\n          }\n\n          completedCount++;\n\n          if (completedCount === cookies.length) {\n            return cb(removeErrors.length ? removeErrors[0] : null);\n          }\n        }\n\n        cookies.forEach(function (cookie) {\n          store.removeCookie(cookie.domain, cookie.path, cookie.key, removeCookieCb);\n        });\n      });\n    }\n  }], [{\n    key: \"deserialize\",\n    value: function deserialize(strOrObj, store, cb) {\n      if (arguments.length !== 3) {\n        // store is optional\n        cb = store;\n        store = null;\n      }\n\n      var serialized;\n\n      if (typeof strOrObj === \"string\") {\n        serialized = jsonParse(strOrObj);\n\n        if (serialized instanceof Error) {\n          return cb(serialized);\n        }\n      } else {\n        serialized = strOrObj;\n      }\n\n      var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n      jar._importCookies(serialized, function (err) {\n        if (err) {\n          return cb(err);\n        }\n\n        cb(null, jar);\n      });\n    }\n  }, {\n    key: \"deserializeSync\",\n    value: function deserializeSync(strOrObj, store) {\n      var serialized = typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n      var jar = new CookieJar(store, serialized.rejectPublicSuffixes); // catch this mistake early:\n\n      if (!jar.store.synchronous) {\n        throw new Error(\"CookieJar store is not synchronous; use async API instead.\");\n      }\n\n      jar._importCookiesSync(serialized);\n\n      return jar;\n    }\n  }]);\n\n  return CookieJar;\n}();\n\nCookieJar.fromJSON = CookieJar.deserializeSync;\n[\"_importCookies\", \"clone\", \"getCookies\", \"getCookieString\", \"getSetCookieStrings\", \"removeAllCookies\", \"serialize\", \"setCookie\"].forEach(function (name) {\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n});\nCookieJar.deserialize = fromCallback(CookieJar.deserialize); // Use a closure to provide a true imperative API for synchronous stores.\n\nfunction syncWrap(method) {\n  return function () {\n    if (!this.store.synchronous) {\n      throw new Error(\"CookieJar store is not synchronous; use async API instead.\");\n    }\n\n    var syncErr, syncResult;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this[method].apply(this, args.concat([function (err, result) {\n      syncErr = err;\n      syncResult = result;\n    }]));\n\n    if (syncErr) {\n      throw syncErr;\n    }\n\n    return syncResult;\n  };\n}\n\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\nexports.PrefixSecurityEnum = PrefixSecurityEnum;","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/tough-cookie/lib/cookie.js"],"names":["punycode","require","urlParse","parse","util","pubsuffix","Store","MemoryCookieStore","pathMatch","VERSION","fromCallback","COOKIE_OCTETS","CONTROL_CHARS","TERMINATORS","PATH_VALUE","DATE_DELIM","MONTH_TO_NUM","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","MAX_TIME","MIN_TIME","SAME_SITE_CONTEXT_VAL_ERR","checkSameSiteContext","value","context","String","toLowerCase","PrefixSecurityEnum","Object","freeze","SILENT","STRICT","DISABLED","IP_REGEX_LOWERCASE","parseDigits","token","minDigits","maxDigits","trailingOK","count","length","c","charCodeAt","parseInt","substr","parseTime","parts","split","result","i","num","parseMonth","parseDate","str","tokens","hour","minute","second","dayOfMonth","month","year","trim","Date","UTC","formatDate","date","toUTCString","canonicalDomain","replace","test","toASCII","domainMatch","domStr","canonicalize","idx","indexOf","defaultPath","path","rightSlash","lastIndexOf","slice","trimTerminator","t","terminatorIdx","parseCookiePair","cookiePair","looseMode","firstEq","cookieName","cookieValue","Cookie","key","options","firstSemi","loose","unparsed","cookie_avs","av","shift","av_sep","av_key","av_value","exp","expires","delta","setMaxAge","domain","secure","httpOnly","enforcement","sameSite","extensions","push","isSecurePrefixConditionMet","cookie","startsWith","isHostPrefixConditionMet","hostOnly","jsonParse","obj","JSON","e","fromJSON","Error","serializableProperties","prop","undefined","cookieDefaults","cookieCompare","a","b","cmp","aPathLen","bPathLen","aTime","creation","getTime","bTime","creationIndex","permutePath","permutations","lindex","getCookieContext","url","decodeURI","err","maxAge","pathIsDefault","lastAccessed","inspect","custom","assign","defineProperty","configurable","enumerable","writable","cookiesCreated","now","createAge","accessAge","toString","toISOString","Infinity","toJSON","cdomain","match","suffix","getPublicSuffix","age","val","cookieString","ssCanon","sameSiteCanonical","forEach","ext","relativeTo","millisec","expiryTime","canonicalizedDomain","keys","sameSiteLevel","strict","lax","none","getNormalizedPrefixSecurity","prefixSecurity","normalizedPrefixSecurity","CookieJar","store","rejectPublicSuffixes","enableLooseMode","allowSpecialUseDomain","_cloneSync","syncWrap","_importCookiesSync","getCookiesSync","getCookieStringSync","getSetCookieStringsSync","removeAllCookiesSync","setCookieSync","serializeSync","cb","host","hostname","sameSiteContext","ignoreError","pathname","http","ignoreErrorForPrefixSecurity","prefixSecurityDisabled","errorFound","errorMsg","updateCookie","oldCookie","newCookie","putCookie","withCookie","next","findCookie","protocol","expireCheck","expire","allPaths","matchingCookie","cookieLevel","removeCookie","findCookies","cookies","filter","sort","args","pop","map","join","getCookies","apply","type","constructor","name","serialized","version","storeType","getAllCookies","Array","isArray","putNext","newStore","arguments","serialize","deserialize","synchronous","removeAllCookies","prototype","completedCount","removeErrors","removeCookieCb","removeErr","strOrObj","jar","_importCookies","deserializeSync","method","syncErr","syncResult","exports","permuteDomain"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst punycode = require(\"punycode\");\nconst urlParse = require(\"url\").parse;\nconst util = require(\"util\");\nconst pubsuffix = require(\"./pubsuffix-psl\");\nconst Store = require(\"./store\").Store;\nconst MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst VERSION = require(\"./version\");\nconst { fromCallback } = require(\"universalify\");\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nconst COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n\nconst CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nconst TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nconst PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nconst DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n\nconst MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\n\nconst MAX_TIME = 2147483647000; // 31-bit max\nconst MIN_TIME = 0; // 31-bit min\nconst SAME_SITE_CONTEXT_VAL_ERR =\n  'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\n\nfunction checkSameSiteContext(value) {\n  const context = String(value).toLowerCase();\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return null;\n  }\n}\n\nconst PrefixSecurityEnum = Object.freeze({\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n});\n\n// Dumped from ip-regex@4.0.0, with the following changes:\n// * all capturing groups converted to non-capturing -- \"(?:)\"\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\n// * lowercase hexadecimal only\nvar IP_REGEX_LOWERCASE =/(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  let count = 0;\n  while (count < token.length) {\n    const c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2f || c >= 0x3a) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0, count), 10);\n}\n\nfunction parseTime(token) {\n  const parts = token.split(\":\");\n  const result = [0, 0, 0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (let i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    const trailingOK = i == 2;\n    const num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token)\n    .substr(0, 3)\n    .toLowerCase();\n  const num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  const tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n\n  let hour = null;\n  let minute = null;\n  let second = null;\n  let dayOfMonth = null;\n  let month = null;\n  let year = null;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n\n    let result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (\n    dayOfMonth === null ||\n    month === null ||\n    year === null ||\n    second === null ||\n    dayOfMonth < 1 ||\n    dayOfMonth > 31 ||\n    year < 1601 ||\n    hour > 23 ||\n    minute > 59 ||\n    second > 59\n  ) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  return date.toUTCString();\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * S5.1.3:\n   * \"A string domain-matches a given domain string if at least one of the\n   * following conditions hold:\"\n   *\n   * \" o The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \" o All of the following [three] conditions hold:\" */\n\n  /* \"* The domain string is a suffix of the string\" */\n  const idx = str.indexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // next, check it's a proper suffix\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) {\n    return false; // it's not a suffix\n  }\n\n  /* \"  * The last character of the string that is not included in the\n   * domain string is a %x2E (\".\") character.\" */\n  if (str.substr(idx-1,1) !== '.') {\n    return false; // doesn't align on \".\"\n  }\n\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\n  if (IP_REGEX_LOWERCASE.test(str)) {\n    return false; // it's an IP address\n  }\n\n  return true;\n}\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n\n  const rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (let t = 0; t < TERMINATORS.length; t++) {\n    const terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n\n  let firstEq = cookiePair.indexOf(\"=\");\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  let cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  const c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== \"object\") {\n    options = {};\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  const firstSemi = str.indexOf(\";\"); // S5.2 step 1\n  const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  const c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  const unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  const cookie_avs = unparsed.split(\";\");\n  while (cookie_avs.length) {\n    const av = cookie_avs.shift().trim();\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n    const av_sep = av.indexOf(\"=\");\n    let av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch (av_key) {\n      case \"expires\": // S5.2.1\n        if (av_value) {\n          const exp = parseDate(av_value);\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n        break;\n\n      case \"max-age\": // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            const delta = parseInt(av_value, 10);\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n\n      case \"domain\": // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          const domain = av_value.trim().replace(/^\\./, \"\");\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n\n      case \"path\": // S5.2.4\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n\n      case \"secure\": // S5.2.5\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n\n      case \"httponly\": // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n\n      case \"samesite\": // RFC6265bis-02 S5.3.7\n        const enforcement = av_value ? av_value.toLowerCase() : \"\";\n        switch (enforcement) {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n          default:\n            // RFC6265bis-02 S5.3.7 step 1:\n            // \"If cookie-av's attribute-value is not a case-insensitive match\n            //  for \"Strict\" or \"Lax\", ignore the \"cookie-av\".\"\n            // This effectively sets it to 'none' from the prototype.\n            break;\n        }\n        break;\n\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n\n  return c;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Secure-\", abort these steps and ignore the cookie\n *  entirely unless the cookie's secure-only-flag is true.\n * @param cookie\n * @returns boolean\n */\nfunction isSecurePrefixConditionMet(cookie) {\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Host-\", abort these steps and ignore the cookie\n *  entirely unless the cookie meets all the following criteria:\n *    1.  The cookie's secure-only-flag is true.\n *    2.  The cookie's host-only-flag is true.\n *    3.  The cookie-attribute-list contains an attribute with an\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\n * @param cookie\n * @returns boolean\n */\nfunction isHostPrefixConditionMet(cookie) {\n  return (\n    !cookie.key.startsWith(\"__Host-\") ||\n    (cookie.secure &&\n      cookie.hostOnly &&\n      cookie.path != null &&\n      cookie.path === \"/\")\n  );\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  let obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  let obj;\n  if (typeof str === \"string\") {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  const c = new Cookie();\n  for (let i = 0; i < Cookie.serializableProperties.length; i++) {\n    const prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a, b) {\n  let cmp = 0;\n\n  // descending for length: b CMP a\n  const aPathLen = a.path ? a.path.length : 0;\n  const bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n  const permutations = [path];\n  while (path.length > 1) {\n    const lindex = path.lastIndexOf(\"/\");\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push(\"/\");\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  } catch (err) {\n    // Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nconst cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: \"none\"\n};\n\nclass Cookie {\n  constructor(options = {}) {\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n\n    Object.assign(this, cookieDefaults, options);\n    this.creation = this.creation || new Date();\n\n    // used to break creation ties in cookieCompare():\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false, // important for assert.deepEqual checks\n      writable: true,\n      value: ++Cookie.cookiesCreated\n    });\n  }\n\n  inspect() {\n    const now = Date.now();\n    const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n    const createAge = this.creation\n      ? `${now - this.creation.getTime()}ms`\n      : \"?\";\n    const accessAge = this.lastAccessed\n      ? `${now - this.lastAccessed.getTime()}ms`\n      : \"?\";\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n  }\n\n  toJSON() {\n    const obj = {};\n\n    for (const prop of Cookie.serializableProperties) {\n      if (this[prop] === cookieDefaults[prop]) {\n        continue; // leave as prototype default\n      }\n\n      if (\n        prop === \"expires\" ||\n        prop === \"creation\" ||\n        prop === \"lastAccessed\"\n      ) {\n        if (this[prop] === null) {\n          obj[prop] = null;\n        } else {\n          obj[prop] =\n            this[prop] == \"Infinity\" // intentionally not ===\n              ? \"Infinity\"\n              : this[prop].toISOString();\n        }\n      } else if (prop === \"maxAge\") {\n        if (this[prop] !== null) {\n          // again, intentionally not ===\n          obj[prop] =\n            this[prop] == Infinity || this[prop] == -Infinity\n              ? this[prop].toString()\n              : this[prop];\n        }\n      } else {\n        if (this[prop] !== cookieDefaults[prop]) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  clone() {\n    return fromJSON(this.toJSON());\n  }\n\n  validate() {\n    if (!COOKIE_OCTETS.test(this.value)) {\n      return false;\n    }\n    if (\n      this.expires != Infinity &&\n      !(this.expires instanceof Date) &&\n      !parseDate(this.expires)\n    ) {\n      return false;\n    }\n    if (this.maxAge != null && this.maxAge <= 0) {\n      return false; // \"Max-Age=\" non-zero-digit *DIGIT\n    }\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\n      return false;\n    }\n\n    const cdomain = this.cdomain();\n    if (cdomain) {\n      if (cdomain.match(/\\.$/)) {\n        return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n      }\n      const suffix = pubsuffix.getPublicSuffix(cdomain);\n      if (suffix == null) {\n        // it's a public suffix\n        return false;\n      }\n    }\n    return true;\n  }\n\n  setExpires(exp) {\n    if (exp instanceof Date) {\n      this.expires = exp;\n    } else {\n      this.expires = parseDate(exp) || \"Infinity\";\n    }\n  }\n\n  setMaxAge(age) {\n    if (age === Infinity || age === -Infinity) {\n      this.maxAge = age.toString(); // so JSON.stringify() works\n    } else {\n      this.maxAge = age;\n    }\n  }\n\n  cookieString() {\n    let val = this.value;\n    if (val == null) {\n      val = \"\";\n    }\n    if (this.key === \"\") {\n      return val;\n    }\n    return `${this.key}=${val}`;\n  }\n\n  // gives Set-Cookie header format\n  toString() {\n    let str = this.cookieString();\n\n    if (this.expires != Infinity) {\n      if (this.expires instanceof Date) {\n        str += `; Expires=${formatDate(this.expires)}`;\n      } else {\n        str += `; Expires=${this.expires}`;\n      }\n    }\n\n    if (this.maxAge != null && this.maxAge != Infinity) {\n      str += `; Max-Age=${this.maxAge}`;\n    }\n\n    if (this.domain && !this.hostOnly) {\n      str += `; Domain=${this.domain}`;\n    }\n    if (this.path) {\n      str += `; Path=${this.path}`;\n    }\n\n    if (this.secure) {\n      str += \"; Secure\";\n    }\n    if (this.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (this.sameSite && this.sameSite !== \"none\") {\n      const ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n      str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\n    }\n    if (this.extensions) {\n      this.extensions.forEach(ext => {\n        str += `; ${ext}`;\n      });\n    }\n\n    return str;\n  }\n\n  // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  // S5.3 says to give the \"latest representable date\" for which we use Infinity\n  // For \"expired\" we use 0\n  TTL(now) {\n    /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n     * attribute, the Max-Age attribute has precedence and controls the\n     * expiration date of the cookie.\n     * (Concurs with S5.3 step 3)\n     */\n    if (this.maxAge != null) {\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n    }\n\n    let expires = this.expires;\n    if (expires != Infinity) {\n      if (!(expires instanceof Date)) {\n        expires = parseDate(expires) || Infinity;\n      }\n\n      if (expires == Infinity) {\n        return Infinity;\n      }\n\n      return expires.getTime() - (now || Date.now());\n    }\n\n    return Infinity;\n  }\n\n  // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  expiryTime(now) {\n    if (this.maxAge != null) {\n      const relativeTo = now || this.creation || new Date();\n      const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n      return relativeTo.getTime() + age;\n    }\n\n    if (this.expires == Infinity) {\n      return Infinity;\n    }\n    return this.expires.getTime();\n  }\n\n  // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere), except it returns a Date\n  expiryDate(now) {\n    const millisec = this.expiryTime(now);\n    if (millisec == Infinity) {\n      return new Date(MAX_TIME);\n    } else if (millisec == -Infinity) {\n      return new Date(MIN_TIME);\n    } else {\n      return new Date(millisec);\n    }\n  }\n\n  // This replaces the \"persistent-flag\" parts of S5.3 step 3\n  isPersistent() {\n    return this.maxAge != null || this.expires != Infinity;\n  }\n\n  // Mostly S5.1.2 and S5.2.3:\n  canonicalizedDomain() {\n    if (this.domain == null) {\n      return null;\n    }\n    return canonicalDomain(this.domain);\n  }\n\n  cdomain() {\n    return this.canonicalizedDomain();\n  }\n}\n\nCookie.cookiesCreated = 0;\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.serializableProperties = Object.keys(cookieDefaults);\nCookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\n\nCookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\n\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  if (prefixSecurity != null) {\n    const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n    /* The three supported options */\n    switch (normalizedPrefixSecurity) {\n      case PrefixSecurityEnum.STRICT:\n      case PrefixSecurityEnum.SILENT:\n      case PrefixSecurityEnum.DISABLED:\n        return normalizedPrefixSecurity;\n    }\n  }\n  /* Default is SILENT */\n  return PrefixSecurityEnum.SILENT;\n}\n\nclass CookieJar {\n  constructor(store, options = { rejectPublicSuffixes: true }) {\n    if (typeof options === \"boolean\") {\n      options = { rejectPublicSuffixes: options };\n    }\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n    this.enableLooseMode = !!options.looseMode;\n    this.allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n    this.store = store || new MemoryCookieStore();\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n    this._cloneSync = syncWrap(\"clone\");\n    this._importCookiesSync = syncWrap(\"_importCookies\");\n    this.getCookiesSync = syncWrap(\"getCookies\");\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n    this.setCookieSync = syncWrap(\"setCookie\");\n    this.serializeSync = syncWrap(\"serialize\");\n  }\n\n  setCookie(cookie, url, options, cb) {\n    let err;\n    const context = getCookieContext(url);\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    const host = canonicalDomain(context.hostname);\n    const loose = options.loose || this.enableLooseMode;\n\n    let sameSiteContext = null;\n    if (options.sameSiteContext) {\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (!sameSiteContext) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    // S5.3 step 1\n    if (typeof cookie === \"string\" || cookie instanceof String) {\n      cookie = Cookie.parse(cookie, { loose: loose });\n      if (!cookie) {\n        err = new Error(\"Cookie failed to parse\");\n        return cb(options.ignoreError ? null : err);\n      }\n    } else if (!(cookie instanceof Cookie)) {\n      // If you're seeing this error, and are passing in a Cookie object,\n      // it *might* be a Cookie object from another loaded version of tough-cookie.\n      err = new Error(\n        \"First argument to setCookie must be a Cookie object or string\"\n      );\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // S5.3 step 2\n    const now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n    // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n    // S5.3 step 4: NOOP; domain is null by default\n\n    // S5.3 step 5: public suffixes\n    if (this.rejectPublicSuffixes && cookie.domain) {\n      const suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n      if (suffix == null) {\n        // e.g. \"com\"\n        err = new Error(\"Cookie has domain set to a public suffix\");\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    // S5.3 step 6:\n    if (cookie.domain) {\n      if (!domainMatch(host, cookie.cdomain(), false)) {\n        err = new Error(\n          `Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n\n      if (cookie.hostOnly == null) {\n        // don't reset if already set\n        cookie.hostOnly = false;\n      }\n    } else {\n      cookie.hostOnly = true;\n      cookie.domain = host;\n    }\n\n    //S5.2.4 If the attribute-value is empty or if the first character of the\n    //attribute-value is not %x2F (\"/\"):\n    //Let cookie-path be the default-path.\n    if (!cookie.path || cookie.path[0] !== \"/\") {\n      cookie.path = defaultPath(context.pathname);\n      cookie.pathIsDefault = true;\n    }\n\n    // S5.3 step 8: NOOP; secure attribute\n    // S5.3 step 9: NOOP; httpOnly attribute\n\n    // S5.3 step 10\n    if (options.http === false && cookie.httpOnly) {\n      err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // 6252bis-02 S5.4 Step 13 & 14:\n    if (cookie.sameSite !== \"none\" && sameSiteContext) {\n      // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\n      //  is being set from a context whose \"site for cookies\" is not an\n      //  exact match for request-uri's host's registered domain, then\n      //  abort these steps and ignore the newly created cookie entirely.\"\n      if (sameSiteContext === \"none\") {\n        err = new Error(\n          \"Cookie is SameSite but this is a cross-origin request\"\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    /* 6265bis-02 S5.4 Steps 15 & 16 */\n    const ignoreErrorForPrefixSecurity =\n      this.prefixSecurity === PrefixSecurityEnum.SILENT;\n    const prefixSecurityDisabled =\n      this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n    /* If prefix checking is not disabled ...*/\n    if (!prefixSecurityDisabled) {\n      let errorFound = false;\n      let errorMsg;\n      /* Check secure prefix condition */\n      if (!isSecurePrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n      } else if (!isHostPrefixConditionMet(cookie)) {\n        /* Check host prefix condition */\n        errorFound = true;\n        errorMsg =\n          \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n      }\n      if (errorFound) {\n        return cb(\n          options.ignoreError || ignoreErrorForPrefixSecurity\n            ? null\n            : new Error(errorMsg)\n        );\n      }\n    }\n\n    const store = this.store;\n\n    if (!store.updateCookie) {\n      store.updateCookie = function(oldCookie, newCookie, cb) {\n        this.putCookie(newCookie, cb);\n      };\n    }\n\n    function withCookie(err, oldCookie) {\n      if (err) {\n        return cb(err);\n      }\n\n      const next = function(err) {\n        if (err) {\n          return cb(err);\n        } else {\n          cb(null, cookie);\n        }\n      };\n\n      if (oldCookie) {\n        // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n        // domain, and path as the newly created cookie:\"\n        if (options.http === false && oldCookie.httpOnly) {\n          // step 11.2\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n          return cb(options.ignoreError ? null : err);\n        }\n        cookie.creation = oldCookie.creation; // step 11.3\n        cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n        cookie.lastAccessed = now;\n        // Step 11.4 (delete cookie) is implied by just setting the new one:\n        store.updateCookie(oldCookie, cookie, next); // step 12\n      } else {\n        cookie.creation = cookie.lastAccessed = now;\n        store.putCookie(cookie, next); // step 12\n      }\n    }\n\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n  }\n\n  // RFC6365 S5.4\n  getCookies(url, options, cb) {\n    const context = getCookieContext(url);\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    const host = canonicalDomain(context.hostname);\n    const path = context.pathname || \"/\";\n\n    let secure = options.secure;\n    if (\n      secure == null &&\n      context.protocol &&\n      (context.protocol == \"https:\" || context.protocol == \"wss:\")\n    ) {\n      secure = true;\n    }\n\n    let sameSiteLevel = 0;\n    if (options.sameSiteContext) {\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n      if (!sameSiteLevel) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    let http = options.http;\n    if (http == null) {\n      http = true;\n    }\n\n    const now = options.now || Date.now();\n    const expireCheck = options.expire !== false;\n    const allPaths = !!options.allPaths;\n    const store = this.store;\n\n    function matchingCookie(c) {\n      // \"Either:\n      //   The cookie's host-only-flag is true and the canonicalized\n      //   request-host is identical to the cookie's domain.\n      // Or:\n      //   The cookie's host-only-flag is false and the canonicalized\n      //   request-host domain-matches the cookie's domain.\"\n      if (c.hostOnly) {\n        if (c.domain != host) {\n          return false;\n        }\n      } else {\n        if (!domainMatch(host, c.domain, false)) {\n          return false;\n        }\n      }\n\n      // \"The request-uri's path path-matches the cookie's path.\"\n      if (!allPaths && !pathMatch(path, c.path)) {\n        return false;\n      }\n\n      // \"If the cookie's secure-only-flag is true, then the request-uri's\n      // scheme must denote a \"secure\" protocol\"\n      if (c.secure && !secure) {\n        return false;\n      }\n\n      // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n      // cookie-string is being generated for a \"non-HTTP\" API\"\n      if (c.httpOnly && !http) {\n        return false;\n      }\n\n      // RFC6265bis-02 S5.3.7\n      if (sameSiteLevel) {\n        const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n        if (cookieLevel > sameSiteLevel) {\n          // only allow cookies at or below the request level\n          return false;\n        }\n      }\n\n      // deferred from S5.3\n      // non-RFC: allow retention of expired cookies by choice\n      if (expireCheck && c.expiryTime() <= now) {\n        store.removeCookie(c.domain, c.path, c.key, () => {}); // result ignored\n        return false;\n      }\n\n      return true;\n    }\n\n    store.findCookies(\n      host,\n      allPaths ? null : path,\n      this.allowSpecialUseDomain,\n      (err, cookies) => {\n        if (err) {\n          return cb(err);\n        }\n\n        cookies = cookies.filter(matchingCookie);\n\n        // sorting of S5.4 part 2\n        if (options.sort !== false) {\n          cookies = cookies.sort(cookieCompare);\n        }\n\n        // S5.4 part 3\n        const now = new Date();\n        for (const cookie of cookies) {\n          cookie.lastAccessed = now;\n        }\n        // TODO persist lastAccessed\n\n        cb(null, cookies);\n      }\n    );\n  }\n\n  getCookieString(...args) {\n    const cb = args.pop();\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies\n            .sort(cookieCompare)\n            .map(c => c.cookieString())\n            .join(\"; \")\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  getSetCookieStrings(...args) {\n    const cb = args.pop();\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies.map(c => {\n            return c.toString();\n          })\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  serialize(cb) {\n    let type = this.store.constructor.name;\n    if (type === \"Object\") {\n      type = null;\n    }\n\n    // update README.md \"Serialization Format\" if you change this, please!\n    const serialized = {\n      // The version of tough-cookie that serialized this jar. Generally a good\n      // practice since future versions can make data import decisions based on\n      // known past behavior. When/if this matters, use `semver`.\n      version: `tough-cookie@${VERSION}`,\n\n      // add the store type, to make humans happy:\n      storeType: type,\n\n      // CookieJar configuration:\n      rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n\n      // this gets filled from getAllCookies:\n      cookies: []\n    };\n\n    if (\n      !(\n        this.store.getAllCookies &&\n        typeof this.store.getAllCookies === \"function\"\n      )\n    ) {\n      return cb(\n        new Error(\n          \"store does not support getAllCookies and cannot be serialized\"\n        )\n      );\n    }\n\n    this.store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      serialized.cookies = cookies.map(cookie => {\n        // convert to serialized 'raw' cookies\n        cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n\n        // Remove the index so new ones get assigned during deserialization\n        delete cookie.creationIndex;\n\n        return cookie;\n      });\n\n      return cb(null, serialized);\n    });\n  }\n\n  toJSON() {\n    return this.serializeSync();\n  }\n\n  // use the class method CookieJar.deserialize instead of calling this directly\n  _importCookies(serialized, cb) {\n    let cookies = serialized.cookies;\n    if (!cookies || !Array.isArray(cookies)) {\n      return cb(new Error(\"serialized jar has no cookies array\"));\n    }\n    cookies = cookies.slice(); // do not modify the original\n\n    const putNext = err => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (!cookies.length) {\n        return cb(err, this);\n      }\n\n      let cookie;\n      try {\n        cookie = fromJSON(cookies.shift());\n      } catch (e) {\n        return cb(e);\n      }\n\n      if (cookie === null) {\n        return putNext(null); // skip this cookie\n      }\n\n      this.store.putCookie(cookie, putNext);\n    };\n\n    putNext();\n  }\n\n  clone(newStore, cb) {\n    if (arguments.length === 1) {\n      cb = newStore;\n      newStore = null;\n    }\n\n    this.serialize((err, serialized) => {\n      if (err) {\n        return cb(err);\n      }\n      CookieJar.deserialize(serialized, newStore, cb);\n    });\n  }\n\n  cloneSync(newStore) {\n    if (arguments.length === 0) {\n      return this._cloneSync();\n    }\n    if (!newStore.synchronous) {\n      throw new Error(\n        \"CookieJar clone destination store is not synchronous; use async API instead.\"\n      );\n    }\n    return this._cloneSync(newStore);\n  }\n\n  removeAllCookies(cb) {\n    const store = this.store;\n\n    // Check that the store implements its own removeAllCookies(). The default\n    // implementation in Store will immediately call the callback with a \"not\n    // implemented\" Error.\n    if (\n      typeof store.removeAllCookies === \"function\" &&\n      store.removeAllCookies !== Store.prototype.removeAllCookies\n    ) {\n      return store.removeAllCookies(cb);\n    }\n\n    store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (cookies.length === 0) {\n        return cb(null);\n      }\n\n      let completedCount = 0;\n      const removeErrors = [];\n\n      function removeCookieCb(removeErr) {\n        if (removeErr) {\n          removeErrors.push(removeErr);\n        }\n\n        completedCount++;\n\n        if (completedCount === cookies.length) {\n          return cb(removeErrors.length ? removeErrors[0] : null);\n        }\n      }\n\n      cookies.forEach(cookie => {\n        store.removeCookie(\n          cookie.domain,\n          cookie.path,\n          cookie.key,\n          removeCookieCb\n        );\n      });\n    });\n  }\n\n  static deserialize(strOrObj, store, cb) {\n    if (arguments.length !== 3) {\n      // store is optional\n      cb = store;\n      store = null;\n    }\n\n    let serialized;\n    if (typeof strOrObj === \"string\") {\n      serialized = jsonParse(strOrObj);\n      if (serialized instanceof Error) {\n        return cb(serialized);\n      }\n    } else {\n      serialized = strOrObj;\n    }\n\n    const jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n    jar._importCookies(serialized, err => {\n      if (err) {\n        return cb(err);\n      }\n      cb(null, jar);\n    });\n  }\n\n  static deserializeSync(strOrObj, store) {\n    const serialized =\n      typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n    const jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n    // catch this mistake early:\n    if (!jar.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    jar._importCookiesSync(serialized);\n    return jar;\n  }\n}\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\n[\n  \"_importCookies\",\n  \"clone\",\n  \"getCookies\",\n  \"getCookieString\",\n  \"getSetCookieStrings\",\n  \"removeAllCookies\",\n  \"serialize\",\n  \"setCookie\"\n].forEach(name => {\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n});\nCookieJar.deserialize = fromCallback(CookieJar.deserialize);\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function(...args) {\n    if (!this.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    let syncErr, syncResult;\n    this[method](...args, (err, result) => {\n      syncErr = err;\n      syncResult = result;\n    });\n\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\nexports.PrefixSecurityEnum = PrefixSecurityEnum;\n"]},"metadata":{},"sourceType":"script"}