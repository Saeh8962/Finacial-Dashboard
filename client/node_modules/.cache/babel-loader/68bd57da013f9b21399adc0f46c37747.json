{"ast":null,"code":"import _regeneratorRuntime from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx\";\nimport React, { Component, ChildComponent } from \"react\";\nimport { ListGroup } from \"react-bootstrap/esm\";\nimport { Button, DropdownMenu, Dropdown } from \"reactstrap/es\"; // import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport { sendEmail } from \"./email.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar request = require('request'); //fuctions add $ sign to values in the watchlist girs\n\n\nfunction add$sign(props) {\n  var Value = props.dataItem[props.field || \"\"];\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: \"$\" + Value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n} //function changes the color of the current price column depenging on its prrice \n\n\nfunction ChangeCurPriceColor(props) {\n  var curValue = props.dataItem[props.field || \"\"];\n  var closeValue = props.dataItem[\"eodClose\" || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: curValue > closeValue ? \"green\" : \"red\"\n    },\n    children: \"$\" + curValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChangeCurPriceColor;\n; //changes the color of the current change column \n\nfunction ChangeCurChangeColor(props) {\n  var value = props.dataItem[props.field || \"\"] > 0 ? \"+\" + props.dataItem[props.field] : props.dataItem[props.field || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: value > 0 ? \"green\" : \"red\"\n    },\n    children: value + \"%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ChangeCurChangeColor;\n;\n\nvar viewChartOver = /*#__PURE__*/function (_React$Component) {\n  _inherits(viewChartOver, _React$Component);\n\n  var _super = _createSuper(viewChartOver);\n\n  function viewChartOver() {\n    _classCallCheck(this, viewChartOver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(viewChartOver, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        title: \"View chart\",\n        children: \"view the char\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return viewChartOver;\n}(React.Component);\n\nexport default withRouter( /*#__PURE__*/function (_React$Component2) {\n  _inherits(WatchList, _React$Component2);\n\n  var _super2 = _createSuper(WatchList);\n\n  function WatchList(props) {\n    var _this;\n\n    _classCallCheck(this, WatchList);\n\n    _this = _super2.call(this, props);\n\n    _this.saveNewStockTrade = function (event) {\n      var result = JSON.parse(event.data); // console.log(result)\n\n      var Alerts = _this.state.user_alerts;\n      var user_watchlist = _this.state.stocks; // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n\n      if (result.type === \"trade\") {\n        user_watchlist.forEach(function (symbol) {\n          var tradePrice = result.data.filter(function (i, n) {\n            return i.s === symbol.Symbol;\n          });\n\n          if (tradePrice.length !== 0) {\n            // symbol.eodClose= (symbol.eodClose*1).toFixed(2);\n            symbol.currentPrice = +tradePrice[tradePrice.length - 1].p.toFixed(2);\n            symbol.CurrentAmountChange = +(symbol.currentPrice - symbol.eodClose).toFixed(2);\n            symbol.CurrentPercentChange = +(symbol.CurrentAmountChange / symbol.eodClose * 100).toFixed(2); // console.log(\"Found Updated price for \",symbol.Symbol,\"\\n\",\"Price: \",symbol.currentPrice)\n            // console.log(\"Found Updating Amount Change, updated Change: \",symbol.CurrentAmountChange)\n            // console.log(\"Found Updating Percent Change, updated Change: \",symbol.CurrentPercentChange)\n            // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n          }\n\n          if (Alerts.uniqueSymbols.includes(symbol.Symbol)) {\n            //check to see if the new price value triggered the alert\n            Alerts.alerts.forEach(function (alert) {\n              if (alert.symbol === symbol) {\n                switch (alert.Identifier) {\n                  case 'Price':\n                    switch (alert.movement) {\n                      case 'Above':\n                        {\n                          if (symbol.currentPrice > alert.valuechange) {\n                            alert(\"Your Price Alert watching for \" + symbol.Symbol + \" to go above: \" + alert.valuechange + \" has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Above Alert not triggered\";\n                        }\n\n                      case 'Below':\n                        {\n                          if (symbol.currentPrice < alert.valuechange) {\n                            alert(\"Your Price Alert watching for \" + symbol.Symbol + \" to go below: \" + alert.valuechange + \" has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Below Alert not triggered\";\n                        }\n\n                      default:\n                        return \"something went wrong\";\n                    }\n\n                  case 'Percent':\n                    switch (alert.movment) {\n                      case 'Up':\n                        {\n                          if (symbol.CurrentPercentChange > alert.valuechange) {\n                            alert(\"Your Percentage Alert watching for \" + symbol.Symbol + \" to be moving up: \" + alert.valuechange + \"% has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Up Alert not triggered\";\n                        }\n\n                      case 'Down':\n                        {\n                          if (symbol.CurrentPercentChange < alert.valuechange) {\n                            alert(\"Your Percentage Alert watching for \" + symbol.Symbol + \" to be moving down: \" + alert.valuechange + \"% has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Down Alert has been triggered\";\n                          }\n\n                          return \"Down Up Alert not triggered\";\n                        }\n\n                      default:\n                        return \"Down Alert not triggered\";\n                    }\n\n                  default:\n                    return \"something went wrong\";\n                }\n              }\n            });\n          }\n        });\n\n        _this.setState({\n          stocks: user_watchlist\n        });\n      }\n    };\n\n    _this.CommandCell = _this.CommandCell.bind(_assertThisInitialized(_this));\n    _this.getEodData = _this.getEodData.bind(_assertThisInitialized(_this));\n    _this.symbolCell = _this.symbolCell.bind(_assertThisInitialized(_this));\n    _this.removeStock = _this.removeStock.bind(_assertThisInitialized(_this));\n    _this.renderStockChart = _this.renderStockChart.bind(_assertThisInitialized(_this));\n    _this.removeHelper = _this.removeHelper.bind(_assertThisInitialized(_this));\n    _this.storeResult = _this.storeResult.bind(_assertThisInitialized(_this));\n    _this.result = [];\n    _this.state = {\n      email: _this.props.email,\n      stocks: _this.props.stocks,\n      AlertData: _this.props.alertData,\n      connectionError: false,\n      dropdownOpen: false,\n      value: \"Your Watchlist\",\n      stockHasBeenRemoved: false,\n      chartStock: \"\" // eodData:\"\"\n\n    };\n    return _this;\n  } //sets the inside of the symbol cell\n\n\n  _createClass(WatchList, [{\n    key: \"symbolCell\",\n    value: function symbolCell(props) {\n      var _this2 = this;\n\n      var symbol = props.dataItem[props.field || \"\"];\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger btn-circle btn-sm\",\n          onClick: function onClick(e) {\n            return _this2.removeStock(e, props.dataItem);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), \" \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    } //handles the function of the remove cells\n\n  }, {\n    key: \"CommandCell\",\n    value: function CommandCell(props) {\n      return /*#__PURE__*/_jsxDEV(MyCommandCell, _objectSpread(_objectSpread({}, props), {}, {\n        remove: this.removeStock\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n        console.log('User has removed a stock.');\n\n        if (this.props.history.push !== undefined) {\n          this.setState({\n            stockHasBeenRemoved: false\n          }, function () {\n            return _this3.props.history.push(\"/profile\", [[{\n              email: _this3.state.email,\n              removeStocks: true\n            }, _this3.state.stocks]]);\n          });\n        } else {\n          this.setState({\n            stocks: this.state.stocks\n          });\n        }\n      }\n\n      if (this.props.stocks.length != prevProps.stocks.length) {\n        console.log('Update stocks');\n        this.setState({\n          stocks: this.props.stocks\n        });\n      }\n\n      if (prevState.chartStock !== this.state.chartStock && this.state.chartStock !== \"\") {\n        var stock_chart = this.state.chartStock;\n        console.log(\"render chart for \", stock_chart);\n        this.setState({\n          chartStock: \"\"\n        }, function () {\n          return _this3.props.history.push(\"/profile\", [[{\n            email: _this3.state.email,\n            chartStock: stock_chart\n          }, _this3.state.stocks]]);\n        });\n      }\n    } // componentDidMount(){\n    //   // var data = getEodData(\"AAPL\");\n    //   // console.log(data);\n    //   // this.setState({eodData:data})\n    // }\n    //update this function to handle dynamic watchlist\n\n  }, {\n    key: \"storeResult\",\n    value: function storeResult(result) {\n      this.result.push(result);\n    }\n  }, {\n    key: \"getEodData\",\n    value: function getEodData(symbols) {\n      if (symbols !== 'No stocks added') {\n        var element = {\n          symbol: \"\",\n          eodClose: \"\",\n          eodPrice: \"\"\n        };\n        var watchlists = symbols;\n        var getsymbols = \"\";\n        var result = new Array(symbols.length).fill(element).map(function (element, index) {\n          element.symbol = symbols[index].symbol;\n          return element;\n        });\n        var x = 0;\n        var Data = symbols.map( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(symbol) {\n            var fullUrl, req, res;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    fullUrl = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=' + symbol.Symbol + '&apikey=2TXPYH4TGZ32RG8D';\n                    req = new Request(fullUrl, {\n                      json: true\n                    });\n                    _context.next = 4;\n                    return fetch(req);\n\n                  case 4:\n                    res = _context.sent;\n\n                    if (!(res.status === 500)) {\n                      _context.next = 9;\n                      break;\n                    }\n\n                    res.json().then(function (json) {\n                      var message = json.message,\n                          stackTrace = json.stackTrace;\n                    }).catch(function (error) {\n                      return Promise.reject(error);\n                    });\n                    _context.next = 10;\n                    break;\n\n                  case 9:\n                    return _context.abrupt(\"return\", res.json());\n\n                  case 10:\n                    //   request(fullUrl, { json: true }, (err, res, body) => {\n                    //     if (err) { return console.log(err); }\n                    //     var eod=body[\"Global Quote\"];\n                    //     var keys = Object.keys(eod).map(key=>key);\n                    //     // console.log(eod);\n                    //     result[x].eodClose=eod['05. price'];\n                    //   //   var newList = watchlists.map((element, index) =>{\n                    //   //     element.eodClose= (eod['05. price']*1).toFixed(2);\n                    //   //     element.CurrentAmountChange= \"\";\n                    //   //     element.CurrentPercentChange= \"\";\n                    //   //     return element\n                    //   //   })\n                    //   //   console.log(newList)\n                    //   // this.setState({stocks:newList});\n                    // })\n                    x = x + 1;\n\n                  case 11:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n        Data.forEach(function (data) {\n          data.then(function (result) {\n            console.log(Object.entries(result)[1]);\n          });\n        });\n        console.log(this.result);\n        var newList = watchlists.map(function (element, index) {\n          element.eodClose = (result[index]['05. price'] * 1).toFixed(2);\n          element.CurrentAmountChange = \"\";\n          element.CurrentPercentChange = \"\";\n          return element;\n        });\n        console.log(newList);\n        this.setState({\n          stocks: newList\n        });\n      } else {\n        console.log(\"No stocks added\");\n        return;\n      }\n    } //     getButton(){\n    //         return(\n    // <button className=\"k-button k-grid-remove-command\"onClick={(e) =>this.remove(e)}>Remove </button>\n    //         )\n    //     }\n    // remove(e,stocks){\n    //     console.log(stocks);\n    // }\n\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(this.state.stocks);\n      this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n\n      if (this.state.stock !== 'No stocks added') {\n        this.getEodData(this.state.stocks);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this4 = this;\n\n      if (this.state.stock != \"No stocks added\") {\n        this.state.stocks.forEach(function (symbol) {\n          _this4.connection.send(JSON.stringify({\n            'type': 'unsubscribe',\n            'symbol': symbol.Symbol\n          }));\n        });\n      }\n\n      this.connection.close(); // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n      // or cleaning up any subscriptions that were created in componentDidMount().\n    } // componentDidUpdate(prevProps, prevState) {\n    //     if (prevProps.stocks !== this.props.stocks) {\n    //       console.log('stocks state has changed.')\n    //     //   this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n    //         this.setState({stocks:this.props.stocks});\n    //     }\n    //   }\n    // toggle(event) {\n    //     this.setState({\n    //       dropdownOpen: !this.state.dropdownOpen,\n    //       value: event.currentTarget.textContent\n    //     });\n    //   }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      this.connection.onopen = function () {\n        if (_this5.state.stocks !== \"No stocks added\") {\n          _this5.state.stocks.forEach(function (symbol) {\n            _this5.connection.send(JSON.stringify({\n              'type': 'subscribe',\n              'symbol': symbol.Symbol\n            }));\n\n            console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol);\n          });\n        } else {\n          console.log(\"no stocks added to subscribe to\");\n        }\n      };\n\n      this.connection.onmessage = this.saveNewStockTrade;\n\n      this.connection.onclose = function () {\n        _this5.setState({\n          connectionError: true\n        });\n      };\n    } // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    //         </div></>\n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n    // }\n\n  }, {\n    key: \"removeStock\",\n    value: function removeStock(htmlEvent, stock) {\n      var _this6 = this;\n\n      //unsubsribe from listening to thsi stock\n      console.log(\"Unsubscribing from: \", stock.Symbol);\n      this.connection.send(JSON.stringify({\n        'type': 'unsubscribe',\n        'symbol': stock\n      })); //first stop the htmlEvents default status\n\n      htmlEvent.preventDefault();\n      var user = {\n        email: this.props.email,\n        stock_symbol: stock.Symbol\n      };\n      console.log(user);\n      var url = '/api/removeUserStock';\n      var req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(function (res) {\n        console.log(res);\n\n        if (res.status === 500) {\n          res.json().then(function (json) {\n            var message = json.message,\n                stackTrace = json.stackTrace;\n          }).catch(function (error) {\n            return Promise.reject(error);\n          });\n        } else {\n          return res.json();\n        }\n      }).then(function (result) {\n        console.log(\"1st remove stock rerender\");\n\n        _this6.setState({\n          remove_status: result\n        }, function () {\n          return _this6.removeHelper();\n        });\n      });\n    }\n  }, {\n    key: \"removeHelper\",\n    value: function removeHelper() {\n      console.log(\"p/179\", this.state.remove_status); //removed but still showing on watch list\n\n      if (this.state.remove_status.response === \"Stock not on watch list\") {\n        alert(\"Stock Queued For Deletion, Please Login In Again\");\n      } //stock has been removed from watchlist\n      else if (this.state.remove_status.Response === \"Sucessfully removed stock\") {\n          console.log(\"2nd remove stock rerender\");\n          this.setState({\n            stockHasBeenRemoved: true\n          });\n        }\n    } // getUserStocks(){\n    //     var user={ \n    //         email: this.state.email,\n    //     }\n    //     var url = \"/api/getUserStocks\";\n    //     const req = new Request(url,{\n    //         method:\"POST\",\n    //         headers:{\"Content-Type\":\"application/json\"},\n    //         body:JSON.stringify(user),\n    //     });\n    //     fetch(req)\n    //     .then((res)=>{\n    //         return res.json();\n    //     }).catch((error)=>{\n    //         console.log(\"p/121\");\n    //         console.log(error);\n    //         return Promise.reject(error);\n    //         })\n    //     .then(stock_results => {\n    //         console.log(\"3rdt ADD/remove Stock Rerender\");\n    //         this.setState({stocks:stock_results},()=>this.updatePage)});\n    // }\n    // updatePage(){\n    //     console.log(\"In update page \",this.state.stocks);\n    //     this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n    // }\n    // UpdateStockOnPage(){\n    //     if(this.state.stock_symbol_status === 'User had already added this stock'){\n    //         alert(\"This stock is already on your watchlist\");\n    //     }\n    //     else{\n    //         console.log(\"2nd ADD Stock Rerender\");\n    //         this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n    //     }\n    // }\n    // addUserStock(){\n    //     if(this.state.stock_symbol_status !== \"stock not found\"){\n    //         console.log(\"Subscribing to \",this.state.stock_to_watch)\n    //         this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n    //         var user={\n    //             email:this.props.email,\n    //             addStock: this.state.stock_to_watch\n    //         } \n    //         var url=\"/api/AddUserStocks\";\n    //         const req = new Request(url,{\n    //             method:\"POST\",\n    //             headers:{\"Content-Type\":\"application/json\"},\n    //             body:JSON.stringify(user),\n    //         });\n    //         fetch(req)\n    //         .then((res)=>{\n    //             return res.json();\n    //         }).catch((error)=>{\n    //             return Promise.reject(error);\n    //           })\n    //         .then(result => {\n    //             console.log(\"1st ADD Stock Rerender\");\n    //             this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n    //     }\n    //     else{\n    //         //put in this functionality \n    //         alert(\"stock not found\");\n    //     }\n    // }\n    // handleChange(event) {\n    //     this.setState({stock_to_watch: event.target.value});\n    //   }\n\n  }, {\n    key: \"renderStockChart\",\n    value: function renderStockChart(event) {\n      console.log(event.dataItem.Symbol);\n      this.setState({\n        chartStock: event.dataItem.Symbol\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.stocks);\n      // console.log(\"In render: \", this.state.stocks,this.props.stocks);\n      // // console.log(\"In render: \", this.state.dropdownDisplay);\n      // if (this.state == null){\n      //     this.props.history.push(\"/error\");\n      //     }\n      // var Message = \"Your WatchList\";\n      // if(this.state.stocks===\"No stocks added\"){\n      //     Message =\"Empty Watchlist\"; \n      // }\n      // var MessageArrowDir;\n      // if(this.state.dropdownOpen){\n      //   MessageArrowDir = \"\\u25BC\";\n      // }\n      // else{\n      //   MessageArrowDir = \"\\u25B2\";\n      // }\n      // var dropdownDisplay =\n      //     <> <div className = \"dropDiv\">\n      //         <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n      //         <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n      //                 data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n      //     </div></>\n      // var dropdown;\n      // if(this.state.stocks!==\"No stocks added\"){\n      // dropdown = \n      // <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n      //     {dropdownDisplay}\n      //     <DropdownMenu className = \"DDM\">\n      //       <div className = \"ArtistsDisplayWrapper\">\n      //         {this.state.stocks.map((stocks,index) =>\n      //     <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n      //         <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n      //         <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n      //         <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n      //     </div>\n      //         )}\n      //       </div>\n      //     </DropdownMenu>\n      // </Dropdown>\n      // }\n      // else{\n      //     dropdown = dropdownDisplay;\n      // }\n      // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n      // this.props.history.push(\"/error\",this.state)\n      // onClick={this.props.onClick}\n      var useData;\n\n      if (this.props.stocks !== \"No stocks added\") {\n        useData = this.props.stocks;\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100,\n              cell: this.symbolCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"eodClose\",\n              cell: add$sign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\",\n              cell: ChangeCurPriceColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"CurrentAmountChange\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"CurrentPercentChange\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Track\",\n              id: \"Symbol\",\n              cell: this.CommandCell,\n              width: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this);\n      } else {\n        useData = [{\n          eodClose: \"Add stocks\",\n          Symbol: \"Add stocks\",\n          currentPrice: \"Add stocks\",\n          Change: \"Add stocks\",\n          CurrentAmountChange: \"Add stocks\",\n          CurrentPercentChange: \"Add stocks\",\n          Track: \"Add stocks\"\n        }];\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"eodClose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"CurrentAmountChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"CurrentPercentChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Track\",\n              field: \"Track\",\n              width: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this);\n      } // console.log(this.state.eodData)\n\n\n      return grid;\n    }\n  }]);\n\n  return WatchList;\n}(React.Component));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeCurPriceColor\");\n$RefreshReg$(_c2, \"ChangeCurChangeColor\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx"],"names":["React","Component","ChildComponent","ListGroup","Button","DropdownMenu","Dropdown","withRouter","Grid","GridCellProps","GridColumn","ReactDOM","Tooltip","OverlayTrigger","MyCommandCell","sendEmail","request","require","add$sign","props","Value","dataItem","field","ChangeCurPriceColor","curValue","closeValue","color","ChangeCurChangeColor","value","viewChartOver","saveNewStockTrade","event","result","JSON","parse","data","Alerts","state","user_alerts","user_watchlist","stocks","type","forEach","symbol","tradePrice","filter","i","n","s","Symbol","length","currentPrice","p","toFixed","CurrentAmountChange","eodClose","CurrentPercentChange","uniqueSymbols","includes","alerts","alert","Identifier","movement","valuechange","email","movment","setState","CommandCell","bind","getEodData","symbolCell","removeStock","renderStockChart","removeHelper","storeResult","AlertData","alertData","connectionError","dropdownOpen","stockHasBeenRemoved","chartStock","e","prevProps","prevState","console","log","history","push","undefined","removeStocks","stock_chart","symbols","element","eodPrice","watchlists","getsymbols","Array","fill","map","index","x","Data","fullUrl","req","Request","json","fetch","res","status","then","message","stackTrace","catch","error","Promise","reject","Object","entries","newList","connection","WebSocket","stock","send","stringify","close","onopen","onmessage","onclose","htmlEvent","preventDefault","user","stock_symbol","url","method","headers","body","remove_status","response","Response","useData","grid","width","Change","Track"],"mappings":"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","sourcesContent":["import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown,} from \"reactstrap/es\";\n// import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\nimport {withRouter} from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport {sendEmail} from \"./email.js\"\n\nconst request = require('request');\n\n//fuctions add $ sign to values in the watchlist girs\nfunction add$sign(props){\n  const Value = props.dataItem[props.field || \"\"];\n  return (\n    <td >\n      {\"$\"+Value}\n    </td>\n  )\n}\n\n//function changes the color of the current price column depenging on its prrice \nfunction ChangeCurPriceColor(props){\n  const curValue = props.dataItem[props.field || \"\"];\n  const closeValue =props.dataItem[\"eodClose\"||\"\"]\n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: curValue > closeValue ? \"green\" : \"red\" }}>\n      {\"$\"+curValue}\n    </td>\n  )\n  \n};\n\n//changes the color of the current change column \nfunction ChangeCurChangeColor(props){\n  const value = props.dataItem[props.field || \"\"]>0? \"+\"+props.dataItem[props.field]:props.dataItem[props.field || \"\"];\n  \n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: value > 0 ? \"green\" : \"red\" }}>\n      {value+\"%\"}\n    </td>\n  )\n  \n};\nclass viewChartOver extends React.Component {\n  render() {\n    return (\n      <td title={\"View chart\"}>\n        {\"view the char\"}\n      </td>\n    );\n  }\n}\nexport default withRouter( class WatchList extends React.Component {\n \n    constructor(props) {\n        super(props)\n            this.CommandCell=this.CommandCell.bind(this)\n            this.getEodData=this.getEodData.bind(this)\n            this.symbolCell = this.symbolCell.bind(this);\n            this.removeStock=this.removeStock.bind(this);\n            this.renderStockChart=this.renderStockChart.bind(this);\n            this.removeHelper=this.removeHelper.bind(this);\n            this.storeResult= this.storeResult.bind(this);\n           this.result = [];\n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                AlertData:this.props.alertData,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\",\n                stockHasBeenRemoved:false,\n                chartStock:\"\",\n                // eodData:\"\"\n                \n            }\n            \n        \n        \n    }\n\n    //sets the inside of the symbol cell\n    symbolCell(props){\n      var symbol = props.dataItem[props.field || \"\"];\n      \n      return(\n        \n        \n        <td >\n        <button type=\"button\" className=\"btn btn-danger btn-circle btn-sm\" onClick={(e) =>\n  \n          this.removeStock(e,props.dataItem)\n          }>X</button> {symbol}\n        </td>\n        \n   \n      );\n     \n\n\n    }\n    //handles the function of the remove cells\n    CommandCell(props){\n      return(\n        <MyCommandCell\n          {...props}\n          \n          remove={this.removeStock}\n          \n        />\n      );\n    }\n        \n      \n      componentDidUpdate(prevProps, prevState) {\n        if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n          console.log('User has removed a stock.')\n          if(this.props.history.push!== undefined) {\n            this.setState({stockHasBeenRemoved:false},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,removeStocks:true},this.state.stocks]]));\n          }\n          else{\n              this.setState({stocks:this.state.stocks})\n          }\n        }\n          if (this.props.stocks.length != prevProps.stocks.length) {\n            console.log('Update stocks')\n            this.setState({stocks:this.props.stocks})\n         \n        }\n        if(prevState.chartStock!==this.state.chartStock && this.state.chartStock!==\"\"){\n          var stock_chart= this.state.chartStock;\n          console.log(\"render chart for \", stock_chart);\n          \n          this.setState({chartStock:\"\"},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,chartStock:stock_chart},this.state.stocks]]))\n        }\n      }\n      \n      // componentDidMount(){\n      //   // var data = getEodData(\"AAPL\");\n      //   // console.log(data);\n        \n      //   // this.setState({eodData:data})\n        \n      // }\n\n\n      //update this function to handle dynamic watchlist\n      storeResult(result){\n        this.result.push(result);\n      }\n      getEodData(symbols){\n        if(symbols !== 'No stocks added'){\n          var element = {\n            symbol:\"\",\n            eodClose:\"\",\n            eodPrice:\"\"\n          }\n          var watchlists = symbols;\n          var getsymbols =\"\";\n          let result =new Array(symbols.length).fill(element).map((element, index)=>{\n            element.symbol = symbols[index].symbol\n            \n            return element\n          })\n          var x = 0;\n          var Data = symbols.map(async (symbol)=>{\n            \n            var fullUrl = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol.Symbol+'&apikey=2TXPYH4TGZ32RG8D';\n            const req = new Request(fullUrl, { json: true });      \n            const res = await fetch(req);\n            if (res.status === 500) {\n              res.json()\n                .then((json) => {\n                  const { message, stackTrace } = json;\n                })\n                .catch((error) => {\n                  return Promise.reject(error);\n                });\n            }\n            else {\n             return res.json()      \n            }\n           \n        //   request(fullUrl, { json: true }, (err, res, body) => {\n            \n        //     if (err) { return console.log(err); }\n        //     var eod=body[\"Global Quote\"];\n        //     var keys = Object.keys(eod).map(key=>key);\n        //     // console.log(eod);\n        //     result[x].eodClose=eod['05. price'];\n            \n        //   //   var newList = watchlists.map((element, index) =>{\n              \n        //   //     element.eodClose= (eod['05. price']*1).toFixed(2);\n              \n        //   //     element.CurrentAmountChange= \"\";\n        //   //     element.CurrentPercentChange= \"\";\n        //   //     return element\n        //   //   })\n        //   //   console.log(newList)\n        //   // this.setState({stocks:newList});\n          \n        // })\n        x = x+1; \n      })\n     Data.forEach(data=> {\n        data.then(function(result){\n          console.log(Object.entries(result)[1])\n        })\n      })\n      \n      console.log(this.result)\n        var newList = watchlists.map((element, index) =>{\n              \n          element.eodClose= (result[index]['05. price']*1).toFixed(2);\n          \n          element.CurrentAmountChange= \"\";\n          element.CurrentPercentChange= \"\";\n          return element\n        })\n        console.log(newList)\n      this.setState({stocks:newList});\n      }\n        else{\n          console.log(\"No stocks added\")\n          return;\n        }\n      }\n//     getButton(){\n//         return(\n// <button className=\"k-button k-grid-remove-command\"onClick={(e) =>this.remove(e)}>Remove </button>\n//         )\n//     }\n    // remove(e,stocks){\n    //     console.log(stocks);\n    // }\n    componentWillMount(){\n      console.log(this.state.stocks)\n      this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        if(this.state.stock!=='No stocks added'){\n          \n          this.getEodData(this.state.stocks);\n        }\n        \n        \n    }\n    componentWillUnmount(){\n        if(this.state.stock!=\"No stocks added\"){\n          this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n          })\n          \n        }\n        \n        this.connection.close();\n        \n        \n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    // componentDidUpdate(prevProps, prevState) {\n    //     if (prevProps.stocks !== this.props.stocks) {\n    //       console.log('stocks state has changed.')\n    //     //   this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n    //         this.setState({stocks:this.props.stocks});\n    //     }\n    //   }\n    // toggle(event) {\n    //     this.setState({\n    //       dropdownOpen: !this.state.dropdownOpen,\n    //       value: event.currentTarget.textContent\n    //     });\n    //   }\n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        // console.log(result)\n        let Alerts =this.state.user_alerts;\n        let user_watchlist = this.state.stocks\n        // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol.Symbol);\n                if(tradePrice.length !==0){\n                  \n                    // symbol.eodClose= (symbol.eodClose*1).toFixed(2);\n                    symbol.currentPrice = +tradePrice[tradePrice.length-1].p.toFixed(2); \n                    symbol.CurrentAmountChange= +(symbol.currentPrice-symbol.eodClose).toFixed(2);\n                    symbol.CurrentPercentChange= +((symbol.CurrentAmountChange/symbol.eodClose)*100).toFixed(2);\n                    // console.log(\"Found Updated price for \",symbol.Symbol,\"\\n\",\"Price: \",symbol.currentPrice)\n                    // console.log(\"Found Updating Amount Change, updated Change: \",symbol.CurrentAmountChange)\n                    // console.log(\"Found Updating Percent Change, updated Change: \",symbol.CurrentPercentChange)\n                    // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n                }\n                if(Alerts.uniqueSymbols.includes(symbol.Symbol)){\n                  //check to see if the new price value triggered the alert\n                  Alerts.alerts.forEach(alert=>{\n                    if(alert.symbol===symbol){\n                      switch(alert.Identifier){\n                        case 'Price':\n                            switch(alert.movement){\n                                case 'Above':{\n                                  if(symbol.currentPrice > alert.valuechange){\n                                    alert(\"Your Price Alert watching for \"+symbol.Symbol+\" to go above: \"+alert.valuechange+\" has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Above Alert not triggered\");\n                                }\n                                    \n                                case 'Below':{\n                                  if(symbol.currentPrice < alert.valuechange){\n                                    alert(\"Your Price Alert watching for \"+symbol.Symbol+\" to go below: \"+alert.valuechange+\" has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Below Alert not triggered\");\n                                }\n                                \n                                default:\n                                    return (\"something went wrong\");\n                            }\n                        case 'Percent':\n                            switch(alert.movment){\n                                case 'Up':{\n                                  if(symbol.CurrentPercentChange > alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving up: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Up Alert not triggered\");\n                                }\n                                    \n                                case 'Down':{\n                                  if(symbol.CurrentPercentChange < alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving down: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Down Alert has been triggered\");\n                                  }\n                                  return (\"Down Up Alert not triggered\");\n                                }\n                                default:\n                                  return (\"Down Alert not triggered\");\n                            }\n                        default:\n                          return (\"something went wrong\");\n                    \n                    }}\n                  })\n                  \n            }\n            \n        })\n        this.setState({stocks:user_watchlist});\n      }\n    }\n     \n    componentDidMount(){\n       \n        this.connection.onopen = ()=> { \n            if (this.state.stocks!==\"No stocks added\"){\n                this.state.stocks.forEach(symbol=>{\n                    this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol.Symbol}));\n                    console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol)\n                })\n            }\n            else{\n                console.log(\"no stocks added to subscribe to\");\n            }\n            \n        }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n    }\n    \n    // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    \n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n        \n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n    //         </div></>\n        \n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    \n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n                \n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n        \n\n    // }\n   \n    removeStock(htmlEvent,stock){\n        //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock.Symbol)\n        this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock}))\n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock.Symbol,\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            console.log(res)\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n                \n              return res.json();\n            }\n          })\n          .then((result)=> {\n              \n              console.log(\"1st remove stock rerender\");\n              this.setState({remove_status:result},()=>this.removeHelper())});\n    \n    }\n    \n    removeHelper(){\n        console.log(\"p/179\",this.state.remove_status);\n        //removed but still showing on watch list\n        if(this.state.remove_status.response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(this.state.remove_status.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({stockHasBeenRemoved:true});\n           \n        }\n    }\n    // getUserStocks(){\n    //     var user={ \n    //         email: this.state.email,\n    //     }\n    //     var url = \"/api/getUserStocks\";\n    //     const req = new Request(url,{\n    //         method:\"POST\",\n    //         headers:{\"Content-Type\":\"application/json\"},\n    //         body:JSON.stringify(user),\n    //     });\n    //     fetch(req)\n    //     .then((res)=>{\n           \n    //         return res.json();\n    //     }).catch((error)=>{\n    //         console.log(\"p/121\");\n    //         console.log(error);\n    //         return Promise.reject(error);\n    //         })\n    //     .then(stock_results => {\n    //         console.log(\"3rdt ADD/remove Stock Rerender\");\n    //         this.setState({stocks:stock_results},()=>this.updatePage)});\n        \n    // }\n    \n    // updatePage(){\n    //     console.log(\"In update page \",this.state.stocks);\n        \n    //     this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n        \n        \n        \n    // }\n    \n    // UpdateStockOnPage(){\n    //     if(this.state.stock_symbol_status === 'User had already added this stock'){\n    //         alert(\"This stock is already on your watchlist\");\n    //     }\n        \n    //     else{\n    //         console.log(\"2nd ADD Stock Rerender\");\n    //         this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n    //     }\n    // }\n\n    // addUserStock(){\n    //     if(this.state.stock_symbol_status !== \"stock not found\"){\n    //         console.log(\"Subscribing to \",this.state.stock_to_watch)\n    //         this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n    //         var user={\n    //             email:this.props.email,\n    //             addStock: this.state.stock_to_watch\n    //         } \n           \n    //         var url=\"/api/AddUserStocks\";\n    //         const req = new Request(url,{\n    //             method:\"POST\",\n    //             headers:{\"Content-Type\":\"application/json\"},\n    //             body:JSON.stringify(user),\n    //         });\n    //         fetch(req)\n    //         .then((res)=>{\n                \n    //             return res.json();\n    //         }).catch((error)=>{\n    //             return Promise.reject(error);\n    //           })\n    //         .then(result => {\n    //             console.log(\"1st ADD Stock Rerender\");\n    //             this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n            \n    //     }\n    \n    //     else{\n    //         //put in this functionality \n    //         alert(\"stock not found\");\n    //     }\n        \n        \n    // }\n    // handleChange(event) {\n         \n    //     this.setState({stock_to_watch: event.target.value});\n    //   }\n\n    renderStockChart(event){\n      console.log(event.dataItem.Symbol)\n      this.setState({chartStock:event.dataItem.Symbol})\n    }\n    render(){\n      // console.log(this.state.stocks);\n    \n        // console.log(\"In render: \", this.state.stocks,this.props.stocks);\n        // // console.log(\"In render: \", this.state.dropdownDisplay);\n        // if (this.state == null){\n        //     this.props.history.push(\"/error\");\n        //     }\n        \n        \n        // var Message = \"Your WatchList\";\n        // if(this.state.stocks===\"No stocks added\"){\n        //     Message =\"Empty Watchlist\"; \n        // }\n        // var MessageArrowDir;\n        // if(this.state.dropdownOpen){\n        //   MessageArrowDir = \"\\u25BC\";\n        // }\n    \n        // else{\n        //   MessageArrowDir = \"\\u25B2\";\n        // }\n        \n        // var dropdownDisplay =\n        //     <> <div className = \"dropDiv\">\n        //         <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n        //         <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n        //                 data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n        //     </div></>\n        // var dropdown;\n        // if(this.state.stocks!==\"No stocks added\"){\n    \n        // dropdown = \n    \n        // <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n        //     {dropdownDisplay}\n    \n        //     <DropdownMenu className = \"DDM\">\n        //       <div className = \"ArtistsDisplayWrapper\">\n        //         {this.state.stocks.map((stocks,index) =>\n                \n        //     <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n        //         <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n        //         <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n        //         <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n        //     </div>\n        //         )}\n        //       </div>\n        //     </DropdownMenu>\n        // </Dropdown>\n        // }\n        // else{\n        //     dropdown = dropdownDisplay;\n    \n           \n      \n        // }\n       \n        // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n        \n        // this.props.history.push(\"/error\",this.state)\n        // onClick={this.props.onClick}\n        var useData;\n\n        if(this.props.stocks !==\"No stocks added\"){\n          useData=this.props.stocks\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                {/* <GridColumn title=\"Name\" field=\"name\" /> */}\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100} cell={this.symbolCell} />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" cell={add$sign}/>\n                <GridColumn title=\"Price\" field=\"currentPrice\" cell={ChangeCurPriceColor}/>\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" cell={ChangeCurChangeColor} />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" cell={ChangeCurChangeColor}/>\n                {/* <GridColumn title=\"View Chart\" id=\"Symbol\" cell={tooltiprender} width=\"200px\" /> */}\n                <GridColumn title=\"Track\" id=\"Symbol\" cell={this.CommandCell} width=\"200px\" />\n              </Grid>\n            </Tooltip>\n         \n          )\n        }\n        else{\n          useData=[{\n            eodClose:\"Add stocks\",\n            Symbol:\"Add stocks\",\n            currentPrice:\"Add stocks\",\n            Change:\"Add stocks\",\n            CurrentAmountChange:\"Add stocks\",\n            CurrentPercentChange:\"Add stocks\",\n            Track:\"Add stocks\"\n\n          },]\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100}  />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" />\n                <GridColumn title=\"Price\" field=\"currentPrice\" />\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" />\n                <GridColumn title=\"Track\" field=\"Track\" width=\"200px\" />\n              </Grid>\n            </Tooltip>\n          )\n        }\n        // console.log(this.state.eodData)\n        return (\n          \n          \n          grid\n          \n          );\n        }\n})\n"]},"metadata":{},"sourceType":"module"}