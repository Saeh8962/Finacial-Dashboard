{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar fs = require(\"fs\");\n\nvar _require = require(\"url\"),\n    fileURLToPath = _require.fileURLToPath;\n\nvar _require2 = require(\"whatwg-url\"),\n    parseURL = _require2.parseURL;\n\nvar dataURLFromRecord = require(\"data-urls\").fromURLRecord;\n\nvar packageVersion = require(\"../../../../package.json\").version;\n\nvar agentFactory = require(\"../../living/helpers/agent-factory\");\n\nvar Request = require(\"../../living/helpers/http-request\");\n\nvar IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\n\nmodule.exports = /*#__PURE__*/function () {\n  function ResourceLoader() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$strictSSL = _ref.strictSSL,\n        strictSSL = _ref$strictSSL === void 0 ? true : _ref$strictSSL,\n        _ref$proxy = _ref.proxy,\n        proxy = _ref$proxy === void 0 ? undefined : _ref$proxy,\n        _ref$userAgent = _ref.userAgent,\n        userAgent = _ref$userAgent === void 0 ? \"Mozilla/5.0 (\".concat(process.platform || \"unknown OS\", \") AppleWebKit/537.36 \") + \"(KHTML, like Gecko) jsdom/\".concat(packageVersion) : _ref$userAgent;\n\n    _classCallCheck(this, ResourceLoader);\n\n    this._strictSSL = strictSSL;\n    this._proxy = proxy;\n    this._userAgent = userAgent;\n  }\n\n  _createClass(ResourceLoader, [{\n    key: \"_readDataURL\",\n    value: function _readDataURL(urlRecord) {\n      var dataURL = dataURLFromRecord(urlRecord);\n      var timeoutId;\n      var promise = new Promise(function (resolve) {\n        timeoutId = setTimeout(resolve, 0, dataURL.body);\n      });\n\n      promise.abort = function () {\n        if (timeoutId !== undefined) {\n          clearTimeout(timeoutId);\n        }\n      };\n\n      return promise;\n    }\n  }, {\n    key: \"_readFile\",\n    value: function _readFile(filePath) {\n      var readableStream, abort; // Native Promises doesn't have an \"abort\" method.\n      // Creating a promise for two reason:\n      //   1. fetch always return a promise.\n      //   2. We need to add an abort handler.\n\n      var promise = new Promise(function (resolve, reject) {\n        readableStream = fs.createReadStream(filePath);\n        var data = Buffer.alloc(0);\n        abort = reject;\n        readableStream.on(\"error\", reject);\n        readableStream.on(\"data\", function (chunk) {\n          data = Buffer.concat([data, chunk]);\n        });\n        readableStream.on(\"end\", function () {\n          resolve(data);\n        });\n      });\n\n      promise.abort = function () {\n        readableStream.destroy();\n        var error = new Error(\"request canceled by user\");\n        error.isAbortError = true;\n        abort(error);\n      };\n\n      return promise;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(urlString) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          accept = _ref2.accept,\n          cookieJar = _ref2.cookieJar,\n          referrer = _ref2.referrer;\n\n      var url = parseURL(urlString);\n\n      if (!url) {\n        return Promise.reject(new Error(\"Tried to fetch invalid URL \".concat(urlString)));\n      }\n\n      switch (url.scheme) {\n        case \"data\":\n          {\n            return this._readDataURL(url);\n          }\n\n        case \"http\":\n        case \"https\":\n          {\n            var agents = agentFactory(this._proxy, this._strictSSL);\n            var headers = {\n              \"User-Agent\": this._userAgent,\n              \"Accept-Language\": \"en\",\n              \"Accept-Encoding\": \"gzip\",\n              \"Accept\": accept || \"*/*\"\n            };\n\n            if (referrer && !IS_BROWSER) {\n              headers.Referer = referrer;\n            }\n\n            var requestClient = new Request(urlString, {\n              followRedirects: true,\n              cookieJar: cookieJar,\n              agents: agents\n            }, {\n              headers: headers\n            });\n            var promise = new Promise(function (resolve, reject) {\n              var accumulated = [];\n              requestClient.once(\"response\", function (res) {\n                promise.response = res;\n                var statusCode = res.statusCode; // TODO This deviates from the spec when it comes to\n                // loading resources such as images\n\n                if (statusCode < 200 || statusCode > 299) {\n                  requestClient.abort();\n                  reject(new Error(\"Resource was not loaded. Status: \".concat(statusCode)));\n                }\n              });\n              requestClient.on(\"data\", function (chunk) {\n                accumulated.push(chunk);\n              });\n              requestClient.on(\"end\", function () {\n                return resolve(Buffer.concat(accumulated));\n              });\n              requestClient.on(\"error\", reject);\n            }); // The method fromURL in lib/api.js crashes without the following four\n            // properties defined on the Promise instance, causing the test suite to halt\n\n            requestClient.on(\"end\", function () {\n              promise.href = requestClient.currentURL;\n            });\n            promise.abort = requestClient.abort.bind(requestClient);\n\n            promise.getHeader = function (name) {\n              return headers[name] || requestClient.getHeader(name);\n            };\n\n            requestClient.end();\n            return promise;\n          }\n\n        case \"file\":\n          {\n            try {\n              return this._readFile(fileURLToPath(urlString));\n            } catch (e) {\n              return Promise.reject(e);\n            }\n          }\n\n        default:\n          {\n            return Promise.reject(new Error(\"Tried to fetch URL \".concat(urlString, \" with invalid scheme \").concat(url.scheme)));\n          }\n      }\n    }\n  }]);\n\n  return ResourceLoader;\n}();","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/browser/resources/resource-loader.js"],"names":["fs","require","fileURLToPath","parseURL","dataURLFromRecord","fromURLRecord","packageVersion","version","agentFactory","Request","IS_BROWSER","Object","prototype","toString","call","process","module","exports","strictSSL","proxy","undefined","userAgent","platform","_strictSSL","_proxy","_userAgent","urlRecord","dataURL","timeoutId","promise","Promise","resolve","setTimeout","body","abort","clearTimeout","filePath","readableStream","reject","createReadStream","data","Buffer","alloc","on","chunk","concat","destroy","error","Error","isAbortError","urlString","accept","cookieJar","referrer","url","scheme","_readDataURL","agents","headers","Referer","requestClient","followRedirects","accumulated","once","res","response","statusCode","push","href","currentURL","bind","getHeader","name","end","_readFile","e"],"mappings":"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","sourcesContent":["\"use strict\";\nconst fs = require(\"fs\");\nconst { fileURLToPath } = require(\"url\");\nconst { parseURL } = require(\"whatwg-url\");\nconst dataURLFromRecord = require(\"data-urls\").fromURLRecord;\nconst packageVersion = require(\"../../../../package.json\").version;\nconst agentFactory = require(\"../../living/helpers/agent-factory\");\nconst Request = require(\"../../living/helpers/http-request\");\n\nconst IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\n\nmodule.exports = class ResourceLoader {\n  constructor({\n    strictSSL = true,\n    proxy = undefined,\n    userAgent = `Mozilla/5.0 (${process.platform || \"unknown OS\"}) AppleWebKit/537.36 ` +\n                `(KHTML, like Gecko) jsdom/${packageVersion}`\n  } = {}) {\n    this._strictSSL = strictSSL;\n    this._proxy = proxy;\n    this._userAgent = userAgent;\n  }\n\n  _readDataURL(urlRecord) {\n    const dataURL = dataURLFromRecord(urlRecord);\n    let timeoutId;\n    const promise = new Promise(resolve => {\n      timeoutId = setTimeout(resolve, 0, dataURL.body);\n    });\n    promise.abort = () => {\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n    };\n    return promise;\n  }\n\n  _readFile(filePath) {\n    let readableStream, abort; // Native Promises doesn't have an \"abort\" method.\n\n    // Creating a promise for two reason:\n    //   1. fetch always return a promise.\n    //   2. We need to add an abort handler.\n    const promise = new Promise((resolve, reject) => {\n      readableStream = fs.createReadStream(filePath);\n      let data = Buffer.alloc(0);\n\n      abort = reject;\n\n      readableStream.on(\"error\", reject);\n\n      readableStream.on(\"data\", chunk => {\n        data = Buffer.concat([data, chunk]);\n      });\n\n      readableStream.on(\"end\", () => {\n        resolve(data);\n      });\n    });\n\n    promise.abort = () => {\n      readableStream.destroy();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      abort(error);\n    };\n\n    return promise;\n  }\n\n  fetch(urlString, { accept, cookieJar, referrer } = {}) {\n    const url = parseURL(urlString);\n\n    if (!url) {\n      return Promise.reject(new Error(`Tried to fetch invalid URL ${urlString}`));\n    }\n\n    switch (url.scheme) {\n      case \"data\": {\n        return this._readDataURL(url);\n      }\n\n      case \"http\":\n      case \"https\": {\n        const agents = agentFactory(this._proxy, this._strictSSL);\n        const headers = {\n          \"User-Agent\": this._userAgent,\n          \"Accept-Language\": \"en\",\n          \"Accept-Encoding\": \"gzip\",\n          \"Accept\": accept || \"*/*\"\n        };\n        if (referrer && !IS_BROWSER) {\n          headers.Referer = referrer;\n        }\n        const requestClient = new Request(\n          urlString,\n          { followRedirects: true, cookieJar, agents },\n          { headers }\n        );\n        const promise = new Promise((resolve, reject) => {\n          const accumulated = [];\n          requestClient.once(\"response\", res => {\n            promise.response = res;\n            const { statusCode } = res;\n            // TODO This deviates from the spec when it comes to\n            // loading resources such as images\n            if (statusCode < 200 || statusCode > 299) {\n              requestClient.abort();\n              reject(new Error(`Resource was not loaded. Status: ${statusCode}`));\n            }\n          });\n          requestClient.on(\"data\", chunk => {\n            accumulated.push(chunk);\n          });\n          requestClient.on(\"end\", () => resolve(Buffer.concat(accumulated)));\n          requestClient.on(\"error\", reject);\n        });\n        // The method fromURL in lib/api.js crashes without the following four\n        // properties defined on the Promise instance, causing the test suite to halt\n        requestClient.on(\"end\", () => {\n          promise.href = requestClient.currentURL;\n        });\n        promise.abort = requestClient.abort.bind(requestClient);\n        promise.getHeader = name => headers[name] || requestClient.getHeader(name);\n        requestClient.end();\n        return promise;\n      }\n\n      case \"file\": {\n        try {\n          return this._readFile(fileURLToPath(urlString));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n\n      default: {\n        return Promise.reject(new Error(`Tried to fetch URL ${urlString} with invalid scheme ${url.scheme}`));\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}