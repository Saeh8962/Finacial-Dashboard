{"ast":null,"code":"var _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/login.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap/es\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\"; // import { queryResult } from \"pg-promise\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst bcrypt = require('bcrypt-nodejs/bCrypt');\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n    this.test = this.test.bind(this);\n    this.verify = this.verify.bind(this);\n    this.state = {\n      password: \"\",\n      email: \"\",\n      login_toggle: false\n    };\n  }\n\n  handleEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  } // Handle to new Brower path\n\n\n  routeChange(value) {\n    if (value.target.id == \"Back\") {\n      this.props.history.push(\"/\", this.props.history.location.state);\n    } else if (value.target.id == \"Home\") {\n      this.props.history.push(\"/home\", this.props.history.location.state);\n    }\n  }\n\n  test() {\n    //confirm the email exist\n    if (this.state.email != null) {\n      var user = {\n        email: this.state.email\n      };\n      var url = \"/api/loginVerification\";\n      const req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(res => {\n        //Catch server error\n        //no error\n        return res.json();\n      }).catch(error => {\n        console.log(error);\n        return Promise.reject(error);\n      }).then(query_result => {\n        console.log(query_result);\n        this.setState({\n          query: query_result\n        });\n        this.verify();\n      }).catch(error => {\n        console.log(error);\n        console.log(\"error line 77\");\n        return Promise.reject(error);\n      });\n    } else {\n      alert(\"Invalid Email or Password\");\n    }\n  } // Verify the email and password \n\n\n  verify() {\n    console.log(\"Verify\");\n\n    if (this.state.query === \"No User By That Email\") {\n      alert(\"Invalid Email\");\n    } //query error\n    else if (this.state.query == null) {\n        console.log('err line 95'); //invalid email\n\n        return -1; // this.props.history.push(\"/error\");\n      } //verify password\n      else {\n          var email = this.state.query.email;\n          var secured = this.state.query.password;\n          console.log(email, secured);\n\n          if (bcrypt.compareSync(this.state.password, secured)) {\n            var user = {\n              email: email\n            };\n            var url = \"/api/getUserStocks\";\n            const req = new Request(url, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            });\n            fetch(req).then(res => {\n              return res.json();\n            }).then(query_result => this.setState({\n              query: [[{\n                email: this.state.email\n              }], query_result],\n              login_toggle: true\n            }, () => console.log(\"login successful\"))).catch(error => {\n              return Promise.reject(error);\n            });\n          } else {\n            alert(\"Invalid Password\");\n          }\n        }\n  } //render the login page\n\n\n  render() {\n    if (this.state.login_toggle) {\n      // you can login\n      console.log(this.state.query);\n      this.props.history.push(\"/profile\", this.state.query);\n    }\n\n    var leftarrow = \"\\u2190\";\n\n    var backButton = /*#__PURE__*/_jsxDEV(Button, {\n      className: \"Button\",\n      id: \"Back\",\n      onClick: this.routeChange,\n      children: leftarrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 26\n    }, this);\n\n    var loginButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: this.test,\n      className: \"Button\",\n      id: \"SignButton\",\n      children: \"Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 27\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CenterWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"HeaderInfo\",\n          id: \"TitleTextSignUp\",\n          children: \"Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"FormFields\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormField\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleEmail,\n              className: \"FormField_Input_LS\",\n              placeholder: \"Email\",\n              type: \"text\",\n              name: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FormField\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handlePassword,\n              className: \"FormField_InputFormField_Input_LS\",\n              placeholder: \"Password\",\n              type: \"Password\",\n              name: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), backButton, loginButton]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/login.js"],"names":["React","Component","Button","withRouter","bcrypt","require","Login","constructor","props","handlePassword","bind","handleEmail","routeChange","test","verify","state","password","email","login_toggle","event","setState","target","value","id","history","push","location","user","url","req","Request","method","headers","body","JSON","stringify","fetch","then","res","json","catch","error","console","log","Promise","reject","query_result","query","alert","secured","compareSync","render","leftarrow","backButton","loginButton"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport {Button} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\";\n// import { queryResult } from \"pg-promise\";\n\nconst bcrypt = require('bcrypt-nodejs/bCrypt');\n\nclass Login extends Component{\n \n    constructor(props){\n        super(props);\n        this.handlePassword=this.handlePassword.bind(this);\n        this.handleEmail=this.handleEmail.bind(this);\n        this.routeChange=this.routeChange.bind(this);\n        this.test=this.test.bind(this);\n        this.verify=this.verify.bind(this); \n        this.state={ \n            password:\"\",  \n            email:\"\",\n            login_toggle : false\n        }\n    }\n\n    handleEmail(event){\n    this.setState({email:event.target.value});\n    }\n\n    handlePassword(event){\n        this.setState({password:event.target.value});\n    }\n\n    // Handle to new Brower path\n    routeChange(value){\n        if (value.target.id==\"Back\"){\n            this.props.history.push(\"/\",this.props.history.location.state);\n      }\n        else if(value.target.id==\"Home\"){\n          this.props.history.push(\"/home\",this.props.history.location.state);\n        }\n    }\n\n    \n    test(){\n        //confirm the email exist\n        if(this.state.email!=null){\n           var user={\n            email:this.state.email,\n           } \n        \n            var url=\"/api/loginVerification\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                this.setState({query:query_result} )\n                this.verify();\n            }) \n            .catch((error)=>{\n                console.log(error);\n                console.log(\"error line 77\");\n                return Promise.reject(error);\n            });\n        }\n        else{\n            alert(\"Invalid Email or Password\");\n        }\n    }\n\n    // Verify the email and password \n    verify(){\n        console.log(\"Verify\");\n        \n        if(this.state.query === \"No User By That Email\"){\n            alert(\"Invalid Email\");\n        }\n        //query error\n        else if (this.state.query==null){\n            console.log('err line 95');\n        //invalid email\n            return -1;\n            // this.props.history.push(\"/error\");\n        }\n        //verify password\n        else{\n            var email = this.state.query.email\n            var secured = this.state.query.password\n            console.log(email,secured);\n            if(bcrypt.compareSync(this.state.password,secured)){\n                \n                var user={\n                    email:email,\n                } \n               \n                var url=\"/api/getUserStocks\";\n                const req = new Request(url,{\n                    method:\"POST\",\n                    headers:{\"Content-Type\":\"application/json\"},\n                    body:JSON.stringify(user),\n                });\n                fetch(req)\n                .then((res)=>{\n                    return res.json();\n                })\n                .then(query_result => this.setState({query:[[{email:this.state.email}],query_result],login_toggle:true},()=> console.log(\"login successful\")))\n                .catch((error)=>{\n                    return Promise.reject(error);\n                  });\n            }\n            else{\n                alert(\"Invalid Password\");\n            }\n               \n            }\n            \n               \n        }\n\n    //render the login page\n    render(){\n        \n        if(this.state.login_toggle){// you can login\n            console.log(this.state.query)\n            this.props.history.push(\"/profile\",this.state.query);\n        }\n    \n        var leftarrow = \"\\u2190\"\n        var backButton = <Button className=\"Button\" id=\"Back\" onClick={this.routeChange}>{leftarrow}</Button>;\n        var loginButton = <Button onClick={this.test} className= \"Button\" id = \"SignButton\" >Login </Button>;\n    return(\n      <>\n        <div className = \"CenterWrapper\">\n          <div className= \"HeaderInfo\" id=\"TitleTextSignUp\">\n          Login!\n          </div>\n\n          <form className= \"FormFields\">\n\n            <div className=\"FormField\">\n              <input onChange={this.handleEmail} className= \"FormField_Input_LS\" placeholder= \"Email\" type=\"text\" name=\"Email\" />\n            </div>\n\n            <div className=\"FormField\">\n              <input onChange={this.handlePassword} className= \"FormField_InputFormField_Input_LS\" placeholder= \"Password\" type=\"Password\" name=\"Password\" />\n            </div>\n\n            {backButton}\n            {loginButton}\n          \n\n          </form>\n        </div>\n\n      </>\n    );\n  }\n    \n\n}\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}