{"ast":null,"code":"var _toConsumableArray = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar DataStream = require(\"../../\").DataStream;\n\nvar DefaultBufferLength = 16;\n\nvar wrapComparator = function wrapComparator(comparator) {\n  return function (a, b) {\n    return comparator(a[0], b[0]);\n  };\n};\n\nvar DefaultComparator = function DefaultComparator(a, b) {\n  if (a < b) return -1;\n  if (b < a) return 1;\n  return 0;\n};\n\nmodule.exports = function (multi, passedComparator, bufferLength, Clazz) {\n  bufferLength = bufferLength || DefaultBufferLength;\n  Clazz = Clazz || DataStream;\n  var comparator = wrapComparator(passedComparator || DefaultComparator);\n  var out = new Clazz();\n  var readIndex = new Map();\n  var endIndex = new WeakMap();\n  var rest = [];\n\n  var onceTouchedStream = function onceTouchedStream(stream) {\n    return Promise.race([new Promise(function (res) {\n      return stream.on(\"readable\", res);\n    }), endIndex.get(stream)]);\n  };\n\n  var getMoreItemsForEntry = function getMoreItemsForEntry(stream, arr) {\n    while (arr.length < bufferLength) {\n      var haveMore = stream.read();\n      if (haveMore !== null) arr.push(haveMore);else break;\n    }\n\n    if (arr.length || !readIndex.has(stream)) return Promise.resolve(arr);\n    return onceTouchedStream(stream).then(function () {\n      return getMoreItemsForEntry(stream, arr);\n    }, function () {\n      return Promise.resolve(arr);\n    });\n  };\n\n  var getMoreItems = function getMoreItems() {\n    var ret = [];\n\n    var _iterator = _createForOfIteratorHelper(readIndex.entries()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var entry = _step.value;\n        ret.push(getMoreItemsForEntry.apply(void 0, _toConsumableArray(entry)));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (!ret.length) return Promise.resolve([]);\n    return Promise.all(ret);\n  }; // TODO: rewrite as generator?\n\n\n  var getSorted = function getSorted(inArys) {\n    var arr = [];\n    var arys = inArys.slice();\n    var min_length = 0;\n    var j = 0;\n\n    if (rest.length) {\n      arys.push(rest);\n    }\n\n    if (!arys.length) return [];\n\n    while (true) {\n      // eslint-disable-line\n      var cnt = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(arys),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var ary = _step2.value;\n          cnt += ary.length > j;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (cnt === arys.length) {\n        for (var i = 0; i < arys.length; i++) {\n          arr.push([arys[i][j], i, j, arys[i].length - j - 1]);\n        }\n\n        min_length = ++j;\n      } else {\n        break;\n      }\n    }\n\n    arr.sort(comparator);\n    var ret = [];\n\n    while (min_length > 0 && arr.length > 0) {\n      var item = arr.shift();\n      arys[item[1]].shift(item[2]);\n      ret.push(item[0]);\n      min_length = item[3];\n    }\n\n    return ret;\n  };\n\n  var writeSorted = function writeSorted(sorted) {\n    var ret = true;\n\n    for (var i = 0; i < sorted.length; i++) {\n      ret = out.write(sorted[i]);\n    }\n\n    return ret || new Promise(function (res) {\n      return out.once(\"drain\", function () {\n        return res(sorted.end);\n      });\n    });\n  };\n\n  var removing = null;\n  var pushing = null;\n\n  var pushMoreItems = function pushMoreItems() {\n    if (pushing) return pushing;\n    pushing = getMoreItems().then(function (arys) {\n      return getSorted(arys);\n    }).then(writeSorted).catch(function (e) {\n      return e instanceof Error ? out.emit(\"error\", e) : (pushing = null, Promise.resolve());\n    }).then(function () {\n      pushing = null;\n\n      if (readIndex.size) {\n        pushMoreItems();\n      } else if (rest.length) {\n        return writeSorted(rest.sort(passedComparator));\n      }\n    });\n    return pushing;\n  };\n\n  var onEmpty = function onEmpty() {\n    return Promise.resolve(pushing).then(function () {\n      return out.end();\n    });\n  };\n\n  multi.each(function (addedStream) {\n    var endPromise = new Promise(function (res, rej) {\n      return addedStream.on(\"end\", function () {\n        multi.remove(addedStream);\n        rej();\n      });\n    });\n    endPromise.catch(function () {\n      return 0;\n    });\n    readIndex.set(addedStream, []);\n    endIndex.set(addedStream, endPromise);\n  }, function (removedStream) {\n    removing = Promise.all([getMoreItemsForEntry(removedStream, readIndex.get(removedStream)).then(function (items) {\n      readIndex.delete(removedStream);\n      rest.push.apply(rest, _toConsumableArray(items));\n    }), removing]).then(function () {\n      return readIndex.size ? pushMoreItems() : onEmpty();\n    });\n  }).then(pushMoreItems).catch(function (e) {\n    return out.emit(\"error\", e);\n  });\n  return out;\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/node_modules/scramjet-core/lib/util/merge-sort-stream.js"],"names":["DataStream","require","DefaultBufferLength","wrapComparator","comparator","a","b","DefaultComparator","module","exports","multi","passedComparator","bufferLength","Clazz","out","readIndex","Map","endIndex","WeakMap","rest","onceTouchedStream","stream","Promise","race","res","on","get","getMoreItemsForEntry","arr","length","haveMore","read","push","has","resolve","then","getMoreItems","ret","entries","entry","all","getSorted","inArys","arys","slice","min_length","j","cnt","ary","i","sort","item","shift","writeSorted","sorted","write","once","end","removing","pushing","pushMoreItems","catch","e","Error","emit","size","onEmpty","each","addedStream","endPromise","rej","remove","set","removedStream","items","delete"],"mappings":"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","sourcesContent":["const DataStream = require(\"../../\").DataStream;\nconst DefaultBufferLength = 16;\n\nconst wrapComparator = (comparator) => (a, b) => comparator(a[0], b[0]);\nconst DefaultComparator = (a, b) => {\n    if (a < b) return -1;\n    if (b < a) return 1;\n    return 0;\n};\n\nmodule.exports = (multi, passedComparator, bufferLength, Clazz) => {\n\n    bufferLength = bufferLength || DefaultBufferLength;\n\n    Clazz = Clazz || DataStream;\n\n    const comparator = wrapComparator(passedComparator || DefaultComparator);\n\n    const out = new Clazz();\n    const readIndex = new Map();\n    const endIndex = new WeakMap();\n\n    const rest = [];\n\n    const onceTouchedStream = (stream) => {\n        return Promise.race([\n            new Promise((res) => stream.on(\"readable\", res)),\n            endIndex.get(stream)\n        ]);\n    };\n\n    const getMoreItemsForEntry = (stream, arr) => {\n        while (arr.length < bufferLength) {\n            let haveMore = stream.read();\n\n            if (haveMore !== null)\n                arr.push(haveMore);\n            else\n                break;\n        }\n\n        if (arr.length || !readIndex.has(stream))\n            return Promise.resolve(arr);\n\n        return onceTouchedStream(stream)\n            .then(\n                () => getMoreItemsForEntry(stream, arr),\n                () => Promise.resolve(arr)\n            );\n    };\n\n    const getMoreItems = () => {\n        const ret = [];\n        for (let entry of readIndex.entries()) {\n            ret.push(getMoreItemsForEntry(...entry));\n        }\n\n        if (!ret.length)\n            return Promise.resolve([]);\n\n        return Promise.all(ret);\n    };\n\n    // TODO: rewrite as generator?\n    const getSorted = (inArys) => {\n        const arr = [];\n        const arys = inArys.slice();\n\n        let min_length = 0;\n        let j = 0;\n\n        if (rest.length) {\n            arys.push(rest);\n        }\n\n        if (!arys.length)\n            return [];\n\n        while (true) {  // eslint-disable-line\n            let cnt = 0;\n\n            for (let ary of arys)\n                cnt += ary.length > j;\n\n            if (cnt === arys.length) {\n                for (let i = 0; i < arys.length; i++) {\n                    arr.push([arys[i][j], i, j, arys[i].length - j - 1]);\n                }\n                min_length = ++j;\n            } else {\n                break;\n            }\n        }\n\n        arr.sort(comparator);\n\n        const ret = [];\n        while (min_length > 0 && arr.length > 0) {\n\n            const item = arr.shift();\n            arys[item[1]].shift(item[2]);\n            ret.push(item[0]);\n            min_length = item[3];\n        }\n\n        return ret;\n    };\n\n    const writeSorted = (sorted) => {\n        let ret = true;\n\n        for (var i = 0; i < sorted.length; i++) {\n            ret = out.write(sorted[i]);\n        }\n\n        return ret || new Promise((res) => out.once(\"drain\", () => res(sorted.end)));\n    };\n\n    let removing = null;\n    let pushing = null;\n    const pushMoreItems = () => {\n\n        if (pushing)\n            return pushing;\n\n        pushing =\n            getMoreItems()\n                .then(\n                    (arys) => getSorted(arys)\n                )\n                .then(\n                    writeSorted\n                )\n                .catch(\n                    (e) => e instanceof Error ? out.emit(\"error\", e) : (pushing = null, Promise.resolve())\n                )\n                .then(\n                    () => {\n                        pushing = null;\n\n                        if (readIndex.size) {\n                            pushMoreItems();\n                        } else if (rest.length) {\n                            return writeSorted(rest.sort(passedComparator));\n                        }\n                    }\n                );\n\n        return pushing;\n    };\n\n    const onEmpty = () => {\n        return Promise.resolve(pushing)\n            .then(() => out.end());\n    };\n\n    multi.each(\n        (addedStream) => {\n            const endPromise = new Promise(\n                (res, rej) => addedStream.on(\"end\", () => {\n                    multi.remove(addedStream);\n                    rej();\n                })\n            );\n\n            endPromise.catch(() => 0);\n\n            readIndex.set(addedStream, []);\n            endIndex.set(\n                addedStream,\n                endPromise\n            );\n        },\n        (removedStream) => {\n            removing = Promise.all([\n                getMoreItemsForEntry(removedStream, readIndex.get(removedStream))\n                    .then(\n                        (items) => {\n                            readIndex.delete(removedStream);\n                            rest.push(...items);\n                        }\n                    ),\n                removing\n            ]).then(\n                () => readIndex.size ? pushMoreItems() : onEmpty()\n            );\n        }\n    ).then(\n        pushMoreItems\n    ).catch(\n        e => out.emit(\"error\", e)\n    );\n\n    return out;\n};\n"]},"metadata":{},"sourceType":"script"}