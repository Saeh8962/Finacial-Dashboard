{"ast":null,"code":"import _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle, ChartTooltip } from \"@progress/kendo-react-charts\";\nimport { getHistory } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar url = \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\n\nvar request = require('request');\n\nexport default function PerformancePanel() {\n  _s();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      history = _React$useState2[0],\n      setHistory = _React$useState2[1];\n\n  React.useEffect(function () {\n    request(url, {\n      json: true\n    }, function (err, res, body) {\n      if (err) {\n        return console.log(err);\n      }\n\n      return getHistory(body.data).then(function (results) {\n        setHistory(results);\n      });\n    });\n  }, []);\n\n  if (history) {\n    var dates = history.map(function (data) {\n      return data.date.slice(0, 10);\n    });\n    var data = history.map(function (data) {\n      return data.open;\n    }); // console.log(dates,data) \n  } // console.log(history);\n\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n      text: \"Fund Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n      children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n        categories: dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n      children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n        type: \"line\",\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ChartTooltip, {\n      render: renderTooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PerformancePanel, \"m2zlKD6z2d5JHwcHk/9BlD37tsE=\");\n\n_c = PerformancePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformancePanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartTooltip","getHistory","url","request","require","PerformancePanel","useState","history","setHistory","useEffect","json","err","res","body","console","log","data","then","results","dates","map","date","slice","open","renderTooltip"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,qBALF,EAMEC,UANF,EAOEC,YAPF,QAQO,8BARP;AASA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,IAAMC,GAAG,GAAE,6IAAX;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAKA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,wBAA8BZ,KAAK,CAACa,QAAN,EAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpBN,IAAAA,OAAO,CAACD,GAAD,EAAM;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAN,EAAsB,UAACC,GAAD,EAAWC,GAAX,EAAqBC,IAArB,EAAmC;AAC9D,UAAIF,GAAJ,EAAS;AAAE,eAAOG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAAP;AAA0B;;AACrC,aAAOV,UAAU,CAACY,IAAI,CAACG,IAAN,CAAV,CAAsBC,IAAtB,CAA2B,UAACC,OAAD,EAAwB;AACxDV,QAAAA,UAAU,CAACU,OAAD,CAAV;AACD,OAFM,CAAP;AAID,KANM,CAAP;AASD,GAVD,EAUG,EAVH;;AAWF,MAAGX,OAAH,EAAW;AACT,QAAIY,KAAK,GAAGZ,OAAO,CAACa,GAAR,CAAY,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAkB,EAAlB,CAAJ;AAAA,KAAhB,CAAZ;AACA,QAAIN,IAAI,GAAGT,OAAO,CAACa,GAAR,CAAY,UAAAJ,IAAI;AAAA,aAAEA,IAAI,CAACO,IAAP;AAAA,KAAhB,CAAX,CAFS,CAGT;AACD,GAjB0C,CAmB3C;;;AACE,sBACE,QAAC,KAAD;AAAA,4BACF,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADE,eAEF,QAAC,iBAAD;AAAA,6BACE,QAAC,qBAAD;AAAuB,QAAA,UAAU,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFE,eAKF,QAAC,WAAD;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAEH;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALE,eAQF,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEQ;AAAtB;AAAA;AAAA;AAAA;AAAA,YARE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhCuBnB,gB;;KAAAA,gB","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n} from \"@progress/kendo-react-charts\";\nimport { getHistory } from \"../services/dataService\";\nimport { History } from \"../data/models\";\nconst url =\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\nconst request = require('request');\n\n\n   \n    \nexport default function PerformancePanel() {\n  const [history, setHistory] = React.useState<History[]>();\n  React.useEffect(() => {\n    request(url, { json: true }, (err: any, res: any, body: any) => {\n      if (err) { return console.log(err); }\n      return getHistory(body.data).then((results: History[]) => {\n        setHistory(results);\n      });\n      \n    })\n        \n    \n  }, []);\nif(history){\n  var dates = history.map(data => data.date.slice(0,10));\n  var data = history.map(data=>data.open)\n  // console.log(dates,data) \n}\n \n// console.log(history);\n  return (\n    <Chart>\n  <ChartTitle text=\"Fund Performance\" />\n  <ChartCategoryAxis>\n    <ChartCategoryAxisItem categories={dates} />\n  </ChartCategoryAxis>\n  <ChartSeries>\n    <ChartSeriesItem type=\"line\" data={data} />\n  </ChartSeries>\n  <ChartTooltip render={renderTooltip} />\n</Chart>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}