{"ast":null,"code":"import _objectSpread from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx\";\nimport React, { Component, ChildComponent } from \"react\";\nimport { ListGroup } from \"react-bootstrap/esm\";\nimport { Button, DropdownMenu, Dropdown } from \"reactstrap/es\"; // import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport { sendEmail } from \"./email.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar fetchUrl = require(\"fetch\").fetchUrl;\n\nvar request = require('request');\n\nfunction isMarketOpen() {\n  var x = new Date();\n  var dayOfTheWeek = x.getDay();\n  var timeOfDay = x.getHours();\n  var minutes = x.getMinutes();\n\n  if (dayOfTheWeek < 6) {\n    if (timeOfDay === 9 && minutes > 30 || timeOfDay > 9 && timeOfDay < 16) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  } //week day find out if the market is open \n\n}\n\nfunction shouldgetUpdatedEod(symbol) {\n  console.log(symbol);\n  var currentDate = new Date();\n  var dayOfTheWeek = currentDate.getDay();\n  var EodDataD = new Date(symbol['07. latest trading day']);\n  var lastTradeDay = EodDataD.getDay() + 1;\n\n  if (dayOfTheWeek === 1) {\n    //last traded day should 5 \n    if (lastTradeDay !== 5) {\n      //update the Eod Data\n      return true;\n    } else {\n      //the eod data is fine\n      return false;\n    }\n  } else {\n    if (lastTradeDay !== dayOfTheWeek - 1) {\n      //update the eod data\n      return true;\n    } else {\n      //the eod datat is fine\n      return false;\n    }\n  }\n} //fuctions add $ sign to values in the watchlist girs\n\n\nfunction add$sign(props) {\n  var Value = props.dataItem[props.field || \"\"];\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: \"$\" + Value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n} //function changes the color of the current price column depenging on its prrice \n\n\nfunction ChangeCurPriceColor(props) {\n  var curValue = props.dataItem[props.field || \"\"];\n  var closeValue = props.dataItem[\"PreviousClose\" || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: curValue > closeValue ? \"green\" : \"red\"\n    },\n    children: \"$\" + curValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ChangeCurPriceColor;\n; //changes the color of the current change column \n\nfunction ChangeCurChangeColor(props) {\n  var value = props.dataItem[props.field || \"\"] > 0 ? \"+\" + props.dataItem[props.field] : props.dataItem[props.field || \"\"]; // console.log(curValue,closeValue)\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    style: {\n      color: value > 0 ? \"green\" : \"red\"\n    },\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ChangeCurChangeColor;\n;\n\nvar viewChartOver = /*#__PURE__*/function (_React$Component) {\n  _inherits(viewChartOver, _React$Component);\n\n  var _super = _createSuper(viewChartOver);\n\n  function viewChartOver() {\n    _classCallCheck(this, viewChartOver);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(viewChartOver, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        title: \"View chart\",\n        children: \"view the char\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return viewChartOver;\n}(React.Component);\n\nexport default withRouter( /*#__PURE__*/function (_React$Component2) {\n  _inherits(WatchList, _React$Component2);\n\n  var _super2 = _createSuper(WatchList);\n\n  function WatchList(props) {\n    var _this;\n\n    _classCallCheck(this, WatchList);\n\n    _this = _super2.call(this, props);\n\n    _this.saveNewStockTrade = function (event) {\n      var result = JSON.parse(event.data); // console.log(result)\n\n      var Alerts = _this.state.AlertData; // console.log(Alerts);\n\n      var user_watchlist = _this.state.stocks; // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n\n      if (result.type === \"trade\") {\n        user_watchlist.forEach(function (symbol) {\n          var tradePrice = result.data.filter(function (i, n) {\n            return i.s === symbol[\"Symbol\"];\n          });\n\n          if (tradePrice.length !== 0) {\n            // symbol.eodClose= (symbol.eodClose*1).toFixed(2);\n            // console.log(symbol.currentPrice, symbol[\"latest_trading_day\"])\n            symbol[\"currentPrice\"] = +tradePrice[tradePrice.length - 1].p.toFixed(2);\n            symbol[\"changeV\"] = +(symbol.currentPrice - symbol.PreviousClose).toFixed(2);\n            symbol[\"changeP\"] = +(symbol[\"changeV\"] / symbol.PreviousClose * 100).toFixed(2);\n          }\n\n          var alertSymbols = Alerts.uniqueSymbols.map(function (symbol) {\n            return symbol.symbol;\n          });\n\n          if (Alerts !== \"\" && Alerts !== \"No Alerts found\" && Alerts !== undefined && alertSymbols.includes(symbol[\"Symbol\"])) {\n            console.log(Alerts); //check to see if the new price value triggered the alert\n\n            Alerts.alerts.forEach(function (alert) {\n              if (alert.symbol === symbol) {\n                switch (alert.Identifier) {\n                  case 'Price':\n                    switch (alert.movement) {\n                      case 'above':\n                        {\n                          console.log(alert);\n\n                          if (symbol.currentPrice > alert.valuechange) {\n                            alert(\"Your Price Alert watching for \" + symbol.Symbol + \" to go above: \" + alert.valuechange + \" has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Above Alert not triggered\";\n                        }\n\n                      case 'below':\n                        {\n                          if (symbol.currentPrice < alert.valuechange) {\n                            alert(\"Your Price Alert watching for \" + symbol.Symbol + \" to go below: \" + alert.valuechange + \" has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Below Alert not triggered\";\n                        }\n\n                      default:\n                        return \"something went wrong\";\n                    }\n\n                  case 'Percent':\n                    switch (alert.movment) {\n                      case 'Up':\n                        {\n                          if (symbol.CurrentPercentChange > alert.valuechange) {\n                            alert(\"Your Percentage Alert watching for \" + symbol.Symbol + \" to be moving up: \" + alert.valuechange + \"% has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Alert has been triggered\";\n                          }\n\n                          return \"Up Alert not triggered\";\n                        }\n\n                      case 'Down':\n                        {\n                          if (symbol.CurrentPercentChange < alert.valuechange) {\n                            alert(\"Your Percentage Alert watching for \" + symbol.Symbol + \" to be moving down: \" + alert.valuechange + \"% has been triggered\");\n                            sendEmail(_this.state.email, alert);\n                            return \"Down Alert has been triggered\";\n                          }\n\n                          return \"Down Up Alert not triggered\";\n                        }\n\n                      default:\n                        return \"Down Alert not triggered\";\n                    }\n\n                  default:\n                    return \"something went wrong\";\n                }\n              }\n            });\n          }\n        });\n\n        _this.setState({\n          stocks: user_watchlist\n        });\n      }\n    };\n\n    _this.X = 0;\n    _this.CommandCell = _this.CommandCell.bind(_assertThisInitialized(_this));\n    _this.getEodData = _this.getEodData.bind(_assertThisInitialized(_this));\n    _this.symbolCell = _this.symbolCell.bind(_assertThisInitialized(_this));\n    _this.removeStock = _this.removeStock.bind(_assertThisInitialized(_this));\n    _this.renderStockChart = _this.renderStockChart.bind(_assertThisInitialized(_this));\n    _this.removeHelper = _this.removeHelper.bind(_assertThisInitialized(_this));\n    _this.result = [];\n    _this.state = {\n      email: _this.props.email,\n      stocks: _this.props.stocks,\n      AlertData: _this.props.alertData,\n      connectionError: false,\n      dropdownOpen: false,\n      value: \"Your Watchlist\",\n      stockHasBeenRemoved: false,\n      chartStock: \"\" // eodData:\"\"\n\n    };\n    return _this;\n  } //sets the inside of the symbol cell\n\n\n  _createClass(WatchList, [{\n    key: \"symbolCell\",\n    value: function symbolCell(props) {\n      var _this2 = this;\n\n      var symbol = props.dataItem[props.field || \"\"];\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger btn-circle btn-sm\",\n          onClick: function onClick(e) {\n            return _this2.removeStock(e, props.dataItem);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), \" \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    } //handles the function of the remove cells\n\n  }, {\n    key: \"CommandCell\",\n    value: function CommandCell(props) {\n      return /*#__PURE__*/_jsxDEV(MyCommandCell, _objectSpread(_objectSpread({}, props), {}, {\n        remove: this.removeStock\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n        console.log('User has removed a stock.');\n\n        if (this.props.history.push !== undefined) {\n          this.props.history.push(\"/profile\", [[{\n            email: this.state.email,\n            removeStocks: this.state.stockHasBeenRemoved\n          }, this.state.stocks]]);\n        } else {\n          this.setState({\n            stocks: this.state.stocks\n          });\n        }\n      }\n\n      if (this.props.stocks.length != prevProps.stocks.length) {\n        console.log('Update stocks');\n        this.setState({\n          stocks: this.props.stocks\n        });\n      }\n\n      if (prevState.chartStock !== this.state.chartStock && this.state.chartStock !== \"\") {\n        var stock_chart = this.state.chartStock;\n        console.log(\"render chart for \", stock_chart);\n        this.setState({\n          chartStock: \"\"\n        }, function () {\n          return _this3.props.history.push(\"/profile\", [[{\n            email: _this3.state.email,\n            chartStock: stock_chart\n          }, _this3.state.stocks]]);\n        });\n      }\n    }\n  }, {\n    key: \"getEodData\",\n    value: function getEodData(symbol, callback) {\n      // if(symbols !== 'No stocks added'){\n      //   var element = {\n      //     symbol:\"\",\n      //     eodClose:\"\",\n      //     eodPrice:\"\"\n      //   }\n      //   var watchlists = symbols;\n      var url = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=' + symbol + '&apikey=2TXPYH4TGZ32RG8D';\n      var req = new Request(url);\n      fetch(url, function (err, meta, body) {\n        var y = body.toString();\n        var x = JSON.parse(y);\n        console.log(x['Global Quote']);\n        callback(x['Global Quote']);\n      });\n    } // componentDidMount(){\n    //   // var data = getEodData(\"AAPL\");\n    //   // console.log(data);\n    //   // this.setState({eodData:data})\n    // }\n    // getEodData(symbols){\n    //   if(symbols !== 'No stocks added'){\n    //     var element = {\n    //       symbol:\"\",\n    //       eodClose:\"\",\n    //       eodPrice:\"\"\n    //     }\n    //     var watchlists = symbols;\n    //     function fetchData(symbols){\n    //       const urls = symbols.map(symbol => {\n    //         var x = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol.Symbol+'&apikey=2TXPYH4TGZ32RG8D';\n    //         return x;\n    //       })\n    //       const allRequests = urls.map(url => \n    //         fetch(url).then(response => response.json())\n    //       );\n    //       return Promise.all(allRequests);\n    //     };\n    //   fetchData(symbols).then(result => {\n    //    var newList = watchlists.map((element, index) =>{\n    //     element= Object.entries(result[index]).map(entry => {return entry[1]});\n    //     return element[0]\n    //   })\n    //   // console.log(newList[0])\n    // this.setState({stocks:newList});\n    // })\n    // }\n    //   else{\n    //     console.log(\"No stocks added\")\n    //     return;\n    //   }\n    // }\n    // componentWillMount(){\n    //   console.log(this.state.stocks)\n    //   if(isMarketOpen()){\n    //     this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n    //   }\n    //   if(this.state.stock!=='No stocks added'){\n    //     this.getEodData(this.state.stocks);\n    //   }\n    // }\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this4 = this;\n\n      if (isMarketOpen()) {\n        if (this.state.stock != \"No stocks added\") {\n          this.state.stocks.forEach(function (symbol) {\n            _this4.connection.send(JSON.stringify({\n              'type': 'unsubscribe',\n              'symbol': symbol.Symbol\n            }));\n          });\n        }\n\n        this.connection.close();\n      } // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n      // or cleaning up any subscriptions that were created in componentDidMount().\n\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      // console.log(isMarketOpen())\n      console.log(this.state.stocks);\n\n      if (this.state.stock !== 'No stocks added') {\n        var whichToUpdate = this.state.stocks.map(function (stock) {\n          return shouldgetUpdatedEod(stock);\n        });\n        console.log(whichToUpdate);\n        var newList = this.state.stocks.map(function (stock, indx) {\n          if (whichToUpdate[indx]) {\n            var x = stock;\n\n            _this5.getEodData(stock['01. symbol'], function (result) {\n              x = result;\n            });\n\n            return x;\n          } else {\n            return stock;\n          }\n        });\n        console.log(this.state.stocks, newList);\n\n        if (newList !== this.state.stocks) {\n          this.setState({\n            stocks: newList\n          });\n        }\n      }\n\n      if (isMarketOpen()) {\n        this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n\n        this.connection.onopen = function () {\n          if (_this5.state.stocks !== \"No stocks added\") {\n            _this5.state.stocks.forEach(function (symbol) {\n              _this5.connection.send(JSON.stringify({\n                'type': 'subscribe',\n                'symbol': symbol['Symbol']\n              }));\n\n              console.log(\"Inside OnOpen: Subscribed To: \", symbol['Symbol']);\n            });\n          } else {\n            console.log(\"no stocks added to subscribe to\");\n          }\n        };\n\n        this.connection.onmessage = this.saveNewStockTrade;\n\n        this.connection.onclose = function () {\n          _this5.setState({\n            connectionError: true\n          });\n        };\n      }\n    }\n  }, {\n    key: \"removeStock\",\n    value: function removeStock(htmlEvent, stock) {\n      var _this6 = this;\n\n      if (isMarketOpen()) {\n        //unsubsribe from listening to thsi stock\n        console.log(\"Unsubscribing from: \", stock[\"Symbol\"]);\n        this.connection.send(JSON.stringify({\n          'type': 'unsubscribe',\n          'symbol': stock[\"Symbol\"]\n        }));\n      } //first stop the htmlEvents default status\n\n\n      htmlEvent.preventDefault();\n      var user = {\n        email: this.props.email,\n        stock_symbol: stock[\"Symbol\"]\n      };\n      console.log(user);\n      var url = '/api/removeUserStock';\n      var req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(function (res) {\n        console.log(res);\n\n        if (res.status === 500) {\n          res.json().then(function (json) {\n            var message = json.message,\n                stackTrace = json.stackTrace;\n          }).catch(function (error) {\n            return Promise.reject(error);\n          });\n        } else {\n          return res.json();\n        }\n      }).then(function (result) {\n        console.log(result);\n        console.log(\"1st remove stock rerender\");\n\n        _this6.removeHelper(result);\n      });\n    }\n  }, {\n    key: \"removeHelper\",\n    value: function removeHelper(result) {\n      console.log(\"p/179\", result); //removed but still showing on watch list\n\n      if (result === \"No stocks added\") {\n        this.setState({\n          stocks: \"No stocks added\",\n          stockHasBeenRemoved: !this.state.stockHasBeenRemoved\n        });\n      } else if (result.Response === \"Stock not on watch list\") {\n        alert(\"Stock Queued For Deletion, Please Login In Again\");\n      } //stock has been removed from watchlist\n      else if (result.Response === \"Sucessfully removed stock\") {\n          console.log(\"2nd remove stock rerender\");\n          this.setState({\n            stocks: result.Data,\n            stockHasBeenRemoved: !this.state.stockHasBeenRemoved\n          });\n        }\n    }\n  }, {\n    key: \"renderStockChart\",\n    value: function renderStockChart(event) {\n      console.log(event.dataItem[\"Symbol\"]);\n      this.setState({\n        chartStock: event.dataItem[\"Symbol\"]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var useData; // console.log(isMarketOpen())\n\n      if (this.props.stocks !== \"No stocks added\" && this.state.stocks !== \"No stocks added\") {\n        useData = this.state.stocks; // console.log(useData);\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100,\n              cell: this.symbolCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"PreviousClose\",\n              cell: add$sign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\",\n              cell: ChangeCurPriceColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"changeV\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"changeP\",\n              cell: ChangeCurChangeColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this);\n      } else {\n        useData = [{\n          eodClose: \"Add stocks\",\n          Symbol: \"Add stocks\",\n          currentPrice: \"Add stocks\",\n          Change: \"Add stocks\",\n          CurrentAmountChange: \"Add stocks\",\n          CurrentPercentChange: \"Add stocks\",\n          Track: \"Add stocks\"\n        }];\n\n        var grid = /*#__PURE__*/_jsxDEV(Tooltip, {\n          openDelay: 100,\n          position: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            data: useData,\n            onRowClick: this.renderStockChart,\n            title: \"WatchList\",\n            children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Symbol\",\n              field: \"Symbol\",\n              style: {\n                width: 100\n              },\n              locked: false,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Last Close\",\n              field: \"eodClose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Price\",\n              field: \"currentPrice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"Change\",\n              field: \"CurrentAmountChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n              title: \"% Change\",\n              field: \"CurrentPercentChange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this);\n      } // console.log(this.state.eodData)\n\n\n      return grid;\n    }\n  }]);\n\n  return WatchList;\n}(React.Component));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeCurPriceColor\");\n$RefreshReg$(_c2, \"ChangeCurChangeColor\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx"],"names":["React","Component","ChildComponent","ListGroup","Button","DropdownMenu","Dropdown","withRouter","Grid","GridCellProps","GridColumn","ReactDOM","Tooltip","OverlayTrigger","MyCommandCell","sendEmail","fetchUrl","require","request","isMarketOpen","x","Date","dayOfTheWeek","getDay","timeOfDay","getHours","minutes","getMinutes","shouldgetUpdatedEod","symbol","console","log","currentDate","EodDataD","lastTradeDay","add$sign","props","Value","dataItem","field","ChangeCurPriceColor","curValue","closeValue","color","ChangeCurChangeColor","value","viewChartOver","saveNewStockTrade","event","result","JSON","parse","data","Alerts","state","AlertData","user_watchlist","stocks","type","forEach","tradePrice","filter","i","n","s","length","p","toFixed","currentPrice","PreviousClose","alertSymbols","uniqueSymbols","map","undefined","includes","alerts","alert","Identifier","movement","valuechange","Symbol","email","movment","CurrentPercentChange","setState","X","CommandCell","bind","getEodData","symbolCell","removeStock","renderStockChart","removeHelper","alertData","connectionError","dropdownOpen","stockHasBeenRemoved","chartStock","e","prevProps","prevState","history","push","removeStocks","stock_chart","callback","url","req","Request","fetch","err","meta","body","y","toString","stock","connection","send","stringify","close","whichToUpdate","newList","indx","WebSocket","onopen","onmessage","onclose","htmlEvent","preventDefault","user","stock_symbol","method","headers","then","res","status","json","message","stackTrace","catch","error","Promise","reject","Response","Data","useData","grid","width","eodClose","Change","CurrentAmountChange","Track"],"mappings":"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","sourcesContent":["import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown,} from \"reactstrap/es\";\n// import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\nimport {withRouter} from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport {sendEmail} from \"./email.js\"\nvar fetchUrl = require(\"fetch\").fetchUrl;\nconst request = require('request');\n\nfunction isMarketOpen(){\n  var x = new Date()\n  var dayOfTheWeek= x.getDay();\n  var timeOfDay = x.getHours();\n  var minutes = x.getMinutes();\n  if(dayOfTheWeek <6){\n    if((timeOfDay === 9 && minutes >30) || (timeOfDay >9 && timeOfDay < 16)){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }\n  else{\n    return false;\n  }\n    //week day find out if the market is open \n    \n}\n\nfunction shouldgetUpdatedEod(symbol){\n  console.log(symbol)\n  var currentDate = new Date()\n  var dayOfTheWeek= currentDate.getDay();\n\n  var EodDataD = new Date(symbol['07. latest trading day'])\n  var lastTradeDay= EodDataD.getDay()+1;\n  if(dayOfTheWeek===1){\n    //last traded day should 5 \n    if(lastTradeDay!==5){\n      //update the Eod Data\n      return true\n    }\n    else{\n      //the eod data is fine\n      return false;\n    }\n  }\n  else{\n    if(lastTradeDay!==dayOfTheWeek-1){\n      //update the eod data\n      return true\n    }\n    else{\n      //the eod datat is fine\n      return false\n    }\n  }\n\n  \n}\n//fuctions add $ sign to values in the watchlist girs\nfunction add$sign(props){\n  const Value = props.dataItem[props.field || \"\"];\n  return (\n    <td >\n      {\"$\"+Value}\n    </td>\n  )\n}\n\n//function changes the color of the current price column depenging on its prrice \nfunction ChangeCurPriceColor(props){\n  var curValue = props.dataItem[props.field || \"\"];\n \n  const closeValue =props.dataItem[\"PreviousClose\"||\"\"]\n\n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: curValue > closeValue ? \"green\" : \"red\" }}>\n      {\"$\"+curValue}\n    </td>\n  )\n  \n};\n\n//changes the color of the current change column \nfunction ChangeCurChangeColor(props){\n  const value = props.dataItem[props.field || \"\"]>0? \"+\"+props.dataItem[props.field]:props.dataItem[props.field || \"\"];\n  \n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: value > 0 ? \"green\" : \"red\" }}>\n      {value}\n    </td>\n  )\n  \n};\nclass viewChartOver extends React.Component {\n  render() {\n    return (\n      <td title={\"View chart\"}>\n        {\"view the char\"}\n      </td>\n    );\n  }\n}\nexport default withRouter( class WatchList extends React.Component {\n \n    constructor(props) {\n        super(props)\n            this.CommandCell=this.CommandCell.bind(this)\n            this.getEodData=this.getEodData.bind(this)\n            this.symbolCell = this.symbolCell.bind(this);\n            this.removeStock=this.removeStock.bind(this);\n            this.renderStockChart=this.renderStockChart.bind(this);\n            this.removeHelper=this.removeHelper.bind(this);\n            \n           this.result = [];\n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                AlertData:this.props.alertData,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\",\n                stockHasBeenRemoved:false,\n                chartStock:\"\",\n                // eodData:\"\"\n                \n            }\n            \n        \n        \n    }\n\n    //sets the inside of the symbol cell\n    symbolCell(props){\n      var symbol = props.dataItem[props.field || \"\"];\n      \n      return(\n        \n        \n        <td >\n        <button type=\"button\" className=\"btn btn-danger btn-circle btn-sm\" onClick={(e) =>\n  \n          this.removeStock(e,props.dataItem)\n          }>X</button> {symbol}\n        </td>\n        \n   \n      );\n     \n\n\n    }\n    //handles the function of the remove cells\n    CommandCell(props){\n      return(\n        <MyCommandCell\n          {...props}\n          \n          remove={this.removeStock}\n          \n        />\n      );\n    }\n        \n      \n      componentDidUpdate(prevProps, prevState) {\n        if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n          console.log('User has removed a stock.')\n          if(this.props.history.push!== undefined) {\n            this.props.history.push(\"/profile\",[[{email:this.state.email,removeStocks:this.state.stockHasBeenRemoved},this.state.stocks]]);\n          }\n          else{\n              this.setState({stocks:this.state.stocks})\n          }\n        }\n          if (this.props.stocks.length != prevProps.stocks.length) {\n            console.log('Update stocks')\n            this.setState({stocks:this.props.stocks})\n         \n        }\n        if(prevState.chartStock!==this.state.chartStock && this.state.chartStock!==\"\"){\n          var stock_chart= this.state.chartStock;\n          console.log(\"render chart for \", stock_chart);\n          \n          this.setState({chartStock:\"\"},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,chartStock:stock_chart},this.state.stocks]]))\n        }\n      }\n      \n      getEodData(symbol,callback){\n        // if(symbols !== 'No stocks added'){\n        //   var element = {\n        //     symbol:\"\",\n        //     eodClose:\"\",\n        //     eodPrice:\"\"\n        //   }\n        //   var watchlists = symbols;\n          \n            const url = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol+'&apikey=2TXPYH4TGZ32RG8D';\n            const req = new Request(url);\n            fetch(url,function(err,meta,body){\n             var y = body.toString()\n              var x = JSON.parse(y)\n              console.log(x['Global Quote'])\n              callback(x['Global Quote']) \n        });\n      }\n      // componentDidMount(){\n      //   // var data = getEodData(\"AAPL\");\n      //   // console.log(data);\n        \n      //   // this.setState({eodData:data})\n        \n      // }\n     \n\n     \n      // getEodData(symbols){\n      //   if(symbols !== 'No stocks added'){\n      //     var element = {\n      //       symbol:\"\",\n      //       eodClose:\"\",\n      //       eodPrice:\"\"\n      //     }\n      //     var watchlists = symbols;\n      //     function fetchData(symbols){\n      //       const urls = symbols.map(symbol => {\n      //         var x = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol.Symbol+'&apikey=2TXPYH4TGZ32RG8D';\n      //         return x;\n      //       })\n          \n      //       const allRequests = urls.map(url => \n      //         fetch(url).then(response => response.json())\n      //       );\n          \n      //       return Promise.all(allRequests);\n      //     };\n      //   fetchData(symbols).then(result => {\n      //    var newList = watchlists.map((element, index) =>{\n      //     element= Object.entries(result[index]).map(entry => {return entry[1]});\n      //     return element[0]\n      //   })\n      //   // console.log(newList[0])\n      // this.setState({stocks:newList});\n      // })\n     \n        \n      // }\n      //   else{\n      //     console.log(\"No stocks added\")\n      //     return;\n      //   }\n      // }\n\n    // componentWillMount(){\n    //   console.log(this.state.stocks)\n    //   if(isMarketOpen()){\n    //     this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n    //   }\n    \n    //   if(this.state.stock!=='No stocks added'){\n        \n    //     this.getEodData(this.state.stocks);\n    //   }\n        \n        \n    // }\n    componentWillUnmount(){\n      if(isMarketOpen()){\n\n        if(this.state.stock!=\"No stocks added\"){\n          this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n          })\n          \n        }\n        this.connection.close();\n      }\n        \n        \n        \n        \n        \n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    \n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        // console.log(result)\n        let Alerts =this.state.AlertData;\n        // console.log(Alerts);\n        let user_watchlist = this.state.stocks\n        \n        // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol[\"Symbol\"]);\n                if(tradePrice.length !==0){\n                  \n                    // symbol.eodClose= (symbol.eodClose*1).toFixed(2);\n                    // console.log(symbol.currentPrice, symbol[\"latest_trading_day\"])\n                    symbol[\"currentPrice\"] = +tradePrice[tradePrice.length-1].p.toFixed(2); \n                    symbol[\"changeV\"]= +(symbol.currentPrice-symbol.PreviousClose).toFixed(2);\n                    symbol.[\"changeP\"]= +((symbol[\"changeV\"]/symbol.PreviousClose)*100).toFixed(2);\n                    \n                }\n                var alertSymbols=Alerts.uniqueSymbols.map(symbol=>symbol.symbol);\n                \n                if((Alerts!==\"\" && Alerts!== \"No Alerts found\" &&Alerts!==undefined)&&alertSymbols.includes(symbol[\"Symbol\"])){\n                  console.log(Alerts)\n                  //check to see if the new price value triggered the alert\n                  Alerts.alerts.forEach(alert=>{\n                    if(alert.symbol===symbol){\n                      switch(alert.Identifier){\n                        case 'Price':\n                            switch(alert.movement){\n                                case 'above':{\n                                  console.log(alert);\n                                  if(symbol.currentPrice > alert.valuechange){\n                                    alert(\"Your Price Alert watching for \"+symbol.Symbol+\" to go above: \"+alert.valuechange+\" has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Above Alert not triggered\");\n                                }\n                                    \n                                case 'below':{\n                                  if(symbol.currentPrice < alert.valuechange){\n                                    alert(\"Your Price Alert watching for \"+symbol.Symbol+\" to go below: \"+alert.valuechange+\" has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Below Alert not triggered\");\n                                }\n                                \n                                default:\n                                    return (\"something went wrong\");\n                            }\n                        case 'Percent':\n                            switch(alert.movment){\n                                case 'Up':{\n                                  if(symbol.CurrentPercentChange > alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving up: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Up Alert not triggered\");\n                                }\n                                    \n                                case 'Down':{\n                                  if(symbol.CurrentPercentChange < alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving down: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Down Alert has been triggered\");\n                                  }\n                                  return (\"Down Up Alert not triggered\");\n                                }\n                                default:\n                                  return (\"Down Alert not triggered\");\n                            }\n                        default:\n                          return (\"something went wrong\");\n                    \n                    }}\n                  })\n                  \n            }\n            \n        })\n        this.setState({stocks:user_watchlist});\n      }\n    }\n    X =0;\n    componentDidMount(){\n      // console.log(isMarketOpen())\n      console.log(this.state.stocks)\n   \n      if(this.state.stock!=='No stocks added'){\n        \n        var whichToUpdate= this.state.stocks.map(stock=>{\n          return shouldgetUpdatedEod(stock)\n        })\n        console.log(whichToUpdate);\n        var newList = this.state.stocks.map((stock,indx)=>{\n          if(whichToUpdate[indx]){\n            let x =stock;\n            this.getEodData(stock['01. symbol'],((result)=>{\n              x=result\n            }));\n            return x;\n          }\n          else{\n            return stock \n          }\n        })\n        console.log(this.state.stocks, newList)\n        if(newList !==this.state.stocks ){\n          this.setState({stocks:newList});\n        }\n        \n      }\n      \n      if(isMarketOpen()){\n        \n        this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        this.connection.onopen = ()=> { \n          if (this.state.stocks!==\"No stocks added\"){\n              this.state.stocks.forEach(symbol=>{\n                  this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol['Symbol']}));\n                  console.log(\"Inside OnOpen: Subscribed To: \", symbol['Symbol'])\n              })\n          }\n          else{\n              console.log(\"no stocks added to subscribe to\");\n          }\n          \n         }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n      }\n       \n        \n    }\n    \n    \n   \n    removeStock(htmlEvent,stock){\n      if(isMarketOpen()){\n         //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock[\"Symbol\"])\n       this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock[\"Symbol\"]}))\n      }\n       \n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock[\"Symbol\"],\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            console.log(res)\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n                \n              return res.json();\n            }\n          })\n          .then((result)=> {\n            console.log(result);\n              console.log(\"1st remove stock rerender\");\n              this.removeHelper(result)});\n    \n    }\n    \n    removeHelper(result){\n        console.log(\"p/179\",result);\n        //removed but still showing on watch list\n        if(result === \"No stocks added\"){\n          this.setState({stocks:\"No stocks added\",stockHasBeenRemoved:!this.state.stockHasBeenRemoved})\n        }\n        else if(result.Response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(result.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({stocks:result.Data,stockHasBeenRemoved:!this.state.stockHasBeenRemoved});\n           \n        }\n    }\n    \n    renderStockChart(event){\n      console.log(event.dataItem[\"Symbol\"])\n      this.setState({chartStock:event.dataItem[\"Symbol\"]})\n    }\n    render(){\n     \n        var useData;\n        // console.log(isMarketOpen())\n        if(this.props.stocks !==\"No stocks added\"&&this.state.stocks !==\"No stocks added\"){\n          useData=this.state.stocks\n          // console.log(useData);\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                {/* <GridColumn title=\"Name\" field=\"name\" /> */}\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100} cell={this.symbolCell} />\n                <GridColumn title=\"Last Close\" field=\"PreviousClose\" cell={add$sign}/>\n                <GridColumn title=\"Price\" field=\"currentPrice\" cell={ChangeCurPriceColor}/>\n                <GridColumn title=\"Change\" field=\"changeV\" cell={ChangeCurChangeColor} />\n                <GridColumn title=\"% Change\" field=\"changeP\" cell={ChangeCurChangeColor}/>\n                {/* <GridColumn title=\"View Chart\" id=\"Symbol\" cell={tooltiprender} width=\"200px\" /> */}\n                {/* <GridColumn title=\"Track\" id=\"Symbol\" cell={this.CommandCell} width=\"200px\" /> */}\n              </Grid>\n            </Tooltip>\n         \n          )\n        }\n        else{\n          useData=[{\n            eodClose:\"Add stocks\",\n            Symbol:\"Add stocks\",\n            currentPrice:\"Add stocks\",\n            Change:\"Add stocks\",\n            CurrentAmountChange:\"Add stocks\",\n            CurrentPercentChange:\"Add stocks\",\n            Track:\"Add stocks\"\n\n          },]\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100}  />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" />\n                <GridColumn title=\"Price\" field=\"currentPrice\" />\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" />\n                {/* <GridColumn title=\"Track\" field=\"Track\" width=\"200px\" /> */}\n              </Grid>\n            </Tooltip>\n          )\n        }\n        // console.log(this.state.eodData)\n        return (\n          \n          \n          grid\n          \n          );\n        }\n})\n"]},"metadata":{},"sourceType":"module"}