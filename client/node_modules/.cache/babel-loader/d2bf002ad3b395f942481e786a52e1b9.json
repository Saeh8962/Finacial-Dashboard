{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"universalify\"),\n    fromCallback = _require.fromCallback;\n\nvar Store = require(\"./store\").Store;\n\nvar permuteDomain = require(\"./permuteDomain\").permuteDomain;\n\nvar pathMatch = require(\"./pathMatch\").pathMatch;\n\nvar util = require(\"util\");\n\nvar MemoryCookieStore = /*#__PURE__*/function (_Store) {\n  _inherits(MemoryCookieStore, _Store);\n\n  var _super = _createSuper(MemoryCookieStore);\n\n  function MemoryCookieStore() {\n    var _this;\n\n    _classCallCheck(this, MemoryCookieStore);\n\n    _this = _super.call(this);\n    _this.synchronous = true;\n    _this.idx = {};\n\n    if (util.inspect.custom) {\n      _this[util.inspect.custom] = _this.inspect;\n    }\n\n    return _this;\n  }\n\n  _createClass(MemoryCookieStore, [{\n    key: \"inspect\",\n    value: function inspect() {\n      return \"{ idx: \".concat(util.inspect(this.idx, false, 2), \" }\");\n    }\n  }, {\n    key: \"findCookie\",\n    value: function findCookie(domain, path, key, cb) {\n      if (!this.idx[domain]) {\n        return cb(null, undefined);\n      }\n\n      if (!this.idx[domain][path]) {\n        return cb(null, undefined);\n      }\n\n      return cb(null, this.idx[domain][path][key] || null);\n    }\n  }, {\n    key: \"findCookies\",\n    value: function findCookies(domain, path, allowSpecialUseDomain, cb) {\n      var results = [];\n\n      if (typeof allowSpecialUseDomain === \"function\") {\n        cb = allowSpecialUseDomain;\n        allowSpecialUseDomain = false;\n      }\n\n      if (!domain) {\n        return cb(null, []);\n      }\n\n      var pathMatcher;\n\n      if (!path) {\n        // null means \"all paths\"\n        pathMatcher = function matchAll(domainIndex) {\n          for (var curPath in domainIndex) {\n            var pathIndex = domainIndex[curPath];\n\n            for (var key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        };\n      } else {\n        pathMatcher = function matchRFC(domainIndex) {\n          //NOTE: we should use path-match algorithm from S5.1.4 here\n          //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n          Object.keys(domainIndex).forEach(function (cookiePath) {\n            if (pathMatch(path, cookiePath)) {\n              var pathIndex = domainIndex[cookiePath];\n\n              for (var key in pathIndex) {\n                results.push(pathIndex[key]);\n              }\n            }\n          });\n        };\n      }\n\n      var domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n      var idx = this.idx;\n      domains.forEach(function (curDomain) {\n        var domainIndex = idx[curDomain];\n\n        if (!domainIndex) {\n          return;\n        }\n\n        pathMatcher(domainIndex);\n      });\n      cb(null, results);\n    }\n  }, {\n    key: \"putCookie\",\n    value: function putCookie(cookie, cb) {\n      if (!this.idx[cookie.domain]) {\n        this.idx[cookie.domain] = {};\n      }\n\n      if (!this.idx[cookie.domain][cookie.path]) {\n        this.idx[cookie.domain][cookie.path] = {};\n      }\n\n      this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n      cb(null);\n    }\n  }, {\n    key: \"updateCookie\",\n    value: function updateCookie(oldCookie, newCookie, cb) {\n      // updateCookie() may avoid updating cookies that are identical.  For example,\n      // lastAccessed may not be important to some stores and an equality\n      // comparison could exclude that field.\n      this.putCookie(newCookie, cb);\n    }\n  }, {\n    key: \"removeCookie\",\n    value: function removeCookie(domain, path, key, cb) {\n      if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n        delete this.idx[domain][path][key];\n      }\n\n      cb(null);\n    }\n  }, {\n    key: \"removeCookies\",\n    value: function removeCookies(domain, path, cb) {\n      if (this.idx[domain]) {\n        if (path) {\n          delete this.idx[domain][path];\n        } else {\n          delete this.idx[domain];\n        }\n      }\n\n      return cb(null);\n    }\n  }, {\n    key: \"removeAllCookies\",\n    value: function removeAllCookies(cb) {\n      this.idx = {};\n      return cb(null);\n    }\n  }, {\n    key: \"getAllCookies\",\n    value: function getAllCookies(cb) {\n      var cookies = [];\n      var idx = this.idx;\n      var domains = Object.keys(idx);\n      domains.forEach(function (domain) {\n        var paths = Object.keys(idx[domain]);\n        paths.forEach(function (path) {\n          var keys = Object.keys(idx[domain][path]);\n          keys.forEach(function (key) {\n            if (key !== null) {\n              cookies.push(idx[domain][path][key]);\n            }\n          });\n        });\n      }); // Sort by creationIndex so deserializing retains the creation order.\n      // When implementing your own store, this SHOULD retain the order too\n\n      cookies.sort(function (a, b) {\n        return (a.creationIndex || 0) - (b.creationIndex || 0);\n      });\n      cb(null, cookies);\n    }\n  }]);\n\n  return MemoryCookieStore;\n}(Store);\n\n[\"findCookie\", \"findCookies\", \"putCookie\", \"updateCookie\", \"removeCookie\", \"removeCookies\", \"removeAllCookies\", \"getAllCookies\"].forEach(function (name) {\n  MemoryCookieStore[name] = fromCallback(MemoryCookieStore.prototype[name]);\n});\nexports.MemoryCookieStore = MemoryCookieStore;","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/tough-cookie/lib/memstore.js"],"names":["require","fromCallback","Store","permuteDomain","pathMatch","util","MemoryCookieStore","synchronous","idx","inspect","custom","domain","path","key","cb","undefined","allowSpecialUseDomain","results","pathMatcher","matchAll","domainIndex","curPath","pathIndex","push","matchRFC","Object","keys","forEach","cookiePath","domains","curDomain","cookie","oldCookie","newCookie","putCookie","cookies","paths","sort","a","b","creationIndex","name","prototype","exports"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst { fromCallback } = require(\"universalify\");\nconst Store = require(\"./store\").Store;\nconst permuteDomain = require(\"./permuteDomain\").permuteDomain;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst util = require(\"util\");\n\nclass MemoryCookieStore extends Store {\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = {};\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n  }\n\n  inspect() {\n    return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n  }\n\n  findCookie(domain, path, key, cb) {\n    if (!this.idx[domain]) {\n      return cb(null, undefined);\n    }\n    if (!this.idx[domain][path]) {\n      return cb(null, undefined);\n    }\n    return cb(null, this.idx[domain][path][key] || null);\n  }\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    const results = [];\n    if (typeof allowSpecialUseDomain === \"function\") {\n      cb = allowSpecialUseDomain;\n      allowSpecialUseDomain = false;\n    }\n    if (!domain) {\n      return cb(null, []);\n    }\n\n    let pathMatcher;\n    if (!path) {\n      // null means \"all paths\"\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        //NOTE: we should use path-match algorithm from S5.1.4 here\n        //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n        Object.keys(domainIndex).forEach(cookiePath => {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        });\n      };\n    }\n\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach(curDomain => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n\n    cb(null, results);\n  }\n\n  putCookie(cookie, cb) {\n    if (!this.idx[cookie.domain]) {\n      this.idx[cookie.domain] = {};\n    }\n    if (!this.idx[cookie.domain][cookie.path]) {\n      this.idx[cookie.domain][cookie.path] = {};\n    }\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n    cb(null);\n  }\n  updateCookie(oldCookie, newCookie, cb) {\n    // updateCookie() may avoid updating cookies that are identical.  For example,\n    // lastAccessed may not be important to some stores and an equality\n    // comparison could exclude that field.\n    this.putCookie(newCookie, cb);\n  }\n  removeCookie(domain, path, key, cb) {\n    if (\n      this.idx[domain] &&\n      this.idx[domain][path] &&\n      this.idx[domain][path][key]\n    ) {\n      delete this.idx[domain][path][key];\n    }\n    cb(null);\n  }\n  removeCookies(domain, path, cb) {\n    if (this.idx[domain]) {\n      if (path) {\n        delete this.idx[domain][path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return cb(null);\n  }\n  removeAllCookies(cb) {\n    this.idx = {};\n    return cb(null);\n  }\n  getAllCookies(cb) {\n    const cookies = [];\n    const idx = this.idx;\n\n    const domains = Object.keys(idx);\n    domains.forEach(domain => {\n      const paths = Object.keys(idx[domain]);\n      paths.forEach(path => {\n        const keys = Object.keys(idx[domain][path]);\n        keys.forEach(key => {\n          if (key !== null) {\n            cookies.push(idx[domain][path][key]);\n          }\n        });\n      });\n    });\n\n    // Sort by creationIndex so deserializing retains the creation order.\n    // When implementing your own store, this SHOULD retain the order too\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n\n    cb(null, cookies);\n  }\n}\n\n[\n  \"findCookie\",\n  \"findCookies\",\n  \"putCookie\",\n  \"updateCookie\",\n  \"removeCookie\",\n  \"removeCookies\",\n  \"removeAllCookies\",\n  \"getAllCookies\"\n].forEach(name => {\n  MemoryCookieStore[name] = fromCallback(MemoryCookieStore.prototype[name]);\n});\n\nexports.MemoryCookieStore = MemoryCookieStore;\n"]},"metadata":{},"sourceType":"script"}