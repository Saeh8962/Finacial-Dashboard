{"ast":null,"code":"import _toConsumableArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartValueAxisItem, ChartValueAxis, ChartTitle, ChartTooltip, ChartSeriesItemTooltip } from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { getHistory } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar url = \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\n\nvar request = require('request');\n\nvar categories = ['Jan`21', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']; //const categories=['Jun','Jul','Aug','Sept','Oct','Nov','Dec','Jan`21','Feb','Mar','Apr','May','Jun','Jul']\n\nvar history_date = new Date();\n\nfunction convertHistoryDate(date) {\n  var value = date;\n  var newDates = {\n    date: value.slice(0, 10),\n    month: value.slice(5, 7),\n    day: value.slice(8, 10),\n    year: value.slice(0, 4)\n  };\n  var result = newDates.year + newDates.month + newDates.day;\n  return result;\n  return newDates;\n} // const defaultTooltipRender = ({ data }) => (`Default Content ${data}`);\n// const nestedTooltipRender = ({ data }) => (\n// <span>\n//   <p>Series 1 value: {data}</p>\n//   <p>Series 1 value: {data}</p>\n// </span>\n// );\n\n\nfunction getHistoryData(symbol, from, to, callback) {\n  var url = {\n    address: \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23\",\n    symbol: \"&symbols=\" + symbol,\n    dateFrom: \"&date_from=\" + from,\n    dateTo: \"&date_to=\" + to,\n    limit: \"&limit=500\"\n  };\n  var fullUrl = \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=\" + symbol + \"&date_from=\" + from + \"&date_to=\" + to + \"&limit=500\";\n  request(fullUrl, {\n    json: true\n  }, function (err, res, body) {\n    if (err) {\n      return console.log(err);\n    }\n\n    return getHistory(body.data).then(function (results) {\n      callback(results);\n    });\n  });\n}\n\nfunction getDate() {\n  var dateOBJ = new Date();\n  var month = dateOBJ.getUTCMonth() + 1;\n  var day = dateOBJ.getUTCDate();\n  var year = dateOBJ.getUTCFullYear();\n\n  if (month < 10) {\n    var Newmonth = \"0\" + month;\n    console.log(Newmonth);\n    month = parseInt(Newmonth);\n  } else if (day < 10) {\n    var NewDay = \"0\" + day;\n    day = parseInt(NewDay);\n  }\n\n  var currentDate = {\n    curMonth: month,\n    curDay: day,\n    curYear: year\n  };\n  return currentDate;\n} // getMinMax(data){ \n//   console.log()\n// }\n\n\nexport default function PerformancePanel(props) {\n  _s();\n\n  var DateOBJ = getDate();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      history = _React$useState2[0],\n      setHistory = _React$useState2[1];\n\n  console.log(\"chart property \", props);\n\n  if (props.symbol === \"\" || props.symbol === undefined) {\n    props = {\n      symbol: \"TSLA\",\n      to: DateOBJ.curYear + \"-\" + DateOBJ.curMonth + \"-\" + DateOBJ.curDay,\n      from: DateOBJ.curYear + \"-01-01\"\n    };\n  } else {\n    props = {\n      symbol: props.symbol,\n      to: DateOBJ.curYear + \"-\" + DateOBJ.curMonth + \"-\" + DateOBJ.curDay,\n      from: DateOBJ.curYear + \"-01-01\"\n    };\n  }\n\n  React.useEffect(function () {\n    console.log(\"in useEffect \", props);\n    getHistoryData(props.symbol, props.from, props.to, setHistory);\n  }, [props.symbol]);\n\n  if (history) {\n    var history_OpenData = history.map(function (data) {\n      return {\n        data: data.open,\n        date: convertHistoryDate(data.date)\n      };\n    });\n    var dates = history_OpenData.map(function (data) {\n      return new Date(data.date);\n    });\n    var data = history_OpenData.map(function (value) {\n      return value.data;\n    });\n    var title = \"YTD \" + props.symbol + \" Stock Price\"; // var min,max= getMinMax(history_OpenData);\n\n    console.log(dates);\n    return /*#__PURE__*/_jsxDEV(Chart, {\n      children: [/*#__PURE__*/_jsxDEV(ChartTooltip, {\n        shared: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartTitle, {\n        text: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartValueAxis, {\n        children: /*#__PURE__*/_jsxDEV(ChartValueAxisItem, {\n          title: {\n            text: \"Stock Price\"\n          },\n          min: Math.floor(Math.min.apply(Math, _toConsumableArray(data))),\n          max: Math.ceil(Math.max.apply(Math, _toConsumableArray(data))) + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n        children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n          title: {\n            text: \"Day/Month\"\n          },\n          maxDivisions: 14,\n          categories: dates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n        children: /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"line\",\n          data: data,\n          markers: {\n            visible: false\n          },\n          style: 'normal',\n          children: /*#__PURE__*/_jsxDEV(ChartSeriesItemTooltip, {\n            background: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(PerformancePanel, \"m2zlKD6z2d5JHwcHk/9BlD37tsE=\");\n\n_c = PerformancePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformancePanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartValueAxisItem","ChartValueAxis","ChartTitle","ChartTooltip","ChartSeriesItemTooltip","getHistory","url","request","require","categories","history_date","Date","convertHistoryDate","date","value","newDates","slice","month","day","year","result","getHistoryData","symbol","from","to","callback","address","dateFrom","dateTo","limit","fullUrl","json","err","res","body","console","log","data","then","results","getDate","dateOBJ","getUTCMonth","getUTCDate","getUTCFullYear","Newmonth","parseInt","NewDay","currentDate","curMonth","curDay","curYear","PerformancePanel","props","DateOBJ","useState","history","setHistory","undefined","useEffect","history_OpenData","map","open","dates","title","text","Math","floor","min","ceil","max","visible"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartValueAxisItem,\n  ChartValueAxis,\n  ChartTitle,\n  ChartSeriesLabels,\n  ChartTooltip,\n  ChartLegend,\n  ChartSeriesItemTooltip,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { getHistory } from \"../services/dataService\";\nimport { History } from \"../data/models\";\nconst url =\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\nconst request = require('request');\nconst categories=['Jan`21','Feb','Mar','Apr','May','Jun','Jul']\n//const categories=['Jun','Jul','Aug','Sept','Oct','Nov','Dec','Jan`21','Feb','Mar','Apr','May','Jun','Jul']\n\nconst history_date = new Date();\n   \nfunction convertHistoryDate(date:string){\n  var value = date \n    var newDates ={\n      date:value.slice(0,10),\n      month: value.slice(5,7),\n      day: value.slice(8,10),\n      year: value.slice(0,4)\n    }\n    var result= newDates.year+newDates.month+newDates.day;\n    return result\n   \n  return newDates;\n}\n// const defaultTooltipRender = ({ data }) => (`Default Content ${data}`);\n// const nestedTooltipRender = ({ data }) => (\n// <span>\n//   <p>Series 1 value: {data}</p>\n  \n//   <p>Series 1 value: {data}</p>\n// </span>\n// );\nfunction getHistoryData(symbol:string,from:string,to:string,callback: (arg0: History[]) => void){\n  var url ={\n    address:\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23\",\n    symbol:\"&symbols=\"+symbol,\n    dateFrom:\"&date_from=\"+from,\n    dateTo:\"&date_to=\"+to,\n    limit:\"&limit=500\"\n  }\n  var fullUrl= \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=\"+symbol+\"&date_from=\"+from+\"&date_to=\"+to+\"&limit=500\";\n\n  request(fullUrl, { json: true }, (err: any, res: any, body: any) => {\n    if (err) { return console.log(err); }\n    return getHistory(body.data).then((results: History[]) => {\n      callback(results);\n    });\n    \n  })\n}\nfunction getDate(){\n  var dateOBJ = new Date();\n  var month= dateOBJ.getUTCMonth()+1;\n  var day = dateOBJ.getUTCDate();\n  var year = dateOBJ.getUTCFullYear();\n\n  if(month<10){\n    \n    var Newmonth = \"0\"+month\n    console.log(Newmonth)\n    month = parseInt(Newmonth)\n  }\n  else if(day <10){\n    var NewDay = \"0\"+day\n    day = parseInt(NewDay)\n  }\n  var currentDate ={\n    curMonth:month,\n    curDay:day,\n    curYear:year\n  }\n  \n  return currentDate;\n}\n// getMinMax(data){ \n//   console.log()\n// }\nexport default function PerformancePanel(props:any) {\n  \n  var DateOBJ= getDate();\n  const [history, setHistory] = React.useState<History[]>();\n  console.log(\"chart property \", props)\n  if(props.symbol===\"\"||props.symbol===undefined) {\n    props = {\n      symbol:\"TSLA\",\n      to:DateOBJ.curYear+\"-\"+DateOBJ.curMonth+\"-\"+DateOBJ.curDay,\n      from:DateOBJ.curYear+\"-01-01\",\n    }\n    \n  }\n  else{ \n    props = {\n      symbol:props.symbol,\n      to:DateOBJ.curYear+\"-\"+DateOBJ.curMonth+\"-\"+DateOBJ.curDay,\n      from:DateOBJ.curYear+\"-01-01\",\n    }\n  }\n  \n  \n  React.useEffect(() => {\n    console.log(\"in useEffect \", props)\n    getHistoryData(props.symbol,props.from,props.to,setHistory);\n  }, [props.symbol]);\n\nif(history){\n  var history_OpenData = history.map(data=>({data:data.open,date:convertHistoryDate(data.date)}))\n  var dates = history_OpenData.map(data => new Date(data.date));\n  var data = history_OpenData.map(value =>value.data)\n  var title= \"YTD \"+props.symbol+\" Stock Price\";\n  // var min,max= getMinMax(history_OpenData);\nconsole.log(dates);\n\n\n  return (\n    \n          <Chart>\n            <ChartTooltip shared={true}/>\n            <ChartTitle text={title} />\n            {/* <ChartTitle text=\"Line Chart\" /> */}\n            {/* <ChartLegend position=\"top\" orientation=\"horizontal\" display=\"false\" /> */}\n            <ChartValueAxis>\n              <ChartValueAxisItem\n                title={{\n                  text: \"Stock Price\",\n                }}\n                min={Math.floor(Math.min(...data))}\n                max={Math.ceil(Math.max(...data))+1}\n              />\n            </ChartValueAxis>\n            <ChartCategoryAxis>\n              <ChartCategoryAxisItem \n                title={{\n                  text: \"Day/Month\",\n                }}\n                maxDivisions={14}\n                categories={dates}/>\n            </ChartCategoryAxis>\n            <ChartSeries>\n              <ChartSeriesItem type=\"line\" data={data} markers={{ visible: false }} style={'normal'}>\n              <ChartSeriesItemTooltip background=\"blue\"/>\n              </ChartSeriesItem>\n              {/* <ChartSeriesLabels content={'june'} /> */}\n            </ChartSeries>\n          </Chart>\n        \n  );\n  }\n  else{ \n    return <h2>Performance</h2>\n  }\n}"]},"metadata":{},"sourceType":"module"}