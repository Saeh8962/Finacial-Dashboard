{"ast":null,"code":"import _classCallCheck from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx\";\nimport React, { Component, ChildComponent } from \"react\";\nimport { ListGroup } from \"react-bootstrap/esm\";\nimport { Button, DropdownMenu, Dropdown } from \"reactstrap/es\";\nimport { withRouter } from \"react-router-dom\"; // import \"./CSS/GlobalCSS.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar WatchList = /*#__PURE__*/function (_React$Component) {\n  _inherits(WatchList, _React$Component);\n\n  var _super = _createSuper(WatchList);\n\n  function WatchList(props) {\n    var _this;\n\n    _classCallCheck(this, WatchList);\n\n    _this = _super.call(this, props);\n\n    _this.saveNewStockTrade = function (event) {\n      var result = JSON.parse(event.data);\n      console.log(result);\n      var user_watchlist = _this.state.stocks;\n      console.log(\"InsidesaveNewStockTrade: \", user_watchlist);\n\n      if (result.type === \"trade\") {\n        user_watchlist.forEach(function (symbol) {\n          var tradePrice = result.data.filter(function (i, n) {\n            return i.s === symbol.Symbol;\n          });\n\n          if (tradePrice.length !== 0) {\n            symbol.currentPrice = tradePrice[tradePrice.length - 1].p;\n            console.log(\"Found Updated price for \", symbol.Symbol); // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n          }\n        });\n      }\n\n      _this.setState({\n        stocks: user_watchlist\n      });\n    };\n\n    _this.saveNewStockTrade = _this.saveNewStockTrade.bind(_assertThisInitialized(_this));\n    _this.getUserStocks = _this.getUserStocks.bind(_assertThisInitialized(_this));\n    _this.UpdateStockOnPage = _this.UpdateStockOnPage.bind(_assertThisInitialized(_this));\n    _this.addUserStock = _this.addUserStock.bind(_assertThisInitialized(_this)); // this.updateDropdown=this.updateDropdown.bind(this);\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this)); // this.updatePage= this.updatePage.bind(this);\n\n    _this.removeStock = _this.removeStock.bind(_assertThisInitialized(_this)); // this.UpdateStockOnPageRemove=this.UpdateStockOnPageRemove.bind(this); \n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      email: _this.props.email,\n      stocks: _this.props.stocks,\n      connectionError: false,\n      dropdownOpen: false,\n      value: \"Your Watchlist\"\n    };\n    return _this;\n  }\n\n  _createClass(WatchList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n      this.getUserStocks();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this2 = this;\n\n      this.state.stocks.forEach(function (symbol) {\n        _this2.connection.send(JSON.stringify({\n          'type': 'unsubscribe',\n          'symbol': symbol.Symbol\n        }));\n      });\n      this.connection.close(); // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n      // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.stocks !== this.state.stocks) {\n        console.log('stocks state has changed.');\n        this.props.history.push(\"/profile\", [[{\n          email: this.state.email\n        }], this.state.stocks]);\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen,\n        value: event.currentTarget.textContent\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.connection.onopen = function () {\n        if (_this3.state.stocks !== \"No stocks added\") {\n          _this3.state.stocks.forEach(function (symbol) {\n            _this3.connection.send(JSON.stringify({\n              'type': 'subscribe',\n              'symbol': symbol.Symbol\n            }));\n\n            console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol);\n          });\n        } else {\n          console.log(\"no stocks added to subscribe to\");\n        }\n      };\n\n      this.connection.onmessage = this.saveNewStockTrade;\n\n      this.connection.onclose = function () {\n        _this3.setState({\n          connectionError: true\n        });\n      };\n    } // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    //         </div></>\n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n    // }\n\n  }, {\n    key: \"removeStock\",\n    value: function removeStock(htmlEvent, stock) {\n      var _this4 = this;\n\n      //unsubsribe from listening to thsi stock\n      console.log(\"Unsubscribing from: \", stock);\n      this.connection.send(JSON.stringify({\n        'type': 'unsubscribe',\n        'symbol': stock\n      })); //first stop the htmlEvents default status\n\n      htmlEvent.preventDefault();\n      var user = {\n        email: this.props.email,\n        stock_symbol: stock\n      };\n      console.log(user);\n      var url = '/api/removeUserStock';\n      var req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(function (res) {\n        if (res.status === 500) {\n          res.json().then(function (json) {\n            var message = json.message,\n                stackTrace = json.stackTrace;\n          }).catch(function (error) {\n            return Promise.reject(error);\n          });\n        } else {\n          return res.json();\n        }\n      }).then(function (result) {\n        console.log(\"1st remove stock rerender\");\n\n        _this4.setState({\n          remove_status: result\n        }, function () {\n          return _this4.removeHelper();\n        });\n      });\n    }\n  }, {\n    key: \"removeHelper\",\n    value: function removeHelper() {\n      var _this5 = this;\n\n      console.log(\"p/179\", this.state.remove_status); //removed but still showing on watch list\n\n      if (this.state.remove_status.response === \"Stock not on watch list\") {\n        alert(\"Stock Queued For Deletion, Please Login In Again\");\n      } //stock has been removed from watchlist\n      else if (this.state.remove_status.Response === \"Sucessfully removed stock\") {\n          console.log(\"2nd remove stock rerender\");\n          this.setState({\n            Remove_Status: \"\"\n          }, function () {\n            return _this5.getUserStocks();\n          });\n        }\n    }\n  }, {\n    key: \"getUserStocks\",\n    value: function getUserStocks() {\n      var _this6 = this;\n\n      var user = {\n        email: this.state.email\n      };\n      var url = \"/api/getUserStocks\";\n      var req = new Request(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      });\n      fetch(req).then(function (res) {\n        return res.json();\n      }).catch(function (error) {\n        console.log(\"p/121\");\n        console.log(error);\n        return Promise.reject(error);\n      }).then(function (stock_results) {\n        console.log(\"3rdt ADD/remove Stock Rerender\");\n\n        _this6.setState({\n          stocks: stock_results\n        }, function () {\n          return _this6.updatePage;\n        });\n      });\n    }\n  }, {\n    key: \"updatePage\",\n    value: function updatePage() {\n      console.log(\"In update page \", this.state.stocks);\n      this.props.history.push(\"/profile\", [[{\n        email: this.state.email\n      }], this.state.stocks]);\n    }\n  }, {\n    key: \"UpdateStockOnPage\",\n    value: function UpdateStockOnPage() {\n      var _this7 = this;\n\n      if (this.state.stock_symbol_status === 'User had already added this stock') {\n        alert(\"This stock is already on your watchlist\");\n      } else {\n        console.log(\"2nd ADD Stock Rerender\");\n        this.setState({\n          stock_symbol_status: \"\",\n          Remove_Status: \"\"\n        }, function () {\n          return _this7.getUserStocks();\n        });\n      }\n    }\n  }, {\n    key: \"addUserStock\",\n    value: function addUserStock() {\n      var _this8 = this;\n\n      if (this.state.stock_symbol_status !== \"stock not found\") {\n        console.log(\"Subscribing to \", this.state.stock_to_watch);\n        this.connection.send(JSON.stringify({\n          'type': 'subscribe',\n          'symbol': this.state.stock_to_watch\n        }));\n        var user = {\n          email: this.props.email,\n          addStock: this.state.stock_to_watch\n        };\n        var url = \"/api/AddUserStocks\";\n        var req = new Request(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(user)\n        });\n        fetch(req).then(function (res) {\n          return res.json();\n        }).catch(function (error) {\n          return Promise.reject(error);\n        }).then(function (result) {\n          console.log(\"1st ADD Stock Rerender\");\n\n          _this8.setState({\n            stock_symbol_status: result\n          }, function () {\n            return _this8.UpdateStockOnPage();\n          });\n        });\n      } else {\n        //put in this functionality \n        alert(\"stock not found\");\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        stock_to_watch: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      console.log(\"In render: \", this.state.stocks, this.props.stocks); // console.log(\"In render: \", this.state.dropdownDisplay);\n\n      if (this.state == null) {\n        this.props.history.push(\"/error\");\n      }\n\n      var Message = \"Your WatchList\";\n\n      if (this.state.stocks === \"No stocks added\") {\n        Message = \"Empty Watchlist\";\n      }\n\n      var MessageArrowDir;\n\n      if (this.state.dropdownOpen) {\n        MessageArrowDir = \"\\u25BC\";\n      } else {\n        MessageArrowDir = \"\\u25B2\";\n      }\n\n      var dropdownDisplay = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropDiv\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"FakeDropDown\",\n            onClick: function onClick(e) {\n              _this9.doNothing(e);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: \"55px\"\n              },\n              children: Message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"realDropDown \",\n            onClick: this.toggle,\n            \"aria-expanded\": this.state.dropdownOpen,\n            \"data-toggle\": \"dropdown\",\n            \"aria-haspopup\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"18px\"\n              },\n              children: MessageArrowDir\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true);\n\n      var dropdown;\n\n      if (this.state.stocks !== \"No stocks added\") {\n        dropdown = /*#__PURE__*/_jsxDEV(Dropdown, {\n          style: {\n            marginBottom: \"20px\"\n          },\n          isOpen: this.state.dropdownOpen,\n          children: [dropdownDisplay, /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            className: \"DDM\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ArtistsDisplayWrapper\",\n              children: this.state.stocks.map(function (stocks, index) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ArtistLine\",\n                  style: {\n                    marginBottom: \"55px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: function onClick(e) {\n                      _this9.doNothing(e);\n                    },\n                    className: \"artistButton\",\n                    children: stocks.Symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 17\n                  }, _this9), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: stocks.symbol,\n                    onClick: function onClick(e) {\n                      _this9.doNothing(e);\n                    },\n                    className: \"playArtistButton\",\n                    children: [\"$\", stocks.currentPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 17\n                  }, _this9), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: function onClick(e) {\n                      _this9.removeStock(e, stocks.Symbol);\n                    },\n                    className: \"removeButton\",\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 17\n                  }, _this9)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 13\n                }, _this9);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }, this);\n      } else {\n        dropdown = dropdownDisplay;\n      } // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n      // this.props.history.push(\"/error\",this.state)\n\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ALL\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"HeaderInfo\",\n            id: \"ProfileInfo\",\n            children: [\"Hey! \", this.state.email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"FormFields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FormField\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this.handleChange,\n                className: \"FormField_Input\",\n                placeholder: \"Stock Name\",\n                type: \"text\",\n                name: \"stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"play\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.addUserStock,\n                  className: \"ButtonNoRight\",\n                  children: \"Track \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), dropdown]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 5\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return WatchList;\n}(React.Component);\n\nexport default _c = withRouter(WatchList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx"],"names":["React","Component","ChildComponent","ListGroup","Button","DropdownMenu","Dropdown","withRouter","WatchList","props","saveNewStockTrade","event","result","JSON","parse","data","console","log","user_watchlist","state","stocks","type","forEach","symbol","tradePrice","filter","i","n","s","Symbol","length","currentPrice","p","setState","bind","getUserStocks","UpdateStockOnPage","addUserStock","handleChange","removeStock","toggle","email","connectionError","dropdownOpen","value","connection","WebSocket","send","stringify","close","prevProps","prevState","history","push","currentTarget","textContent","onopen","onmessage","onclose","htmlEvent","stock","preventDefault","user","stock_symbol","url","req","Request","method","headers","body","fetch","then","res","status","json","message","stackTrace","catch","error","Promise","reject","remove_status","removeHelper","response","alert","Response","Remove_Status","stock_results","updatePage","stock_symbol_status","stock_to_watch","addStock","target","Message","MessageArrowDir","dropdownDisplay","e","doNothing","marginLeft","fontSize","dropdown","marginBottom","map","index"],"mappings":"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","sourcesContent":["import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\n// import \"./CSS/GlobalCSS.css\";\n\nclass WatchList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.saveNewStockTrade=this.saveNewStockTrade.bind(this);\n        this.getUserStocks= this.getUserStocks.bind(this);\n        this.UpdateStockOnPage= this.UpdateStockOnPage.bind(this);\n        this.addUserStock = this.addUserStock.bind(this);\n        // this.updateDropdown=this.updateDropdown.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        // this.updatePage= this.updatePage.bind(this);\n        this.removeStock= this.removeStock.bind(this);\n        // this.UpdateStockOnPageRemove=this.UpdateStockOnPageRemove.bind(this); \n        this.toggle=this.toggle.bind(this);\n       \n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\"\n            }\n        \n        \n    }\n    componentWillMount(){\n        this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        this.getUserStocks();\n        \n    }\n    componentWillUnmount(){\n        \n        this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n        })\n        this.connection.close();\n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.stocks !== this.state.stocks) {\n          console.log('stocks state has changed.')\n          this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks]);\n        }\n      }\n    toggle(event) {\n        this.setState({\n          dropdownOpen: !this.state.dropdownOpen,\n          value: event.currentTarget.textContent\n        });\n      }\n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        console.log(result)\n        let user_watchlist = this.state.stocks\n        console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol.Symbol);\n                if(tradePrice.length !==0){\n                    symbol.currentPrice = tradePrice[tradePrice.length-1].p; \n                    console.log(\"Found Updated price for \",symbol.Symbol)\n                    // socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.name}))\n                }\n            })\n            \n        }\n        this.setState({stocks:user_watchlist});\n    }\n     \n    componentDidMount(){\n       \n        this.connection.onopen = ()=> { \n            if (this.state.stocks!==\"No stocks added\"){\n                this.state.stocks.forEach(symbol=>{\n                    this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol.Symbol}));\n                    console.log(\"Inside OnOpen: Subscribed To: \", symbol.Symbol)\n                })\n            }\n            else{\n                console.log(\"no stocks added to subscribe to\");\n            }\n            \n        }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n    }\n    \n    // updateDropdown(){\n    //     var Message = \"Your WatchList\";\n    //     if(this.state.stocks===\"No stocks added\"){\n    //         Message =\"Empty Watchlist\"; \n    //     }\n    //     var MessageArrowDir;\n    //     if(this.state.dropdownOpen){\n    //       MessageArrowDir = \"\\u25BC\";\n    //     }\n    \n    //     else{\n    //       MessageArrowDir = \"\\u25B2\";\n    //     }\n        \n    //     var header =\n    //         <> <div className = \"dropDiv\">\n    //             <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n    //             <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n    //                     data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n    //         </div></>\n        \n    //     if(this.state.stocks!==\"No stocks added\"){\n    //     var display = \n    //     <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n    //         {header}\n    \n    //         <DropdownMenu className = \"DDM\">\n    //           <div className = \"ArtistsDisplayWrapper\">\n    //             {this.state.stocks.map((stocks,index) =>\n                \n    //         <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n    //             <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n    //             <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n    //             <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n    //         </div>\n    //             )}\n    //           </div>\n    //         </DropdownMenu>\n    //     </Dropdown>\n    //     this.setState({dropdownDisplay:display});\n    //             }\n    //             else{\n    //                 this.setState({dropdownDisplay:header});\n    //             }\n        \n\n    // }\n   \n    removeStock(htmlEvent,stock){\n        //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock)\n        this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock}))\n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock,\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n              return res.json();\n            }\n          })\n          .then((result)=> {\n              console.log(\"1st remove stock rerender\");\n              this.setState({remove_status:result},()=>this.removeHelper())});\n    \n    }\n    \n    removeHelper(){\n        console.log(\"p/179\",this.state.remove_status);\n        //removed but still showing on watch list\n        if(this.state.remove_status.response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(this.state.remove_status.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({Remove_Status:\"\"},()=>this.getUserStocks());\n           \n        }\n    }\n    getUserStocks(){\n        var user={ \n            email: this.state.email,\n        }\n        var url = \"/api/getUserStocks\";\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n           \n            return res.json();\n        }).catch((error)=>{\n            console.log(\"p/121\");\n            console.log(error);\n            return Promise.reject(error);\n            })\n        .then(stock_results => {\n            console.log(\"3rdt ADD/remove Stock Rerender\");\n            this.setState({stocks:stock_results},()=>this.updatePage)});\n        \n    }\n    \n    updatePage(){\n        console.log(\"In update page \",this.state.stocks);\n        \n        this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n        \n        \n        \n    }\n    \n    UpdateStockOnPage(){\n        if(this.state.stock_symbol_status === 'User had already added this stock'){\n            alert(\"This stock is already on your watchlist\");\n        }\n        \n        else{\n            console.log(\"2nd ADD Stock Rerender\");\n            this.setState({stock_symbol_status:\"\",Remove_Status:\"\"},()=>this.getUserStocks());\n        }\n    }\n\n    addUserStock(){\n        if(this.state.stock_symbol_status !== \"stock not found\"){\n            console.log(\"Subscribing to \",this.state.stock_to_watch)\n            this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n            var user={\n                email:this.props.email,\n                addStock: this.state.stock_to_watch\n            } \n           \n            var url=\"/api/AddUserStocks\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            fetch(req)\n            .then((res)=>{\n                \n                return res.json();\n            }).catch((error)=>{\n                return Promise.reject(error);\n              })\n            .then(result => {\n                console.log(\"1st ADD Stock Rerender\");\n                this.setState({stock_symbol_status: result},()=>this.UpdateStockOnPage())});\n            \n        }\n    \n        else{\n            //put in this functionality \n            alert(\"stock not found\");\n        }\n        \n        \n    }\n    handleChange(event) {\n         \n        this.setState({stock_to_watch: event.target.value});\n      }\n    \n    render(){\n       \n        console.log(\"In render: \", this.state.stocks,this.props.stocks);\n        // console.log(\"In render: \", this.state.dropdownDisplay);\n        if (this.state == null){\n            this.props.history.push(\"/error\");\n            }\n        \n        \n        var Message = \"Your WatchList\";\n        if(this.state.stocks===\"No stocks added\"){\n            Message =\"Empty Watchlist\"; \n        }\n        var MessageArrowDir;\n        if(this.state.dropdownOpen){\n          MessageArrowDir = \"\\u25BC\";\n        }\n    \n        else{\n          MessageArrowDir = \"\\u25B2\";\n        }\n        \n        var dropdownDisplay =\n            <> <div className = \"dropDiv\">\n                <Button className = \"FakeDropDown\" onClick = {(e)=>{this.doNothing(e)}}><span style={{marginLeft:\"55px\"}}>{Message}</span></Button>\n    \n                <Button className = \"realDropDown \"onClick = {this.toggle} aria-expanded = {this.state.dropdownOpen}\n                        data-toggle = \"dropdown\" aria-haspopup=\"true\"><span style={{fontSize:\"18px\"}}>{MessageArrowDir}</span></Button>\n    \n            </div></>\n        var dropdown;\n        if(this.state.stocks!==\"No stocks added\"){\n    \n        dropdown = \n    \n        <Dropdown style = {{marginBottom:\"20px\"}} isOpen={this.state.dropdownOpen}>\n            {dropdownDisplay}\n    \n            <DropdownMenu className = \"DDM\">\n              <div className = \"ArtistsDisplayWrapper\">\n                {this.state.stocks.map((stocks,index) =>\n                \n            <div className = \"ArtistLine\" style = {{marginBottom:\"55px\"}}>\n                \n                <button  onClick = {(e)=>{this.doNothing(e)}} className = \"artistButton\">{stocks.Symbol}</button>\n                <button id = {stocks.symbol} onClick = {(e)=>{this.doNothing(e)}} className = \"playArtistButton\">${stocks.currentPrice}</button>\n                <button onClick = {(e)=>{this.removeStock(e,stocks.Symbol)}} className = \"removeButton\">X</button> \n            </div>\n                )}\n              </div>\n            </DropdownMenu>\n        </Dropdown>\n        }\n        else{\n            dropdown = dropdownDisplay;\n    \n           \n      \n        }\n       \n        // var trackButton = <Button onClick = {this.getStockInfo} className= \"Button\" id = \"TrackButton\" >Track </Button>;\n    \n        // this.props.history.push(\"/error\",this.state)\n        return (\n            \n            <>\n    <div className = \"ALL\">\n    \n            <div className= \"HeaderInfo\" id=\"ProfileInfo\">\n              Hey! {this.state.email}<br></br>\n            </div>\n    \n            <form className= \"FormFields\">\n              <div className=\"FormField\">\n                <input onChange={this.handleChange} className= \"FormField_Input\" placeholder= \"Stock Name\" type=\"text\" name=\"stock\" />\n                <span className = \"play\"><Button onClick={this.addUserStock} className= \"ButtonNoRight\" >Track </Button></span> \n              \n              </div>\n              {/* {trackButton} */}\n              {dropdown}\n    \n          \n    \n              {/* <div style = {{fontSize:12},{marginTop:\"20px\"},{marginBottom:\"20px\"}}>An email will be sent to you at the email above when your artist releases new music.</div>  */}\n    \n            </form>\n    \n          </div>\n            </>\n          );\n        }\n}\nexport default withRouter(WatchList);"]},"metadata":{},"sourceType":"module"}