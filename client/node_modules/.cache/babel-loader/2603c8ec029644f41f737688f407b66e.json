{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar idlUtils = require(\"../generated/utils.js\");\n\nexports.implementation = /*#__PURE__*/function () {\n  function NodeListImpl(globalObject, args, privateData) {\n    _classCallCheck(this, NodeListImpl);\n\n    if (privateData.nodes) {\n      this._list = _toConsumableArray(privateData.nodes);\n      this._isLive = false;\n    } else {\n      this._list = [];\n      this._isLive = true;\n      this._version = -1;\n      this._element = privateData.element;\n      this._query = privateData.query;\n\n      this._update();\n    }\n  }\n\n  _createClass(NodeListImpl, [{\n    key: \"length\",\n    get: function get() {\n      this._update();\n\n      return this._list.length;\n    }\n  }, {\n    key: \"item\",\n    value: function item(index) {\n      this._update();\n\n      return this._list[index] || null;\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      if (this._isLive) {\n        if (this._version < this._element._version) {\n          var snapshot = this._query();\n\n          for (var i = 0; i < snapshot.length; i++) {\n            this._list[i] = snapshot[i];\n          }\n\n          this._list.length = snapshot.length;\n          this._version = this._element._version;\n        }\n      }\n    }\n  }, {\n    key: idlUtils.supportedPropertyIndices,\n    get: function get() {\n      this._update();\n\n      return this._list.keys();\n    }\n  }]);\n\n  return NodeListImpl;\n}();","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/nodes/NodeList-impl.js"],"names":["idlUtils","require","exports","implementation","globalObject","args","privateData","nodes","_list","_isLive","_version","_element","element","_query","query","_update","length","index","snapshot","i","supportedPropertyIndices","keys"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAxB;;AAEAC,OAAO,CAACC,cAAR;AACE,wBAAYC,YAAZ,EAA0BC,IAA1B,EAAgCC,WAAhC,EAA6C;AAAA;;AAC3C,QAAIA,WAAW,CAACC,KAAhB,EAAuB;AACrB,WAAKC,KAAL,sBAAiBF,WAAW,CAACC,KAA7B;AACA,WAAKE,OAAL,GAAe,KAAf;AACD,KAHD,MAGO;AACL,WAAKD,KAAL,GAAa,EAAb;AACA,WAAKC,OAAL,GAAe,IAAf;AACA,WAAKC,QAAL,GAAgB,CAAC,CAAjB;AACA,WAAKC,QAAL,GAAgBL,WAAW,CAACM,OAA5B;AACA,WAAKC,MAAL,GAAcP,WAAW,CAACQ,KAA1B;;AACA,WAAKC,OAAL;AACD;AACF;;AAbH;AAAA;AAAA,SAcE,eAAa;AACX,WAAKA,OAAL;;AACA,aAAO,KAAKP,KAAL,CAAWQ,MAAlB;AACD;AAjBH;AAAA;AAAA,WAkBE,cAAKC,KAAL,EAAY;AACV,WAAKF,OAAL;;AACA,aAAO,KAAKP,KAAL,CAAWS,KAAX,KAAqB,IAA5B;AACD;AArBH;AAAA;AAAA,WAsBE,mBAAU;AACR,UAAI,KAAKR,OAAT,EAAkB;AAChB,YAAI,KAAKC,QAAL,GAAgB,KAAKC,QAAL,CAAcD,QAAlC,EAA4C;AAC1C,cAAMQ,QAAQ,GAAG,KAAKL,MAAL,EAAjB;;AACA,eAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACF,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;AACxC,iBAAKX,KAAL,CAAWW,CAAX,IAAgBD,QAAQ,CAACC,CAAD,CAAxB;AACD;;AACD,eAAKX,KAAL,CAAWQ,MAAX,GAAoBE,QAAQ,CAACF,MAA7B;AACA,eAAKN,QAAL,GAAgB,KAAKC,QAAL,CAAcD,QAA9B;AACD;AACF;AACF;AAjCH;AAAA,SAkCOV,QAAQ,CAACoB,wBAlChB;AAAA,SAkCE,eAA0C;AACxC,WAAKL,OAAL;;AACA,aAAO,KAAKP,KAAL,CAAWa,IAAX,EAAP;AACD;AArCH;;AAAA;AAAA","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nexports.implementation = class NodeListImpl {\n  constructor(globalObject, args, privateData) {\n    if (privateData.nodes) {\n      this._list = [...privateData.nodes];\n      this._isLive = false;\n    } else {\n      this._list = [];\n      this._isLive = true;\n      this._version = -1;\n      this._element = privateData.element;\n      this._query = privateData.query;\n      this._update();\n    }\n  }\n  get length() {\n    this._update();\n    return this._list.length;\n  }\n  item(index) {\n    this._update();\n    return this._list[index] || null;\n  }\n  _update() {\n    if (this._isLive) {\n      if (this._version < this._element._version) {\n        const snapshot = this._query();\n        for (let i = 0; i < snapshot.length; i++) {\n          this._list[i] = snapshot[i];\n        }\n        this._list.length = snapshot.length;\n        this._version = this._element._version;\n      }\n    }\n  }\n  get [idlUtils.supportedPropertyIndices]() {\n    this._update();\n    return this._list.keys();\n  }\n};\n"]},"metadata":{},"sourceType":"script"}