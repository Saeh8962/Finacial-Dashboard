{"ast":null,"code":"var _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"./\"),\n    NumberStream = _require.NumberStream;\n/**\n * A stream for moving window calculation with some simple methods.\n *\n * In essence it's a stream of Array's containing a list of items - a window.\n * It's best used when created by the `DataStream..window`` method.\n *\n * @memberof module:scramjet.\n * @extends NumberStream\n */\n\n\nvar WindowStream = /*#__PURE__*/function (_NumberStream) {\n  \"use strict\";\n\n  _inherits(WindowStream, _NumberStream);\n\n  var _super = _createSuper(WindowStream);\n\n  function WindowStream() {\n    _classCallCheck(this, WindowStream);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WindowStream, [{\n    key: \"sum\",\n    value:\n    /**\n     * Calculates moving sum of items, the output NumberStream will contain the moving sum.\n     *\n     * @chainable\n     * @param {ValueOfCallback} [valueOf] value of method for array items\n     * @return {NumberStream}\n     */\n    function sum() {\n      var valueOf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (x) {\n        return +x;\n      };\n      return this.map(function (arr) {\n        return arr.reduce(function (a, x) {\n          return a + valueOf(x);\n        });\n      }, NumberStream);\n    }\n    /**\n     * Calculates the moving average of the window and returns the NumberStream\n     *\n     * @chainable\n     * @param {ValueOfCallback} [valueOf] value of method for array items\n     * @return {NumberStream}\n     */\n\n  }, {\n    key: \"avg\",\n    value: function avg() {\n      var valueOf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (x) {\n        return +x;\n      };\n      var cnt = 0;\n      return this.map(function (arr) {\n        return arr.reduce(function (a, x) {\n          return (cnt * a + valueOf(x)) / ++cnt;\n        }, 0);\n      }, NumberStream);\n    }\n  }]);\n\n  return WindowStream;\n}(NumberStream);\n\nmodule.exports = WindowStream;","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/node_modules/scramjet/lib/window-stream.js"],"names":["require","NumberStream","WindowStream","valueOf","x","map","arr","reduce","a","cnt","module","exports"],"mappings":";;;;;;;;AAAA,eAAuBA,OAAO,CAAC,IAAD,CAA9B;AAAA,IAAOC,YAAP,YAAOA,YAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMC,Y;;;;;;;;;;;;;;;;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,mBAAyB;AAAA,UAArBC,OAAqB,uEAAX,UAACC,CAAD;AAAA,eAAO,CAACA,CAAR;AAAA,OAAW;AACrB,aAAO,KAAKC,GAAL,CACH,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,MAAJ,CAAW,UAACC,CAAD,EAAIJ,CAAJ;AAAA,iBAAUI,CAAC,GAAGL,OAAO,CAACC,CAAD,CAArB;AAAA,SAAX,CAAJ;AAAA,OADA,EAEHH,YAFG,CAAP;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,eAAyB;AAAA,UAArBE,OAAqB,uEAAX,UAACC,CAAD;AAAA,eAAO,CAACA,CAAR;AAAA,OAAW;AACrB,UAAIK,GAAG,GAAG,CAAV;AACA,aAAO,KAAKJ,GAAL,CACH,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,MAAJ,CAAW,UAACC,CAAD,EAAIJ,CAAJ;AAAA,iBAAU,CAACK,GAAG,GAAGD,CAAN,GAAUL,OAAO,CAACC,CAAD,CAAlB,IAAyB,EAAEK,GAArC;AAAA,SAAX,EAAqD,CAArD,CAAJ;AAAA,OADA,EAEHR,YAFG,CAAP;AAIH;;;;EA7BsBA,Y;;AAgC3BS,MAAM,CAACC,OAAP,GAAiBT,YAAjB","sourcesContent":["const {NumberStream} = require(\"./\");\n\n/**\n * A stream for moving window calculation with some simple methods.\n *\n * In essence it's a stream of Array's containing a list of items - a window.\n * It's best used when created by the `DataStream..window`` method.\n *\n * @memberof module:scramjet.\n * @extends NumberStream\n */\nclass WindowStream extends NumberStream {\n\n    /**\n     * Calculates moving sum of items, the output NumberStream will contain the moving sum.\n     *\n     * @chainable\n     * @param {ValueOfCallback} [valueOf] value of method for array items\n     * @return {NumberStream}\n     */\n    sum(valueOf = (x) => +x) {\n        return this.map(\n            arr => arr.reduce((a, x) => a + valueOf(x)),\n            NumberStream\n        );\n    }\n\n    /**\n     * Calculates the moving average of the window and returns the NumberStream\n     *\n     * @chainable\n     * @param {ValueOfCallback} [valueOf] value of method for array items\n     * @return {NumberStream}\n     */\n    avg(valueOf = (x) => +x) {\n        let cnt = 0;\n        return this.map(\n            arr => arr.reduce((a, x) => (cnt * a + valueOf(x)) / ++cnt, 0),\n            NumberStream\n        );\n    }\n}\n\nmodule.exports = WindowStream;\n"]},"metadata":{},"sourceType":"script"}