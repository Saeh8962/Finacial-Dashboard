{"ast":null,"code":"import _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { getPerformance } from \"../services/dataService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PerformancePanel() {\n  _s();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  React.useEffect(function () {\n    getPerformance().then(function (results) {\n      setData(results);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Performance Panel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PerformancePanel, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = PerformancePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformancePanel\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx"],"names":["React","getPerformance","PerformancePanel","useState","data","setData","useEffect","then","results"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAUA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,wBAAwBF,KAAK,CAACG,QAAN,EAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,YAAM;AACpBL,IAAAA,cAAc,GAAGM,IAAjB,CAAsB,UAACC,OAAD,EAAuB;AAC3CH,MAAAA,OAAO,CAACG,OAAD,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAXuBN,gB;;KAAAA,gB","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n} from \"@progress/kendo-react-charts\";\nimport { getPerformance } from \"../services/dataService\";\n\nexport default function PerformancePanel() {\n  const [data, setData] = React.useState<string[]>();\n  React.useEffect(() => {\n    getPerformance().then((results: string[]) => {\n      setData(results);\n    })\n  }, []);\n\n  return (\n    <h2>Performance Panel</h2>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}