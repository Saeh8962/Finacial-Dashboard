{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  function invokeTheCallbackFunction(event) {\n    if ((this instanceof invokeTheCallbackFunction ? this.constructor : void 0) !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    var thisArg = utils.tryWrapperForImpl(this);\n    var callResult;\n\n    if (typeof value === \"function\") {\n      event = utils.tryWrapperForImpl(event);\n      callResult = Reflect.apply(value, thisArg, [event]);\n    }\n\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = function (event) {\n    event = utils.tryWrapperForImpl(event);\n    var callResult = Reflect.construct(value, [event]);\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/generated/EventHandlerNonNull.js"],"names":["conversions","require","utils","exports","convert","value","context","invokeTheCallbackFunction","event","undefined","Error","thisArg","tryWrapperForImpl","callResult","Reflect","apply","construct","wrapperSymbol","objectReference"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEAE,OAAO,CAACC,OAAR,GAAkB,UAACC,KAAD,EAAoD;AAAA,iFAAP,EAAO;AAAA,0BAA1CC,OAA0C;AAAA,MAA1CA,OAA0C,6BAAhC,oBAAgC;;AACpE,WAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AACxC,QAAI,iBADGD,yBACH,kCAAeE,SAAnB,EAA8B;AAC5B,YAAM,IAAIC,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,QAAMC,OAAO,GAAGT,KAAK,CAACU,iBAAN,CAAwB,IAAxB,CAAhB;AACA,QAAIC,UAAJ;;AAEA,QAAI,OAAOR,KAAP,KAAiB,UAArB,EAAiC;AAC/BG,MAAAA,KAAK,GAAGN,KAAK,CAACU,iBAAN,CAAwBJ,KAAxB,CAAR;AAEAK,MAAAA,UAAU,GAAGC,OAAO,CAACC,KAAR,CAAcV,KAAd,EAAqBM,OAArB,EAA8B,CAACH,KAAD,CAA9B,CAAb;AACD;;AAEDK,IAAAA,UAAU,GAAGb,WAAW,CAAC,KAAD,CAAX,CAAmBa,UAAnB,EAA+B;AAAEP,MAAAA,OAAO,EAAEA;AAAX,KAA/B,CAAb;AAEA,WAAOO,UAAP;AACD;;AAEDN,EAAAA,yBAAyB,CAACS,SAA1B,GAAsC,UAAAR,KAAK,EAAI;AAC7CA,IAAAA,KAAK,GAAGN,KAAK,CAACU,iBAAN,CAAwBJ,KAAxB,CAAR;AAEA,QAAIK,UAAU,GAAGC,OAAO,CAACE,SAAR,CAAkBX,KAAlB,EAAyB,CAACG,KAAD,CAAzB,CAAjB;AAEAK,IAAAA,UAAU,GAAGb,WAAW,CAAC,KAAD,CAAX,CAAmBa,UAAnB,EAA+B;AAAEP,MAAAA,OAAO,EAAEA;AAAX,KAA/B,CAAb;AAEA,WAAOO,UAAP;AACD,GARD;;AAUAN,EAAAA,yBAAyB,CAACL,KAAK,CAACe,aAAP,CAAzB,GAAiDZ,KAAjD;AACAE,EAAAA,yBAAyB,CAACW,eAA1B,GAA4Cb,KAA5C;AAEA,SAAOE,yBAAP;AACD,CAlCD","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  function invokeTheCallbackFunction(event) {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    if (typeof value === \"function\") {\n      event = utils.tryWrapperForImpl(event);\n\n      callResult = Reflect.apply(value, thisArg, [event]);\n    }\n\n    callResult = conversions[\"any\"](callResult, { context: context });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = event => {\n    event = utils.tryWrapperForImpl(event);\n\n    let callResult = Reflect.construct(value, [event]);\n\n    callResult = conversions[\"any\"](callResult, { context: context });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"]},"metadata":{},"sourceType":"script"}