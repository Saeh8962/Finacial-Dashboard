{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require = require(\"../helpers/traversal\"),\n    childrenByLocalName = _require.childrenByLocalName;\n\nvar HTMLCollection = require(\"../generated/HTMLCollection\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar HTMLTableSectionElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLTableSectionElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLTableSectionElementImpl);\n\n  function HTMLTableSectionElementImpl() {\n    _classCallCheck(this, HTMLTableSectionElementImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLTableSectionElementImpl, [{\n    key: \"rows\",\n    get: function get() {\n      var _this = this;\n\n      if (!this._rows) {\n        this._rows = HTMLCollection.createImpl(this._globalObject, [], {\n          element: this,\n          query: function query() {\n            return childrenByLocalName(_this, \"tr\");\n          }\n        });\n      }\n\n      return this._rows;\n    }\n  }, {\n    key: \"insertRow\",\n    value: function insertRow(index) {\n      if (index < -1 || index > this.rows.length) {\n        throw DOMException.create(this._globalObject, [\"Cannot insert a row at an index that is less than -1 or greater than the number of existing rows\", \"IndexSizeError\"]);\n      }\n\n      var tr = this._ownerDocument.createElement(\"tr\");\n\n      if (index === -1 || index === this.rows.length) {\n        this._append(tr);\n      } else {\n        var beforeTR = this.rows.item(index);\n\n        this._insert(tr, beforeTR);\n      }\n\n      return tr;\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(index) {\n      if (index < -1 || index >= this.rows.length) {\n        throw DOMException.create(this._globalObject, [\"Cannot delete a row at index \".concat(index, \", where no row exists\"), \"IndexSizeError\"]);\n      }\n\n      if (index === -1) {\n        if (this.rows.length > 0) {\n          var tr = this.rows.item(this.rows.length - 1);\n\n          this._remove(tr);\n        }\n      } else {\n        var _tr = this.rows.item(index);\n\n        this._remove(_tr);\n      }\n    }\n  }]);\n\n  return HTMLTableSectionElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement-impl.js"],"names":["HTMLElementImpl","require","implementation","childrenByLocalName","HTMLCollection","DOMException","HTMLTableSectionElementImpl","_rows","createImpl","_globalObject","element","query","index","rows","length","create","tr","_ownerDocument","createElement","_append","beforeTR","item","_insert","_remove","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,eAAgCD,OAAO,CAAC,sBAAD,CAAvC;AAAA,IAAQE,mBAAR,YAAQA,mBAAR;;AACA,IAAMC,cAAc,GAAGH,OAAO,CAAC,6BAAD,CAA9B;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,gCAAD,CAA5B;;IAEMK,2B;;;;;;;;;;;;;SACJ,eAAW;AAAA;;AACT,UAAI,CAAC,KAAKC,KAAV,EAAiB;AACf,aAAKA,KAAL,GAAaH,cAAc,CAACI,UAAf,CAA0B,KAAKC,aAA/B,EAA8C,EAA9C,EAAkD;AAC7DC,UAAAA,OAAO,EAAE,IADoD;AAE7DC,UAAAA,KAAK,EAAE;AAAA,mBAAMR,mBAAmB,CAAC,KAAD,EAAO,IAAP,CAAzB;AAAA;AAFsD,SAAlD,CAAb;AAID;;AACD,aAAO,KAAKI,KAAZ;AACD;;;WAED,mBAAUK,KAAV,EAAiB;AACf,UAAIA,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,GAAG,KAAKC,IAAL,CAAUC,MAApC,EAA4C;AAC1C,cAAMT,YAAY,CAACU,MAAb,CAAoB,KAAKN,aAAzB,EAAwC,CAC5C,kGAD4C,EAE5C,gBAF4C,CAAxC,CAAN;AAID;;AAED,UAAMO,EAAE,GAAG,KAAKC,cAAL,CAAoBC,aAApB,CAAkC,IAAlC,CAAX;;AAEA,UAAIN,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAK,KAAKC,IAAL,CAAUC,MAAxC,EAAgD;AAC9C,aAAKK,OAAL,CAAaH,EAAb;AACD,OAFD,MAEO;AACL,YAAMI,QAAQ,GAAG,KAAKP,IAAL,CAAUQ,IAAV,CAAeT,KAAf,CAAjB;;AACA,aAAKU,OAAL,CAAaN,EAAb,EAAiBI,QAAjB;AACD;;AAED,aAAOJ,EAAP;AACD;;;WAED,mBAAUJ,KAAV,EAAiB;AACf,UAAIA,KAAK,GAAG,CAAC,CAAT,IAAcA,KAAK,IAAI,KAAKC,IAAL,CAAUC,MAArC,EAA6C;AAC3C,cAAMT,YAAY,CAACU,MAAb,CAAoB,KAAKN,aAAzB,EAAwC,wCACZG,KADY,4BAE5C,gBAF4C,CAAxC,CAAN;AAID;;AAED,UAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,YAAI,KAAKC,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAME,EAAE,GAAG,KAAKH,IAAL,CAAUQ,IAAV,CAAe,KAAKR,IAAL,CAAUC,MAAV,GAAmB,CAAlC,CAAX;;AACA,eAAKS,OAAL,CAAaP,EAAb;AACD;AACF,OALD,MAKO;AACL,YAAMA,GAAE,GAAG,KAAKH,IAAL,CAAUQ,IAAV,CAAeT,KAAf,CAAX;;AACA,aAAKW,OAAL,CAAaP,GAAb;AACD;AACF;;;;EAhDuChB,e;;AAmD1CwB,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { childrenByLocalName } = require(\"../helpers/traversal\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nclass HTMLTableSectionElementImpl extends HTMLElementImpl {\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => childrenByLocalName(this, \"tr\")\n      });\n    }\n    return this._rows;\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw DOMException.create(this._globalObject, [\n        \"Cannot insert a row at an index that is less than -1 or greater than the number of existing rows\",\n        \"IndexSizeError\"\n      ]);\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (index === -1 || index === this.rows.length) {\n      this._append(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      this._insert(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    if (index < -1 || index >= this.rows.length) {\n      throw DOMException.create(this._globalObject, [\n        `Cannot delete a row at index ${index}, where no row exists`,\n        \"IndexSizeError\"\n      ]);\n    }\n\n    if (index === -1) {\n      if (this.rows.length > 0) {\n        const tr = this.rows.item(this.rows.length - 1);\n        this._remove(tr);\n      }\n    } else {\n      const tr = this.rows.item(index);\n      this._remove(tr);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}