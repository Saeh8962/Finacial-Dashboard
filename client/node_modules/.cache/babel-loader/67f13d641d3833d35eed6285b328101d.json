{"ast":null,"code":"import _objectSpread from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/samehrlich/Desktop/final-app/client/src/panels/AddAlert.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultIdentifier = {\n  productName: \"Select Metric ...\"\n};\nvar defaultWatch = {\n  orderName: \"Select Movment ...\"\n};\nexport default function AddAlert() {\n  _s();\n\n  var _React$useState = React.useState({\n    identifier: null,\n    movement: [\"\"]\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var identifierChange = function identifierChange(event) {\n    var identifier = event.target.value;\n\n    if (identifier === 'Price') {\n      var movements = ['Above', 'Below'];\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        identifier: identifier,\n        movement: movements\n      }));\n    } else {\n      var _movements = ['Up', 'Down'];\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        identifier: identifier,\n        movement: _movements\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"FormFields\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormField\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(DropDownList, {\n            label: \"$ %\",\n            data: [\"Price\", \"% Change\"] //   textfield={\"Price or % Change\"}\n            ,\n            onChange: identifierChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(DropDownList, {\n            label: \"Watch\",\n            data: state.movement //   textfield=\"Price or % Change\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-3\",\n          children: /*#__PURE__*/_jsxDEV(NumericTextBox, {\n            defaultValue: 0,\n            step: .5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddAlert, \"VNZYuwFaggvrsJIENqm3msLcazM=\");\n\n_c = AddAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAlert\");","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/client/src/panels/AddAlert.tsx"],"names":["React","NumericTextBox","DropDownList","defaultIdentifier","productName","defaultWatch","orderName","AddAlert","useState","identifier","movement","state","setState","identifierChange","event","target","value","movements"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,WAAW,EAAE;AADS,CAA1B;AAGE,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,wBAAwBP,KAAK,CAACQ,QAAN,CAAe;AACnCC,IAAAA,UAAU,EAAC,IADwB;AAEnCC,IAAAA,QAAQ,EAAE,CAAC,EAAD;AAFyB,GAAf,CAAxB;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAaC,QAAb;;AAKA,MAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB,CAACC,KAAD,EAAc;AACjC,QAAML,UAAU,GAAGK,KAAK,CAACC,MAAN,CAAaC,KAAhC;;AACA,QAAGP,UAAU,KAAG,OAAhB,EAAwB;AACtB,UAAMQ,SAAS,GAAE,CAAC,OAAD,EAAS,OAAT,CAAjB;AACAL,MAAAA,QAAQ,iCACDD,KADC;AAEJF,QAAAA,UAAU,EAACA,UAFP;AAGJC,QAAAA,QAAQ,EAAEO;AAHN,SAAR;AAKD,KAPD,MAQI;AACA,UAAMA,UAAS,GAAC,CAAC,IAAD,EAAM,MAAN,CAAhB;AACAL,MAAAA,QAAQ,iCACHD,KADG;AAENF,QAAAA,UAAU,EAACA,UAFL;AAGNC,QAAAA,QAAQ,EAAEO;AAHJ,SAAR;AAKH;AAGJ,GApBD;;AAqBA,sBACE;AAAM,IAAA,SAAS,EAAE,YAAjB;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,YAAD;AACA,YAAA,KAAK,EAAG,KADR;AAEA,YAAA,IAAI,EAAE,CAAC,OAAD,EAAS,UAAT,CAFN,CAGF;AAHE;AAIA,YAAA,QAAQ,EAAGJ;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAA,iCACE,QAAC,YAAD;AACA,YAAA,KAAK,EAAG,OADR;AAEA,YAAA,IAAI,EAAEF,KAAK,CAACD,QAFZ,CAGF;;AAHE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBE;AAAK,UAAA,SAAS,EAAE,KAAhB;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,YAAY,EAAE,CAA9B;AAAiC,YAAA,IAAI,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH;;GAvDuBH,Q;;KAAAA,Q","sourcesContent":["import { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\nimport React from \"react\";\nimport { MultiColumnComboBox } from \"@progress/kendo-react-dropdowns\";\nimport { Alerts } from \"../data/models\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nconst defaultIdentifier = {\n    productName: \"Select Metric ...\",\n  };\n  const defaultWatch = {\n    orderName: \"Select Movment ...\",\n  };\n\n  export default function AddAlert(){\n      const [state,setState]= React.useState({ \n          identifier:null,\n          movement: [\"\"],\n      })\n\n      const identifierChange=(event: any)=>{\n          const identifier = event.target.value;\n          if(identifier==='Price'){\n            const movements= ['Above','Below']\n            setState({\n                ...state,\n                identifier:identifier,\n                movement: movements\n            })\n          }\n          else{\n              const movements=['Up','Down']\n              setState({\n                ...state,\n                identifier:identifier,\n                movement: movements\n            })\n          }\n          \n          \n      }\n      return(\n        <form className= \"FormFields\">\n        <div className=\"FormField\">\n            \n          <div className=\"row\">\n            <div className=\"m-3\">\n              <DropDownList \n              label = \"$ %\"\n              data={[\"Price\",\"% Change\"]}\n            //   textfield={\"Price or % Change\"}\n              onChange= {identifierChange}\n              />\n            </div>\n            <div className= \"m-3\">\n              <DropDownList \n              label = \"Watch\"\n              data={state.movement}\n            //   textfield=\"Price or % Change\"\n              />\n            </div>\n            <div className= \"m-3\">\n              <NumericTextBox defaultValue={0} step={.5} />\n            </div>\n          </div>\n        </div>\n        {/* <Button  className= \"ButtonNoRight\" onClick={(e)=>handleNewAlert(e)}>Save Alert</Button> */}\n      </form>\n      )\n  }"]},"metadata":{},"sourceType":"module"}