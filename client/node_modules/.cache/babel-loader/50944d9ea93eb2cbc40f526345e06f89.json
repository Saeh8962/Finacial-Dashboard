{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/samehrlich/Desktop/final-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar http = require(\"http\");\n\nvar https = require(\"https\");\n\nvar _require = require(\"stream\"),\n    Writable = _require.Writable;\n\nvar zlib = require(\"zlib\");\n\nvar ver = process.version.replace(\"v\", \"\").split(\".\");\nvar majorNodeVersion = Number.parseInt(ver[0]);\n\nfunction abortRequest(clientRequest) {\n  // clientRequest.destroy breaks the test suite for versions 10 and 12,\n  // hence the version check\n  if (majorNodeVersion > 13) {\n    clientRequest.destroy();\n  } else {\n    clientRequest.abort();\n  }\n\n  clientRequest.removeAllListeners();\n  clientRequest.on(\"error\", function () {});\n}\n\nmodule.exports = /*#__PURE__*/function (_Writable) {\n  _inherits(Request, _Writable);\n\n  var _super = _createSuper(Request);\n\n  function Request(url, clientOptions, requestOptions) {\n    var _this;\n\n    _classCallCheck(this, Request);\n\n    _this = _super.call(this);\n    Object.assign(_assertThisInitialized(_this), clientOptions);\n    _this.currentURL = url;\n    _this._requestOptions = requestOptions;\n    _this.headers = requestOptions.headers;\n    _this._ended = false;\n    _this._redirectCount = 0;\n    _this._requestBodyBuffers = [];\n    _this._bufferIndex = 0;\n\n    _this._performRequest();\n\n    return _this;\n  }\n\n  _createClass(Request, [{\n    key: \"abort\",\n    value: function abort() {\n      abortRequest(this._currentRequest);\n      this.emit(\"abort\");\n      this.removeAllListeners();\n    }\n  }, {\n    key: \"pipeRequest\",\n    value: function pipeRequest(form) {\n      form.pipe(this._currentRequest);\n    }\n  }, {\n    key: \"write\",\n    value: function write(data, encoding) {\n      if (data.length > 0) {\n        this._requestBodyBuffers.push({\n          data: data,\n          encoding: encoding\n        });\n\n        this._currentRequest.write(data, encoding);\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.emit(\"request\", this._currentRequest);\n      this._ended = true;\n\n      this._currentRequest.end();\n    }\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(name, value) {\n      this.headers[name] = value;\n\n      this._currentRequest.setHeader(name, value);\n    }\n  }, {\n    key: \"removeHeader\",\n    value: function removeHeader(name) {\n      delete this.headers[name];\n\n      this._currentRequest.removeHeader(name);\n    } // Without this method, the test send-redirect-infinite-sync will halt the test suite\n    // TODO: investigate this further and ideally remove\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this$_requestOptions = this._requestOptions,\n          method = _this$_requestOptions.method,\n          headers = _this$_requestOptions.headers;\n      return {\n        uri: new URL(this.currentURL),\n        method: method,\n        headers: headers\n      };\n    }\n  }, {\n    key: \"_writeNext\",\n    value: function _writeNext(error) {\n      if (this._currentRequest) {\n        if (error) {\n          this.emit(\"error\", error);\n        } else if (this._bufferIndex < this._requestBodyBuffers.length) {\n          var buffer = this._requestBodyBuffers[this._bufferIndex++];\n\n          if (!this._currentRequest.writableEnded) {\n            this._currentRequest.write(buffer.data, buffer.encoding, this._writeNext.bind(this));\n          }\n        } else if (this._ended) {\n          this._currentRequest.end();\n        }\n      }\n    }\n  }, {\n    key: \"_performRequest\",\n    value: function _performRequest() {\n      var _this2 = this;\n\n      var urlOptions = new URL(this.currentURL);\n      var scheme = urlOptions.protocol;\n      this._requestOptions.agent = this.agents[scheme.substring(0, scheme.length - 1)];\n\n      var _ref = scheme === \"https:\" ? https : http,\n          request = _ref.request;\n\n      this._currentRequest = request(this.currentURL, this._requestOptions, function (response) {\n        _this2._processResponse(response);\n      });\n      var cookies;\n\n      if (this._redirectCount === 0) {\n        this.originalCookieHeader = this.getHeader(\"Cookie\");\n      }\n\n      if (this.cookieJar) {\n        cookies = this.cookieJar.getCookieStringSync(this.currentURL);\n      }\n\n      if (cookies && cookies.length) {\n        if (this.originalCookieHeader) {\n          this.setHeader(\"Cookie\", this.originalCookieHeader + \"; \" + cookies);\n        } else {\n          this.setHeader(\"Cookie\", cookies);\n        }\n      }\n\n      var _loop = function _loop() {\n        var event = _arr[_i];\n\n        _this2._currentRequest.on(event, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n      };\n\n      for (var _i = 0, _arr = [\"connect\", \"error\", \"socket\", \"timeout\"]; _i < _arr.length; _i++) {\n        _loop();\n      }\n\n      if (this._isRedirect) {\n        this._bufferIndex = 0;\n\n        this._writeNext();\n      }\n    }\n  }, {\n    key: \"_processResponse\",\n    value: function _processResponse(response) {\n      var _this3 = this;\n\n      var cookies = response.headers[\"set-cookie\"];\n\n      if (this.cookieJar && Array.isArray(cookies)) {\n        try {\n          cookies.forEach(function (cookie) {\n            _this3.cookieJar.setCookieSync(cookie, _this3.currentURL, {\n              ignoreError: true\n            });\n          });\n        } catch (e) {\n          this.emit(\"error\", e);\n        }\n      }\n\n      var statusCode = response.statusCode;\n      var location = response.headers.location; // In Node v15, aborting a message with remaining data causes an error to be thrown,\n      // hence the version check\n\n      var catchResErrors = function catchResErrors(err) {\n        if (!(majorNodeVersion >= 15 && err.message === \"aborted\")) {\n          _this3.emit(\"error\", err);\n        }\n      };\n\n      response.on(\"error\", catchResErrors);\n      var redirectAddress = null;\n      var resendWithAuth = false;\n\n      if (typeof location === \"string\" && location.length && this.followRedirects && statusCode >= 300 && statusCode < 400) {\n        redirectAddress = location;\n      } else if (statusCode === 401 && /^Basic /i.test(response.headers[\"www-authenticate\"] || \"\") && this.user && this.user.length) {\n        this._requestOptions.auth = \"\".concat(this.user, \":\").concat(this.pass);\n        resendWithAuth = true;\n      }\n\n      if (redirectAddress || resendWithAuth) {\n        if (++this._redirectCount > 21) {\n          var redirectError = new Error(\"Maximum number of redirects exceeded\");\n          redirectError.code = \"ERR_TOO_MANY_REDIRECTS\";\n          this.emit(\"error\", redirectError);\n          return;\n        }\n\n        abortRequest(this._currentRequest);\n        response.destroy();\n        this._isRedirect = true;\n\n        if ((statusCode === 301 || statusCode === 302) && this._requestOptions.method === \"POST\" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._requestOptions.method)) {\n          this._requestOptions.method = \"GET\";\n          this._requestBodyBuffers = [];\n        }\n\n        var previousHostName = this._removeMatchingHeaders(/^host$/i);\n\n        if (!previousHostName) {\n          previousHostName = new URL(this.currentURL).hostname;\n        }\n\n        var previousURL = this.currentURL;\n\n        if (!resendWithAuth) {\n          var nextURL = redirectAddress.startsWith(\"https:\") ? new URL(redirectAddress) : new URL(redirectAddress, this.currentURL);\n\n          if (nextURL.hostname !== previousHostName) {\n            this._removeMatchingHeaders(/^authorization$/i);\n          }\n\n          this.currentURL = nextURL.toString();\n        }\n\n        this.headers.Referer = previousURL;\n        this.emit(\"redirect\", response, this.headers, this.currentURL);\n\n        try {\n          this._performRequest();\n        } catch (cause) {\n          this.emit(\"error\", cause);\n        }\n      } else {\n        var pipeline = response;\n        var acceptEncoding = this.headers[\"Accept-Encoding\"];\n        var requestCompressed = typeof acceptEncoding === \"string\" && (acceptEncoding.includes(\"gzip\") || acceptEncoding.includes(\"deflate\"));\n\n        if (requestCompressed && this._requestOptions.method !== \"HEAD\" && statusCode >= 200 && statusCode !== 204 && statusCode !== 304) {\n          var zlibOptions = {\n            flush: zlib.constants.Z_SYNC_FLUSH,\n            finishFlush: zlib.constants.Z_SYNC_FLUSH\n          };\n          var contentEncoding = (response.headers[\"content-encoding\"] || \"identity\").trim().toLowerCase();\n\n          if (contentEncoding === \"gzip\") {\n            pipeline = zlib.createGunzip(zlibOptions);\n            response.pipe(pipeline);\n          } else if (contentEncoding === \"deflate\") {\n            pipeline = zlib.createInflate(zlibOptions);\n            response.pipe(pipeline);\n          }\n        }\n\n        pipeline.removeAllListeners(\"error\");\n        this.emit(\"response\", response, this.currentURL);\n        pipeline.on(\"data\", function (bytes) {\n          return _this3.emit(\"data\", bytes);\n        });\n        pipeline.once(\"end\", function (bytes) {\n          return _this3.emit(\"end\", bytes);\n        });\n        pipeline.on(\"error\", catchResErrors);\n        pipeline.on(\"close\", function () {\n          return _this3.emit(\"close\");\n        });\n        this._requestBodyBuffers = [];\n      }\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader(key, value) {\n      if (this._currentRequest) {\n        return this._currentRequest.getHeader(key, value);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_removeMatchingHeaders\",\n    value: function _removeMatchingHeaders(regex) {\n      var lastValue;\n\n      for (var header in this.headers) {\n        if (regex.test(header)) {\n          lastValue = this.headers[header];\n          delete this.headers[header];\n        }\n      }\n\n      return lastValue;\n    }\n  }]);\n\n  return Request;\n}(Writable);","map":{"version":3,"sources":["/Users/samehrlich/Desktop/final-app/node_modules/jsdom/lib/jsdom/living/helpers/http-request.js"],"names":["http","require","https","Writable","zlib","ver","process","version","replace","split","majorNodeVersion","Number","parseInt","abortRequest","clientRequest","destroy","abort","removeAllListeners","on","module","exports","url","clientOptions","requestOptions","Object","assign","currentURL","_requestOptions","headers","_ended","_redirectCount","_requestBodyBuffers","_bufferIndex","_performRequest","_currentRequest","emit","form","pipe","data","encoding","length","push","write","end","name","value","setHeader","removeHeader","method","uri","URL","error","buffer","writableEnded","_writeNext","bind","urlOptions","scheme","protocol","agent","agents","substring","request","response","_processResponse","cookies","originalCookieHeader","getHeader","cookieJar","getCookieStringSync","event","args","_isRedirect","Array","isArray","forEach","cookie","setCookieSync","ignoreError","e","statusCode","location","catchResErrors","err","message","redirectAddress","resendWithAuth","followRedirects","test","user","auth","pass","redirectError","Error","code","previousHostName","_removeMatchingHeaders","hostname","previousURL","nextURL","startsWith","toString","Referer","cause","pipeline","acceptEncoding","requestCompressed","includes","zlibOptions","flush","constants","Z_SYNC_FLUSH","finishFlush","contentEncoding","trim","toLowerCase","createGunzip","createInflate","bytes","once","key","regex","lastValue","header"],"mappings":"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","sourcesContent":["\"use strict\";\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst { Writable } = require(\"stream\");\nconst zlib = require(\"zlib\");\n\nconst ver = process.version.replace(\"v\", \"\").split(\".\");\nconst majorNodeVersion = Number.parseInt(ver[0]);\n\nfunction abortRequest(clientRequest) {\n  // clientRequest.destroy breaks the test suite for versions 10 and 12,\n  // hence the version check\n  if (majorNodeVersion > 13) {\n    clientRequest.destroy();\n  } else {\n    clientRequest.abort();\n  }\n  clientRequest.removeAllListeners();\n  clientRequest.on(\"error\", () => {});\n}\n\nmodule.exports = class Request extends Writable {\n  constructor(url, clientOptions, requestOptions) {\n    super();\n    Object.assign(this, clientOptions);\n    this.currentURL = url;\n    this._requestOptions = requestOptions;\n    this.headers = requestOptions.headers;\n    this._ended = false;\n    this._redirectCount = 0;\n    this._requestBodyBuffers = [];\n    this._bufferIndex = 0;\n    this._performRequest();\n  }\n\n  abort() {\n    abortRequest(this._currentRequest);\n    this.emit(\"abort\");\n    this.removeAllListeners();\n  }\n\n  pipeRequest(form) {\n    form.pipe(this._currentRequest);\n  }\n\n  write(data, encoding) {\n    if (data.length > 0) {\n      this._requestBodyBuffers.push({ data, encoding });\n      this._currentRequest.write(data, encoding);\n    }\n  }\n\n  end() {\n    this.emit(\"request\", this._currentRequest);\n    this._ended = true;\n    this._currentRequest.end();\n  }\n\n  setHeader(name, value) {\n    this.headers[name] = value;\n    this._currentRequest.setHeader(name, value);\n  }\n\n  removeHeader(name) {\n    delete this.headers[name];\n    this._currentRequest.removeHeader(name);\n  }\n\n  // Without this method, the test send-redirect-infinite-sync will halt the test suite\n  // TODO: investigate this further and ideally remove\n  toJSON() {\n    const { method, headers } = this._requestOptions;\n    return { uri: new URL(this.currentURL), method, headers };\n  }\n\n  _writeNext(error) {\n    if (this._currentRequest) {\n      if (error) {\n        this.emit(\"error\", error);\n      } else if (this._bufferIndex < this._requestBodyBuffers.length) {\n        const buffer = this._requestBodyBuffers[this._bufferIndex++];\n        if (!this._currentRequest.writableEnded) {\n          this._currentRequest.write(\n            buffer.data,\n            buffer.encoding,\n            this._writeNext.bind(this)\n          );\n        }\n      } else if (this._ended) {\n        this._currentRequest.end();\n      }\n    }\n  }\n\n  _performRequest() {\n    const urlOptions = new URL(this.currentURL);\n    const scheme = urlOptions.protocol;\n    this._requestOptions.agent = this.agents[scheme.substring(0, scheme.length - 1)];\n    const { request } = scheme === \"https:\" ? https : http;\n    this._currentRequest = request(this.currentURL, this._requestOptions, response => {\n      this._processResponse(response);\n    });\n\n    let cookies;\n    if (this._redirectCount === 0) {\n      this.originalCookieHeader = this.getHeader(\"Cookie\");\n    }\n    if (this.cookieJar) {\n      cookies = this.cookieJar.getCookieStringSync(this.currentURL);\n    }\n    if (cookies && cookies.length) {\n      if (this.originalCookieHeader) {\n        this.setHeader(\"Cookie\", this.originalCookieHeader + \"; \" + cookies);\n      } else {\n        this.setHeader(\"Cookie\", cookies);\n      }\n    }\n\n    for (const event of [\"connect\", \"error\", \"socket\", \"timeout\"]) {\n      this._currentRequest.on(event, (...args) => {\n        this.emit(event, ...args);\n      });\n    }\n    if (this._isRedirect) {\n      this._bufferIndex = 0;\n      this._writeNext();\n    }\n  }\n\n  _processResponse(response) {\n    const cookies = response.headers[\"set-cookie\"];\n    if (this.cookieJar && Array.isArray(cookies)) {\n      try {\n        cookies.forEach(cookie => {\n          this.cookieJar.setCookieSync(cookie, this.currentURL, { ignoreError: true });\n        });\n      } catch (e) {\n        this.emit(\"error\", e);\n      }\n    }\n\n    const { statusCode } = response;\n    const { location } = response.headers;\n    // In Node v15, aborting a message with remaining data causes an error to be thrown,\n    // hence the version check\n    const catchResErrors = err => {\n      if (!(majorNodeVersion >= 15 && err.message === \"aborted\")) {\n        this.emit(\"error\", err);\n      }\n    };\n    response.on(\"error\", catchResErrors);\n    let redirectAddress = null;\n    let resendWithAuth = false;\n    if (typeof location === \"string\" &&\n      location.length &&\n      this.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400) {\n      redirectAddress = location;\n    } else if (statusCode === 401 &&\n      /^Basic /i.test(response.headers[\"www-authenticate\"] || \"\") &&\n      (this.user && this.user.length)) {\n      this._requestOptions.auth = `${this.user}:${this.pass}`;\n      resendWithAuth = true;\n    }\n    if (redirectAddress || resendWithAuth) {\n      if (++this._redirectCount > 21) {\n        const redirectError = new Error(\"Maximum number of redirects exceeded\");\n        redirectError.code = \"ERR_TOO_MANY_REDIRECTS\";\n        this.emit(\"error\", redirectError);\n        return;\n      }\n      abortRequest(this._currentRequest);\n      response.destroy();\n      this._isRedirect = true;\n      if (((statusCode === 301 || statusCode === 302) && this._requestOptions.method === \"POST\") ||\n        (statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._requestOptions.method))) {\n        this._requestOptions.method = \"GET\";\n        this._requestBodyBuffers = [];\n      }\n      let previousHostName = this._removeMatchingHeaders(/^host$/i);\n      if (!previousHostName) {\n        previousHostName = new URL(this.currentURL).hostname;\n      }\n      const previousURL = this.currentURL;\n      if (!resendWithAuth) {\n        const nextURL = redirectAddress.startsWith(\"https:\") ?\n          new URL(redirectAddress) :\n          new URL(redirectAddress, this.currentURL);\n        if (nextURL.hostname !== previousHostName) {\n          this._removeMatchingHeaders(/^authorization$/i);\n        }\n        this.currentURL = nextURL.toString();\n      }\n      this.headers.Referer = previousURL;\n      this.emit(\"redirect\", response, this.headers, this.currentURL);\n      try {\n        this._performRequest();\n      } catch (cause) {\n        this.emit(\"error\", cause);\n      }\n    } else {\n      let pipeline = response;\n      const acceptEncoding = this.headers[\"Accept-Encoding\"];\n      const requestCompressed = typeof acceptEncoding === \"string\" &&\n        (acceptEncoding.includes(\"gzip\") || acceptEncoding.includes(\"deflate\"));\n      if (\n        requestCompressed &&\n        this._requestOptions.method !== \"HEAD\" &&\n        statusCode >= 200 &&\n        statusCode !== 204 &&\n        statusCode !== 304\n      ) {\n        const zlibOptions = {\n          flush: zlib.constants.Z_SYNC_FLUSH,\n          finishFlush: zlib.constants.Z_SYNC_FLUSH\n        };\n        const contentEncoding = (response.headers[\"content-encoding\"] || \"identity\").trim().toLowerCase();\n        if (contentEncoding === \"gzip\") {\n          pipeline = zlib.createGunzip(zlibOptions);\n          response.pipe(pipeline);\n        } else if (contentEncoding === \"deflate\") {\n          pipeline = zlib.createInflate(zlibOptions);\n          response.pipe(pipeline);\n        }\n      }\n      pipeline.removeAllListeners(\"error\");\n      this.emit(\"response\", response, this.currentURL);\n      pipeline.on(\"data\", bytes => this.emit(\"data\", bytes));\n      pipeline.once(\"end\", bytes => this.emit(\"end\", bytes));\n      pipeline.on(\"error\", catchResErrors);\n      pipeline.on(\"close\", () => this.emit(\"close\"));\n      this._requestBodyBuffers = [];\n    }\n  }\n\n  getHeader(key, value) {\n    if (this._currentRequest) {\n      return this._currentRequest.getHeader(key, value);\n    }\n    return null;\n  }\n\n  _removeMatchingHeaders(regex) {\n    let lastValue;\n    for (const header in this.headers) {\n      if (regex.test(header)) {\n        lastValue = this.headers[header];\n        delete this.headers[header];\n      }\n    }\n    return lastValue;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}