[{"/Users/samehrlich/Desktop/final-app/client/src/index.js":"1","/Users/samehrlich/Desktop/final-app/client/src/login.js":"2","/Users/samehrlich/Desktop/final-app/client/src/profile.js":"3","/Users/samehrlich/Desktop/final-app/client/src/error.js":"4","/Users/samehrlich/Desktop/final-app/client/src/signUp.js":"5","/Users/samehrlich/Desktop/final-app/client/src/App.js":"6","/Users/samehrlich/Desktop/final-app/client/src/home.js":"7","/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx":"8","/Users/samehrlich/Desktop/final-app/client/src/Dashboard.tsx":"9","/Users/samehrlich/Desktop/final-app/client/src/layout/DrawerContainer.tsx":"10","/Users/samehrlich/Desktop/final-app/client/src/panels/AllocationPanel.tsx":"11","/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx":"12","/Users/samehrlich/Desktop/final-app/client/src/services/dataService.ts":"13","/Users/samehrlich/Desktop/final-app/client/src/data/allocation.js":"14","/Users/samehrlich/Desktop/final-app/client/src/data/info.js":"15","/Users/samehrlich/Desktop/final-app/client/src/data/positions.js":"16","/Users/samehrlich/Desktop/final-app/client/src/data/performance.js":"17","/Users/samehrlich/Desktop/final-app/client/src/components/searchbar.jsx":"18","/Users/samehrlich/Desktop/final-app/client/src/panels/PositionsPanel.tsx":"19","/Users/samehrlich/Desktop/final-app/client/src/components/mycommand.jsx":"20","/Users/samehrlich/Desktop/final-app/client/src/data/models.tsx":"21","/Users/samehrlich/Desktop/final-app/client/src/panels/UserAlert.tsx":"22","/Users/samehrlich/Desktop/final-app/client/src/panels/AddAlert.tsx":"23","/Users/samehrlich/Desktop/final-app/client/src/components/email.js":"24","/Users/samehrlich/Desktop/final-app/client/src/panels/service.js":"25"},{"size":891,"mtime":1625513369245,"results":"26","hashOfConfig":"27"},{"size":5186,"mtime":1626456961535,"results":"28","hashOfConfig":"27"},{"size":7655,"mtime":1627757853409,"results":"29","hashOfConfig":"27"},{"size":732,"mtime":1624552661198,"results":"30","hashOfConfig":"27"},{"size":5017,"mtime":1625782958637,"results":"31","hashOfConfig":"27"},{"size":342,"mtime":1625498042294,"results":"32","hashOfConfig":"27"},{"size":1342,"mtime":1624552661198,"results":"33","hashOfConfig":"27"},{"size":25178,"mtime":1627658824116,"results":"34","hashOfConfig":"27"},{"size":742,"mtime":1625518344511,"results":"35","hashOfConfig":"27"},{"size":2152,"mtime":1625771705741,"results":"36","hashOfConfig":"27"},{"size":5803,"mtime":1626723077846,"results":"37","hashOfConfig":"27"},{"size":7127,"mtime":1627781918332,"results":"38","hashOfConfig":"27"},{"size":1638,"mtime":1625771575135,"results":"39","hashOfConfig":"27"},{"size":193,"mtime":1625502165313,"results":"40","hashOfConfig":"27"},{"size":3633,"mtime":1625502165314,"results":"41","hashOfConfig":"27"},{"size":15738,"mtime":1625502165316,"results":"42","hashOfConfig":"27"},{"size":94,"mtime":1625502165315,"results":"43","hashOfConfig":"27"},{"size":7567,"mtime":1626644997933,"results":"44","hashOfConfig":"27"},{"size":510,"mtime":1625538784191,"results":"45","hashOfConfig":"27"},{"size":347,"mtime":1625528196285,"results":"46","hashOfConfig":"27"},{"size":1048,"mtime":1625769583000,"results":"47","hashOfConfig":"27"},{"size":9797,"mtime":1627658739672,"results":"48","hashOfConfig":"27"},{"size":2218,"mtime":1626044167166,"results":"49","hashOfConfig":"27"},{"size":1663,"mtime":1626456591047,"results":"50","hashOfConfig":"27"},{"size":2200,"mtime":1626882179336,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"snigy9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"54"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samehrlich/Desktop/final-app/client/src/index.js",[],["124","125"],"/Users/samehrlich/Desktop/final-app/client/src/login.js",["126","127","128","129"],"import React,{Component} from \"react\";\nimport {Button} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\";\n// import { queryResult } from \"pg-promise\";\n\nconst bcrypt = require('bcrypt-nodejs/bCrypt');\n\nclass Login extends Component{\n \n    constructor(props){\n        super(props);\n        this.handlePassword=this.handlePassword.bind(this);\n        this.handleEmail=this.handleEmail.bind(this);\n        this.routeChange=this.routeChange.bind(this);\n        this.test=this.test.bind(this);\n        this.verify=this.verify.bind(this); \n        this.state={ \n            password:\"\",  \n            email:\"\",\n            login_toggle : false\n        }\n    }\n\n    handleEmail(event){\n    this.setState({email:event.target.value});\n    }\n\n    handlePassword(event){\n        this.setState({password:event.target.value});\n    }\n\n    // Handle to new Brower path\n    routeChange(value){\n        if (value.target.id==\"Back\"){\n            this.props.history.push(\"/\",this.props.history.location.state);\n      }\n        else if(value.target.id==\"Home\"){\n          this.props.history.push(\"/home\",this.props.history.location.state);\n        }\n    }\n\n    \n    test(){\n        //confirm the email exist\n        if(this.state.email!=null){\n           var user={\n            email:this.state.email,\n           } \n        \n            var url=\"/api/loginVerification\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                if(res.status===500){\n                    res.json()\n                    .then((json)=>{\n                        const {message,stackTrace}=json;\n                      })\n                      .catch((error)=>{\n                        return Promise.reject(error);\n                      });\n                    }\n                    else{\n                      return res.json();\n                    }\n                  })\n            .then(query_result=>{\n                console.log(query_result);\n                this.setState({query:query_result} )\n                this.verify();\n            });\n\n        }\n        else{\n            alert(\"Invalid Email or Password\");\n        }\n    }\n\n    // Verify the email and password \n    verify(){\n        console.log(\"Verify\");\n        \n        if(this.state.query === \"No User By That Email\"){\n            alert(\"Invalid Email\");\n        }\n        //query error\n        else if (this.state.query==null){\n            console.log('err line 95');\n        //invalid email\n            return -1;\n            // this.props.history.push(\"/error\");\n        }\n        //verify password\n        else{\n            var email = this.state.query.email\n            var secured = this.state.query.password\n            console.log(email,secured);\n            if(bcrypt.compareSync(this.state.password,secured)){\n                \n                var user={\n                    email:email,\n                \n                } \n               \n                var url=\"/api/getUserStocks\";\n                const req = new Request(url,{\n                    method:\"POST\",\n                    headers:{\"Content-Type\":\"application/json\"},\n                    body:JSON.stringify(user),\n                });\n                fetch(req)\n                .then((res)=>{\n                    return res.json();\n                })\n                .then(query_result => this.setState({query:[[{email:this.state.email}],query_result],login_toggle:true},()=> console.log(\"login successful\")))\n                .catch((error)=>{\n                    return Promise.reject(error);\n                  });\n            }\n            else{\n                alert(\"Invalid Password\");\n            }\n               \n            }\n            \n               \n        }\n\n    //render the login page\n    render(){\n        \n        if(this.state.login_toggle){// you can login\n            console.log(this.state.query)\n            this.props.history.push(\"/profile\",this.state.query);\n        }\n    \n        var leftarrow = \"\\u2190\"\n        var backButton = <Button className=\"Button\" id=\"Back\" onClick={this.routeChange}>{leftarrow}</Button>;\n        var loginButton = <Button onClick={this.test} className= \"Button\" id = \"SignButton\" >Login </Button>;\n    return(\n      <>\n        <div className = \"CenterWrapper\">\n          <div className= \"HeaderInfo\" id=\"TitleTextSignUp\">\n          Login!\n          </div>\n\n          <form className= \"FormFields\">\n\n            <div className=\"FormField\">\n              <input onChange={this.handleEmail} className= \"FormField_Input_LS\" placeholder= \"Email\" type=\"text\" name=\"Email\" />\n            </div>\n\n            <div className=\"FormField\">\n              <input onChange={this.handlePassword} className= \"FormField_InputFormField_Input_LS\" placeholder= \"Password\" type=\"Password\" name=\"Password\" />\n            </div>\n\n            {backButton}\n            {loginButton}\n          \n\n          </form>\n        </div>\n\n      </>\n    );\n  }\n    \n\n}\nexport default withRouter(Login);","/Users/samehrlich/Desktop/final-app/client/src/profile.js",["130","131","132","133","134","135","136","137"],"import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport DrawerContainer from \"./layout/DrawerContainer\";\n\nimport \"./CSS/GlobalCSS.css\";\nimport \"./CSS/App.css\";\nimport './App.scss';\nimport SearchBar from './components/searchbar'\nimport WatchList from './components/WatchList'\nimport AllocationPanel from \"./panels/AllocationPanel\";\nimport PerformancePanel from \"./panels/PerformancePanel\";\n// import 'react-dropdown/style.css';\n// import \"./CSS/legacyStyles.css\";\n\n// import { render } from \"react-dom\";\n\nclass Profile extends Component { \n    \n    constructor(props){\n        super(props);\n\n        this.getEodData=this.getEodData.bind(this);\n        this.getAlertData=this.getAlertData.bind(this);\n        this.routeChange = this.routeChange.bind(this);\n        \n             \n        if(this.props.location.state == null || this.props.location.state[0] == null || this.props.location.state[0][0] == null || this.props.location.state[1] == null){\n            this.props.history.push(\"/error\");\n            }\n        else{\n            if(this.props.location.state[0][0].chartStock !== null)\n            this.state={  \n                email: this.props.location.state[0][0].email ,\n                stocks: this.props.location.state[1],\n                stock_to_watch:\"\",\n                alertData:\"\",\n                dropdownOpen: false,\n                value:\"Your Watchlist\",\n                Chart_stock:this.props.location.state[0][0].chartStock\n                \n            }\n            else{\n                this.state={  \n                    email: this.props.location.state[0][0].email ,\n                    stocks: this.props.location.state[1],\n                    stock_to_watch:\"\",\n                    dropdownOpen: false,\n                    value:\"Your Watchlist\",\n                    \n                    \n                } \n            }\n        }\n           \n        \n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.location.state[0][0].getStocks !==this.props.location.state[0][0].getStocks) {\n          console.log('User has added a stock. Get new stocks')\n          this.getUserStocks()\n          \n        }\n        if (prevProps.location.state[0][0].removeStocks !== this.props.location.state[0][0].RemoveStocks) {\n            console.log('User has Removed a stock. Get new stocks')\n            //update this function to grab eod Data\n            this.getUserStocks()\n            \n          }\n          if (prevProps.location.state[0][0].chartStock !== this.props.location.state[0][0].chartStock) {\n            console.log('User has chosen a chart to display',this.props.location.state[0][0].chartStock)\n            this.setState({Chart_stock:this.props.location.state[0][0].Chart_stock},()=>this.forceUpdate)\n        \n            \n          }\n          if(prevProps.location.state[0][0].newAlerts !== this.props.location.state[0][0].newAlerts){\n              console.log(\"user had disabled an alert\");\n              this.setState({alertData:this.props.location.state[0][0].newAlerts},()=>this.forceUpdate)\n\n          }\n        \n      }\n      getEodData(symbols){\n        if(symbols !== 'No stocks added'){\n          var element = {\n            symbol:\"\",\n            eodClose:\"\",\n            eodPrice:\"\"\n          }\n          var watchlists = symbols;\n          function fetchData(symbols){\n            const urls = symbols.map(symbol => {\n              var x = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol.Symbol+'&apikey=2TXPYH4TGZ32RG8D';\n              return x;\n            })\n          \n            const allRequests = urls.map(url => \n              fetch(url).then(response => response.json())\n            );\n          \n            return Promise.all(allRequests);\n          };\n        fetchData(symbols).then(result => {\n         var newList = watchlists.map((element, index) =>{\n          element= Object.entries(result[index]).map(entry => {return entry[1]});\n          return element[0]\n        })\n        // console.log(newList[0])\n      this.setState({stocks:newList},()=>this.forceUpdate);\n      })\n     \n        \n      }\n        else{\n          console.log(\"No stocks added\")\n          return;\n        }\n      }\n\n      getUserStocks(){\n  \n        var user={ \n            email: this.state.email,\n        }\n        console.log(user);\n        var url = \"/api/getUserStocks\";\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n           \n            return res.json();\n        }).catch((error)=>{\n            console.log(\"p/121\");\n            console.log(error);\n            return Promise.reject(error);\n            })\n        .then(stock_results => {\n            console.log(\"3rdt ADD/remove Stock Rerender\");\n            this.getEodData(stock_results);\n            });\n        \n      }\n      \n    \n \n    \n    \n\n\nrouteChange(value){\n    if (value.target.id==\"Back\"){\n        this.props.history.push(\"/\",this.props.history.location.state);\n    }\n    else if(value.target.id==\"Home\"){\n        this.props.history.push(\"/\",this.props.history.location.state);\n    }\n}\ngetAlertData(email){\n    var user = {\n        email:email,\n        request:\"getData\"\n    }\n    var url=\"/api/UserAlerts\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                this.setState({alertData:query_result})\n            }) \n    \n}\ncomponentDidMount(){\n    \n        this.getAlertData(this.state.email)\n    \n}\n\n\nrender(){\n    var chart_symbol=\"\";\n    if(this.state.alertData){ \n        console.log(this.state.alertData);\n    }\n    \n    if(this.props.location.state[0][0].chartStock){\n        chart_symbol =this.props.location.state[0][0].chartStock;\n    }\n    // console.log(this.props.location.state[0][0].chartStock)\n\n    // var loginButton = <Button onClick={this.routeChange} className= \"Button\" id = \"Home\" >Home </Button>;\n    return(\n       \n        <DrawerContainer>\n           \n            <div className=\"App-header\">\n            <div className=\"panels\">\n            \n                <div className=\"panel-info\">\n                <SearchBar stocks= {this.props.location.state[1]} email= {this.state.email} /> \n                \n                </div>\n                {/* <div className=\"panel-info\">\n                   \n                </div> */}\n                <div className=\"panel-info\">\n                    <PerformancePanel symbol={chart_symbol}/>\n                  \n                </div>\n                <div className=\"panel-positions\">\n                <WatchList stocks={this.state.stocks} email= {this.state.email} alertData={this.state.alertData}/>\n                <AllocationPanel email={this.state.email} callback={(alerts)=>this.setState({alertData: alerts})}/>\n                </div>\n        </div>\n            </div>\n            \n   </DrawerContainer>\n    )\n    }\n\n\n}\nexport default withRouter(Profile);","/Users/samehrlich/Desktop/final-app/client/src/error.js",["138"],"import React,{Component} from \"react\";\nimport {Button} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\";\n\nclass error extends Component {\n  constructor(props){\n    super(props);\n  this.handleRouteChange = this.handleRouteChange.bind(this);\n}\n\nhandleRouteChange(event){\n\tconsole.log(event.target);\n\tif(event.target.id === \"Home\"){\n\t\tthis.props.history.push(\"/\");\n\t}\n}\n\n  render(){\n    return(\n    <>\n\t<div className= \"HeaderInfo\">Woah There!</div>\n\t<div className= \"HeaderInfo\">Something went wrong. Try logging in again.</div>\n\t<br></br>\n\t<button id = \"Home\" className = \"Button\" onClick = {this.handleRouteChange}>Home</button>\n    </>\n    );\n  }\n\n}\nexport default withRouter(error);\n","/Users/samehrlich/Desktop/final-app/client/src/signUp.js",["139"],"import React,{Component} from \"react\";\nimport {Button} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\";\n\nconst bcrypt = require('bcrypt-nodejs/bCrypt');\n\nclass signUp extends Component{\n    constructor(props){\n        super(props);\n        this.handlePassword=this.handlePassword.bind(this);\n        this.handleEmail=this.handleEmail.bind(this);\n        this.routeChange=this.routeChange.bind(this);\n        this.test=this.test.bind(this);\n        this.state={\n            password:\"\",\n            email:\"\"\n        }\n    }\n\n    handleEmail(event){\n        this.setState({email: event.target.value});\n    }\n\n    handlePassword(event){\n        this.setState({password: event.target.value});\n    }\n\n    // Handle to new Brower path\n    routeChange(value){\n        if (value.target.id === \"back\"){\n            this.props.history.push(\"/\",this.props.history.location.state);\n          }\n    \n          else if(value.target.id==\"Home\"){\n            this.props.history.push(\"/home\",this.props.history.location.state);\n          }\n    }\n\n    //Test the users email and password input\n\n    test(){\n        //used to check if the password has 7-15 characts and contrains at least one numeric dogot and a special character\n        var secureCheck = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\n        if(this.state.password.match(secureCheck)){\n            var user={\n                email:this.state.email,\n                password:bcrypt.hashSync(this.state.password)\n            }\n            \n            console.log(user);\n\n            var url=\"/api/signup\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n\n            });\n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    return res.json();\n                }).catch((error)=>{\n                    console.log(error);\n                    return Promise.reject(error);\n                })\n            .then(query_result => this.setState({query:[[{email:this.state.email}],[]],SignStatus:query_result},()=> console.log(query_result)))\n            .then(()=>{\n                if (this.state.SignStatus === \"Unconfirmed User Added\"){\n                    this.props.history.push(\"/\");\n                }\n                else if (this.state.SignStatus === \"Duplicate Email\"){\n                    this.setState.SignStatus = \"\";\n                    alert(\"Email Is Currently In Use\")\n                }\n                \n            });\n\n        }\n        else{\n            alert(\"Password must have 7 to 15 characters and contain at least one numeric digit and a special character\");\n           }\n\n    }\n\n    render(){\n        console.log(\"Sign Status\",this.state.SignStatus)\n\n        //email has not been confirmed yet \n        // if (this.state.SignStatus === \"Unconfirmed User Added\"){\n        //     this.props.history.push(\"/confirmEmail\");\n        // }\n        //email submitted is already in the database\n        // else if (this.state.SignStatus === \"Duplicate Email\"){\n        //     this.setState.SignStatus = \"\";\n        //     alert(\"Email Is Currently In Use\")\n        // }\n        var color = \"white\";\n        //if password is empy set the box to white\n        if(this.state.password === null || this.state.password.length === 0){\n            color = \"white\";\n        }\n        //if password matches the constraints set the box to green\n        else if(this.state.password.match(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/)){\n            color = \"green\";\n          }\n        //otherwise the password is not valid so set the box to red\n        else{\n            color = \"red\"\n          }\n\n        var styleAttr = {borderBottom:\"2px solid \"+color}\n        var leftarrow = \"\\u2190\"\n\n        var passwordInput = <input style = {styleAttr} onChange={this.handlePassword} className= \"FormField-Input_Ls\" placeholder= \"Create a Password\" type=\"Password\" name=\"Password\" />\n        var emailInput = <input onChange={this.handleEmail} className= \"FormField_Input_LS\" placeholder=\"Email\" type=\"text\" name=\"Email\"/>\n        var backButton = <Button className=\"Button\" id= \"back\" onClick={this.routeChange}>{leftarrow}</Button>\n        var signUpButton = <Button onClick={this.test} className= \"Button\" id=\"SignupButton\">Create Account</Button>\n        return(\n                \n    <div className= \"CenterWrapper\">\n\n        <div className= \"HeaderInfo\" id=\"TitleTextSignUp\">\n        Sign Up!\n        </div>\n\n        <div className = \"FormWrap\">\n        \n            <div className=\"FormField\">\n                {emailInput}\n            </div>\n            \n            <div className=\"FormField\">\n                {passwordInput}\n            </div>\n\n            {backButton}\n            {signUpButton}\n\n        </div>\n    </div>\n        \n        );\n    }\n\n}\nexport default withRouter(signUp);","/Users/samehrlich/Desktop/final-app/client/src/App.js",["140"],"import logo from './logo.svg';\nimport React from \"react\";\nimport './App.scss';\nimport DrawerContainer from \"./layout/DrawerContainer\";\nimport Dashboard from \"./Dashboard\";\nfunction App() {\n  return (\n   <DrawerContainer>\n     <div className=\"page-container\">\n       <Dashboard />\n     </div>\n   </DrawerContainer>\n  );\n}\n\nexport default App;\n",["141","142"],"/Users/samehrlich/Desktop/final-app/client/src/home.js",["143"],"import React,{Component} from \"react\";\nimport {Button} from \"reactstrap/es\";\nimport {withRouter} from \"react-router-dom\";\nimport \"./CSS/GlobalCSS.css\";\nconst bcrypt = require('bcrypt-nodejs/bCrypt');\n\nclass Home extends Component {\n    constructor(props){\n      super(props);\n      this.routeChange=this.routeChange.bind(this);\n      this.state={}\n    }\n  \n    routeChange(value){\n      if (value.target.id === \"Login\"){\n          this.props.history.push(\"/login\",this.props.history.location.state);\n        }\n  \n      else if(value.target.id === \"Sign Up\"){\n        this.props.history.push(\"/signup\",this.props.history.location.state);\n      }\n  \n    }\n  \n    render(){\n      return(\n        <>\n        <div className=\"HomeCenterWrapper\">\n  \n          <div className= \"HomePageHeader\" id = \"TitleTextSignUp\">\n            Bull Watch\n          </div>\n  \n          <div className= \"HomePagedesc\" id = \"TitleTextSignUp\">\n            Know What Is Happening With Your Favorite Stocks!\n          </div>\n  \n          <div className = \"buttonsDiv\">\n            <Button id = \"Login\"   className = \"Button\" onClick={this.routeChange}>Login</Button>\n            <Button id = \"Sign Up\" className = \"Button\" onClick={this.routeChange}>Sign Up</Button>\n          </div>\n  \n        </div>\n        </>\n      );\n    }\n  \n  }\n  export default withRouter(Home);","/Users/samehrlich/Desktop/final-app/client/src/components/WatchList.jsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import React,{Component,ChildComponent} from \"react\";\nimport {ListGroup} from \"react-bootstrap/esm\";\nimport {Button,DropdownMenu,Dropdown,} from \"reactstrap/es\";\n// import {Tooltip,OverlayTrigger} from \"react-bootstrap\"\nimport {withRouter} from \"react-router-dom\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport * as ReactDOM from \"react-dom\";\nimport { Tooltip } from \"@progress/kendo-react-tooltip\";\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { MyCommandCell } from \"./mycommand.jsx\";\nimport \"hammerjs\";\nimport {sendEmail} from \"./email.js\"\nvar fetchUrl = require(\"fetch\").fetchUrl;\nconst request = require('request');\n\nfunction isMarketOpen(){\n  var x = new Date()\n  var dayOfTheWeek= x.getDay();\n  var timeOfDay = x.getHours();\n  var minutes = x.getMinutes();\n  if(dayOfTheWeek <6){\n    if((timeOfDay === 9 && minutes >30) || (timeOfDay >9 && timeOfDay < 16)){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }\n  else{\n    return false;\n  }\n    //week day find out if the market is open \n    \n}\n\nfunction shouldgetUpdatedEod(symbol){\n  console.log(symbol)\n  var currentDate = new Date()\n  var dayOfTheWeek= currentDate.getDay();\n\n  var EodDataD = new Date(symbol['07. latest trading day'])\n  var lastTradeDay= EodDataD.getDay()+1;\n  if(dayOfTheWeek===1){\n    //last traded day should 5 \n    if(lastTradeDay!==5){\n      //update the Eod Data\n      return true\n    }\n    else{\n      //the eod data is fine\n      return false;\n    }\n  }\n  else{\n    if(lastTradeDay!==dayOfTheWeek-1){\n      //update the eod data\n      return true\n    }\n    else{\n      //the eod datat is fine\n      return false\n    }\n  }\n\n  \n}\n//fuctions add $ sign to values in the watchlist girs\nfunction add$sign(props){\n  const Value = props.dataItem[props.field || \"\"];\n  return (\n    <td >\n      {\"$\"+Value}\n    </td>\n  )\n}\n\n//function changes the color of the current price column depenging on its prrice \nfunction ChangeCurPriceColor(props){\n  var curValue = props.dataItem[props.field || \"\"];\n \n  const closeValue =props.dataItem[\"PreviousClose\"||\"\"]\n\n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: curValue > closeValue ? \"green\" : \"red\" }}>\n      {\"$\"+curValue}\n    </td>\n  )\n  \n};\n\n//changes the color of the current change column \nfunction ChangeCurChangeColor(props){\n  const value = props.dataItem[props.field || \"\"]>0? \"+\"+props.dataItem[props.field]:props.dataItem[props.field || \"\"];\n  \n  // console.log(curValue,closeValue)\n  return (\n    <td style={{ color: value > 0 ? \"green\" : \"red\" }}>\n      {value}\n    </td>\n  )\n  \n};\nclass viewChartOver extends React.Component {\n  render() {\n    return (\n      <td title={\"View chart\"}>\n        {\"view the char\"}\n      </td>\n    );\n  }\n}\nexport default withRouter( class WatchList extends React.Component {\n \n    constructor(props) {\n        super(props)\n            this.CommandCell=this.CommandCell.bind(this)\n            this.getEodData=this.getEodData.bind(this)\n            this.symbolCell = this.symbolCell.bind(this);\n            this.removeStock=this.removeStock.bind(this);\n            this.renderStockChart=this.renderStockChart.bind(this);\n            this.removeHelper=this.removeHelper.bind(this);\n            this.disableAlert=this.disableAlert.bind(this);\n            \n           this.result = [];\n            this.state={\n                email : this.props.email,\n                stocks:this.props.stocks,\n                AlertData:this.props.alertData,\n                connectionError: false,\n                dropdownOpen: false,\n                value:\"Your Watchlist\",\n                stockHasBeenRemoved:false,\n                alertDisabled: false,\n                chartStock:\"\",\n                // eodData:\"\"\n                \n            }\n            \n        \n        \n    }\n\n    //sets the inside of the symbol cell\n    symbolCell(props){\n      var symbol = props.dataItem[props.field || \"\"];\n      \n      return(\n        \n        \n        <td >\n        {symbol}\n        </td>\n        \n   \n      );\n     \n\n\n    }\n    //handles the function of the remove cells\n    CommandCell(props){\n      return(\n        <MyCommandCell\n          {...props}\n          \n          remove={this.removeStock}\n          \n        />\n      );\n    }\n        \n      \n      componentDidUpdate(prevProps, prevState) {\n        if (prevState.stockHasBeenRemoved !== this.state.stockHasBeenRemoved) {\n          console.log('User has removed a stock.')\n          if(this.props.history.push!== undefined) {\n            this.props.history.push(\"/profile\",[[{email:this.state.email,removeStocks:this.state.stockHasBeenRemoved},this.state.stocks]]);\n          }\n          else{\n              this.setState({stocks:this.state.stocks})\n          }\n        }\n          if (this.props.stocks.length != prevProps.stocks.length) {\n            console.log('Update stocks')\n            this.setState({stocks:this.props.stocks})\n         \n        }\n        if(prevState.chartStock!==this.state.chartStock && this.state.chartStock!==\"\"){\n          var stock_chart= this.state.chartStock;\n          console.log(\"render chart for \", stock_chart);\n          \n          this.setState({chartStock:\"\"},()=>this.props.history.push(\"/profile\",[[{email:this.state.email,chartStock:stock_chart},this.state.stocks]]))\n        }\n        if(prevState.alertDisabled!=this.state.alertDisabled){\n          console.log(\"A user alert has been disabled\")\n          this.props.history.push(\"/profile\",[[{email:this.state.email,newAlerts:this.state.AlertData},this.state.stocks]]);\n\n\n        }\n      }\n      \n      getEodData(symbol,callback){\n        // if(symbols !== 'No stocks added'){\n        //   var element = {\n        //     symbol:\"\",\n        //     eodClose:\"\",\n        //     eodPrice:\"\"\n        //   }\n        //   var watchlists = symbols;\n          \n            const url = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol+'&apikey=2TXPYH4TGZ32RG8D';\n            const req = new Request(url);\n            fetch(url,function(err,meta,body){\n             var y = body.toString()\n              var x = JSON.parse(y)\n              console.log(x['Global Quote'])\n              callback(x['Global Quote']) \n        });\n      }\n      // componentDidMount(){\n      //   // var data = getEodData(\"AAPL\");\n      //   // console.log(data);\n        \n      //   // this.setState({eodData:data})\n        \n      // }\n     \n\n     \n      // getEodData(symbols){\n      //   if(symbols !== 'No stocks added'){\n      //     var element = {\n      //       symbol:\"\",\n      //       eodClose:\"\",\n      //       eodPrice:\"\"\n      //     }\n      //     var watchlists = symbols;\n      //     function fetchData(symbols){\n      //       const urls = symbols.map(symbol => {\n      //         var x = 'https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol='+symbol.Symbol+'&apikey=2TXPYH4TGZ32RG8D';\n      //         return x;\n      //       })\n          \n      //       const allRequests = urls.map(url => \n      //         fetch(url).then(response => response.json())\n      //       );\n          \n      //       return Promise.all(allRequests);\n      //     };\n      //   fetchData(symbols).then(result => {\n      //    var newList = watchlists.map((element, index) =>{\n      //     element= Object.entries(result[index]).map(entry => {return entry[1]});\n      //     return element[0]\n      //   })\n      //   // console.log(newList[0])\n      // this.setState({stocks:newList});\n      // })\n     \n        \n      // }\n      //   else{\n      //     console.log(\"No stocks added\")\n      //     return;\n      //   }\n      // }\n\n    // componentWillMount(){\n    //   console.log(this.state.stocks)\n    //   if(isMarketOpen()){\n    //     this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n    //   }\n    \n    //   if(this.state.stock!=='No stocks added'){\n        \n    //     this.getEodData(this.state.stocks);\n    //   }\n        \n        \n    // }\n    componentWillUnmount(){\n      if(isMarketOpen()){\n\n        if(this.state.stock!=\"No stocks added\"){\n          this.state.stocks.forEach(symbol=>{\n            this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': symbol.Symbol}));\n            \n          })\n          \n        }\n        this.connection.close();\n      }\n            \n   \n        \n        \n        \n        // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests, \n        // or cleaning up any subscriptions that were created in componentDidMount().\n    }\n    disableAlert(alert){\n      var user={\n        email:this.props.email,\n        Alert: alert,\n        active:false\n\n    } \n    console.log(user)\n    var url = '/api/disableAlert';\n    const req = new Request(url,{\n        method:\"POST\",\n        headers:{\"Content-Type\":\"application/json\"},\n        body:JSON.stringify(user),\n    });\n    fetch(req)\n    .then((res)=>{\n        console.log(res)\n        if(res.status===500){\n        res.json()\n        .then((json)=>{\n            const {message,stackTrace}=json;\n          })\n          .catch((error)=>{\n            return Promise.reject(error);\n          });\n        }\n        else{\n            \n          return res.json();\n        }\n      })\n      .then((result)=> {\n        console.log(result);\n          console.log(\"Disabled triggered alert\");\n          this.disableAlertHelper(result)});\n      \n    }\n    disableAlertHelper(result){\n      if(result.sucess===true){\n        this.setState({AlertData:result.Data,alertDisabled:!this.state.alertDisabled});\n      }\n    }\n    \n    saveNewStockTrade= (event) => {\n        \n        let result = JSON.parse(event.data)\n        // console.log(result)\n        let Alerts =this.state.AlertData;\n        // console.log(Alerts);\n        let user_watchlist = this.state.stocks\n        \n        // console.log(\"InsidesaveNewStockTrade: \", user_watchlist)\n        if(result.type===\"trade\"){\n            user_watchlist.forEach(symbol => {\n                var tradePrice= result.data.filter((i,n)=>i.s===symbol[\"Symbol\"]);\n                if(tradePrice.length !==0){\n                  \n                    // symbol.eodClose= (symbol.eodClose*1).toFixed(2);\n                    // console.log(symbol.currentPrice, symbol[\"latest_trading_day\"])\n                    symbol[\"currentPrice\"] = +tradePrice[tradePrice.length-1].p.toFixed(2); \n                    symbol[\"changeV\"]= +(symbol.currentPrice-symbol.PreviousClose).toFixed(2);\n                    symbol[\"changeP\"]= +((symbol[\"changeV\"]/symbol.PreviousClose)*100).toFixed(2);\n                    \n                }\n                if(Alerts!==\"\" && Alerts!== \"No Alerts found\"&&Alerts!==undefined){\n                  var alertSymbols=Alerts.uniqueSymbols.map(symbol=>symbol.symbol);\n                  if(alertSymbols.includes(symbol[\"Symbol\"])){\n                    // console.log(Alerts)\n                  //check to see if the new price value triggered the alert\n                  Alerts.alerts.forEach(alert=>{\n                    // console.log(symbol);\n                    \n                    if(alert.symbol===symbol[\"Symbol\"]&&alert.active){\n                     //toggle the alert on or off depending if it got triggered then give user option to turn on or off the\n                      switch(alert.Identifier){\n                        case 'Price':\n                          // console.log(alert.symbol,alert.Identifier,alert.movement)\n                            switch(alert.movement){\n                                case 'above':{\n                                //  console.log(alert)\n                                  if(symbol.currentPrice > alert.valuechange){\n                                    console.log(\"Your Price Alert watching for \"+symbol.Symbol+\" to go above: \"+alert.valuechange+\" has been triggered\")\n                                    if(alert.active){\n                                      this.disableAlert(alert)}\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Above Alert not triggered\");\n                                }\n                                    \n                                case 'below':{\n                                  // console.log(alert)\n                                  if(symbol.currentPrice < alert.valuechange){\n                                    console.log(\"Your Price Alert watching for \"+symbol.Symbol+\" to go below: \"+alert.valuechange+\" has been triggered\")\n                                    \n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Below Alert not triggered\");\n                                }\n                                \n                                default:\n                                    return (\"something went wrong\");\n                            }\n                        case 'Percent':\n                            switch(alert.movment){\n                                case 'Up':{\n                                  if(symbol.CurrentPercentChange > alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving up: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Alert has been triggered\");\n                                  }\n                                  return (\"Up Alert not triggered\");\n                                }\n                                    \n                                case 'Down':{\n                                  if(symbol.CurrentPercentChange < alert.valuechange){\n                                    alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving down: \"+alert.valuechange+\"% has been triggered\")\n                                    sendEmail(this.state.email,alert);\n                                    return (\"Down Alert has been triggered\");\n                                  }\n                                  return (\"Down Up Alert not triggered\");\n                                }\n                                default:\n                                  return (\"Down Alert not triggered\");\n                            }\n                        default:\n                          return (\"something went wrong\");\n                    \n                    }}\n                  })\n                  }\n                } \n              \n            //     if((Alerts!==\"\" && Alerts!== \"No Alerts found\" &&Alerts!==undefined)&&alertSymbols.includes(symbol[\"Symbol\"])){\n                 \n            //       // console.log(Alerts)\n            //       //check to see if the new price value triggered the alert\n            //       Alerts.alerts.forEach(alert=>{\n            //         // console.log(symbol);\n                    \n            //         if(alert.symbol===symbol[\"Symbol\"]){\n            //          //toggle the alert on or off depending if it got triggered then give user option to turn on or off the\n            //           switch(alert.Identifier){\n            //             case 'Price':\n            //               // console.log(alert.symbol,alert.Identifier,alert.movement)\n            //                 switch(alert.movement){\n            //                     case 'above':{\n            //                     //  console.log(alert)\n            //                       if(symbol.currentPrice > alert.valuechange){\n            //                         console.log(\"Your Price Alert watching for \"+symbol.Symbol+\" to go above: \"+alert.valuechange+\" has been triggered\")\n            //                         this.disableAlert(alert)\n            //                         sendEmail(this.state.email,alert);\n            //                         return (\"Alert has been triggered\");\n            //                       }\n            //                       return (\"Above Alert not triggered\");\n            //                     }\n                                    \n            //                     case 'below':{\n            //                       // console.log(alert)\n            //                       if(symbol.currentPrice < alert.valuechange){\n            //                         console.log(\"Your Price Alert watching for \"+symbol.Symbol+\" to go below: \"+alert.valuechange+\" has been triggered\")\n                                    \n            //                         sendEmail(this.state.email,alert);\n            //                         return (\"Alert has been triggered\");\n            //                       }\n            //                       return (\"Below Alert not triggered\");\n            //                     }\n                                \n            //                     default:\n            //                         return (\"something went wrong\");\n            //                 }\n            //             case 'Percent':\n            //                 switch(alert.movment){\n            //                     case 'Up':{\n            //                       if(symbol.CurrentPercentChange > alert.valuechange){\n            //                         alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving up: \"+alert.valuechange+\"% has been triggered\")\n            //                         sendEmail(this.state.email,alert);\n            //                         return (\"Alert has been triggered\");\n            //                       }\n            //                       return (\"Up Alert not triggered\");\n            //                     }\n                                    \n            //                     case 'Down':{\n            //                       if(symbol.CurrentPercentChange < alert.valuechange){\n            //                         alert(\"Your Percentage Alert watching for \"+symbol.Symbol+\" to be moving down: \"+alert.valuechange+\"% has been triggered\")\n            //                         sendEmail(this.state.email,alert);\n            //                         return (\"Down Alert has been triggered\");\n            //                       }\n            //                       return (\"Down Up Alert not triggered\");\n            //                     }\n            //                     default:\n            //                       return (\"Down Alert not triggered\");\n            //                 }\n            //             default:\n            //               return (\"something went wrong\");\n                    \n            //         }}\n            //       })\n                  \n            // }\n            \n        })\n        this.setState({stocks:user_watchlist});\n      }\n    }\n    X =0;\n    componentDidMount(){\n      // console.log(isMarketOpen())\n      console.log(this.state.stocks)\n   \n      if(this.state.stock!=='No stocks added'){\n        \n        var whichToUpdate= this.state.stocks.map(stock=>{\n          return shouldgetUpdatedEod(stock)\n        })\n        console.log(whichToUpdate);\n        var newList = this.state.stocks.map((stock,indx)=>{\n          if(whichToUpdate[indx]){\n            let x =stock;\n            this.getEodData(stock['01. symbol'],((result)=>{\n              x=result\n            }));\n            return x;\n          }\n          else{\n            return stock \n          }\n        })\n        console.log(this.state.stocks, newList)\n        if(newList !==this.state.stocks ){\n          this.setState({stocks:newList});\n        }\n        \n      }\n      \n      if(isMarketOpen()){\n        \n        this.connection = new WebSocket('wss://ws.finnhub.io?token=c34391qad3i8edlcgrgg');\n        this.connection.onopen = ()=> { \n          if (this.state.stocks!==\"No stocks added\"){\n              this.state.stocks.forEach(symbol=>{\n                  this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': symbol['Symbol']}));\n                  console.log(\"Inside OnOpen: Subscribed To: \", symbol['Symbol'])\n              })\n          }\n          else{\n              console.log(\"no stocks added to subscribe to\");\n          }\n          \n         }\n        this.connection.onmessage= this.saveNewStockTrade;\n        this.connection.onclose = () => { this.setState({connectionError: true}) }\n      }\n       \n        \n    }\n    \n    \n   \n    removeStock(htmlEvent,stock){\n      if(isMarketOpen()){\n         //unsubsribe from listening to thsi stock\n       console.log(\"Unsubscribing from: \",stock[\"Symbol\"])\n       this.connection.send(JSON.stringify({'type':'unsubscribe', 'symbol': stock[\"Symbol\"]}))\n      }\n       \n        //first stop the htmlEvents default status\n        htmlEvent.preventDefault();\n        var user={\n            email:this.props.email,\n            stock_symbol: stock[\"Symbol\"],\n    \n        } \n        console.log(user)\n        var url = '/api/removeUserStock';\n        const req = new Request(url,{\n            method:\"POST\",\n            headers:{\"Content-Type\":\"application/json\"},\n            body:JSON.stringify(user),\n        });\n        fetch(req)\n        .then((res)=>{\n            console.log(res)\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n                \n              return res.json();\n            }\n          })\n          .then((result)=> {\n            console.log(result);\n              console.log(\"1st remove stock rerender\");\n              this.removeHelper(result)});\n    \n    }\n    \n    removeHelper(result){\n        console.log(\"p/179\",result);\n        //removed but still showing on watch list\n        if(result === \"No stocks added\"){\n          this.setState({stocks:\"No stocks added\",stockHasBeenRemoved:!this.state.stockHasBeenRemoved})\n        }\n        else if(result.Response===\"Stock not on watch list\"){\n            alert(\"Stock Queued For Deletion, Please Login In Again\");\n        }\n        //stock has been removed from watchlist\n        else if(result.Response===\"Sucessfully removed stock\"){\n            console.log(\"2nd remove stock rerender\");\n            this.setState({stocks:result.Data,stockHasBeenRemoved:!this.state.stockHasBeenRemoved});\n           \n        }\n    }\n    \n    renderStockChart(event){\n      console.log(event.dataItem[\"Symbol\"])\n      this.setState({chartStock:event.dataItem[\"Symbol\"]})\n    }\n    render(){\n     \n        var useData;\n        // console.log(isMarketOpen())\n        if(this.props.stocks !==\"No stocks added\"&&this.state.stocks !==\"No stocks added\"){\n          useData=this.state.stocks\n          console.log(typeof useData,useData);\n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                {/* <GridColumn title=\"Name\" field=\"name\" /> */}\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100} cell={this.symbolCell} />\n                <GridColumn title=\"Last Close\" field=\"PreviousClose\" cell={add$sign}/>\n                <GridColumn title=\"Price\" field=\"currentPrice\" cell={ChangeCurPriceColor}/>\n                <GridColumn title=\"Change\" field=\"changeV\" cell={ChangeCurChangeColor} />\n                <GridColumn title=\"% Change\" field=\"changeP\" cell={ChangeCurChangeColor}/>\n                {/* <GridColumn title=\"View Chart\" id=\"Symbol\" cell={tooltiprender} width=\"200px\" /> */}\n                <GridColumn title=\"Remove\" id=\"Symbol\" cell={this.CommandCell} width=\"200px\" />\n              </Grid>\n            </Tooltip>\n         \n          )\n        }\n        else{\n          useData=[{\n            eodClose:\"Add stocks\",\n            Symbol:\"Add stocks\",\n            currentPrice:\"Add stocks\",\n            Change:\"Add stocks\",\n            CurrentAmountChange:\"Add stocks\",\n            CurrentPercentChange:\"Add stocks\",\n            Track:\"Add stocks\"\n\n          },]\n          \n          var grid = (\n            <Tooltip openDelay={100} position=\"right\" >\n              <Grid data={useData} onRowClick= {this.renderStockChart} title=\"WatchList\">\n                <GridColumn title=\"Symbol\" field=\"Symbol\"style={{ width: 100 }} locked={false} width={100}  />\n                <GridColumn title=\"Last Close\" field=\"eodClose\" />\n                <GridColumn title=\"Price\" field=\"currentPrice\" />\n                <GridColumn title=\"Change\" field=\"CurrentAmountChange\" />\n                <GridColumn title=\"% Change\" field=\"CurrentPercentChange\" />\n                {/* <GridColumn title=\"Track\" field=\"Track\" width=\"200px\" /> */}\n              </Grid>\n            </Tooltip>\n          )\n        }\n        // console.log(this.state.eodData)\n        return (\n          \n          \n          grid\n          \n          );\n        }\n})\n","/Users/samehrlich/Desktop/final-app/client/src/Dashboard.tsx",["165"],"import react from \"react\";\n\nimport InfoPanel from \"./panels/InfoPanel.jsx\";\nimport AllocationPanel from \"./panels/AllocationPanel\";\nimport PerformancePanel from \"./panels/PerformancePanel\";\nimport PositionsPanel from \"./panels/PositionsPanel\";\n\nexport default function Dashboard(){\n    return (\n        <div className=\"panels\">\n            <div className=\"panel-info\">\n                <InfoPanel/>\n            </div>\n            <div className=\"panel-allocation\">\n                <AllocationPanel/>\n            </div>\n            <div className=\"panel-balance\">\n                <PerformancePanel/>\n            </div>\n            <div className=\"panel-positions\">\n                <PositionsPanel/>\n            </div>\n        </div>\n    )\n}",["166","167"],"/Users/samehrlich/Desktop/final-app/client/src/layout/DrawerContainer.tsx",["168"],"import React from \"react\";\n\nimport { Button } from \"@progress/kendo-react-buttons\";\nimport { Drawer, DrawerContent } from \"@progress/kendo-react-layout\";\nimport { DrawerSelectEvent } from \"@progress/kendo-react-layout/dist/npm/drawer/interfaces/DrawerSelectEvent\";\nimport \"hammerjs\";\nconst user = {\n  initials: \"TV\",\n  name: \"TJ VanToll\",\n  img: \"https://pbs.twimg.com/profile_images/1029805644310827008/wkAPO_XC_400x400.jpg\"\n};\n\nconst items =[\n  { text: \"Tech Fund\", icon: \"k-i-globe\", children: null },\n  { text: \"Health Fund\", icon: \"k-i-heart\", children: null },\n  { text: \"Commercial Fund\", icon: 'k-i-cart', children: null },\n  { text: \"Industrial Fund\", icon: 'k-i-gear', children: null },\n  { text: \"Financial Fund\", icon: 'k-i-dollar', children: null },\n];\n\nexport default function DrawerContainer(props: React.PropsWithChildren<any>) {\n  const [expanded, setExpanded] = React.useState(false);\n  const [selectedId, setSelectedId] = React.useState(0);\n\n  const onSelect = (e: DrawerSelectEvent) => {\n    setSelectedId(e.itemIndex);\n    setExpanded(false);\n  }\n  const closeDrawer = () => {\n    setExpanded(false);\n  }\n  const toggleDrawer = () => {\n    setExpanded(currentExpanded => {\n      return !currentExpanded;\n    });\n  }\n\n  return (\n    <div>\n      <Drawer\n        expanded={expanded}\n        items={items.map(\n          (item) => ({ ...item, selected: items[selectedId].text === item.text }))}\n        onSelect={onSelect}\n        animation={{ duration: 400 }}\n        position=\"start\"\n        onOverlayClick={closeDrawer}\n      >\n        <DrawerContent>\n          <div className=\"header\">\n            <h1>\n              <span>\n                <Button icon=\"menu\" look=\"flat\" onClick={toggleDrawer} />\n                \n                <span className=\"title\">\n                  Bull Watch\n                  <span className=\"divider\">|</span>\n                  <span className=\"fund\">Track Your Stocks</span>\n                </span>\n              </span>\n              {/* <img alt={user.name} src={user.img} /> */}\n            </h1>\n          </div>\n          {props.children}\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n}\n",["169","170"],"/Users/samehrlich/Desktop/final-app/client/src/panels/AllocationPanel.tsx",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React from \"react\";\nimport {\n  Chart,\n  ChartLegend,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartSeriesLabels,\n  ChartTitle,\n  ChartTooltip\n} from \"@progress/kendo-react-charts\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\n\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport { getFundAllocation } from \"../services/dataService\";\nimport { Allocation } from \"../data/models\";\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\n// import { getFundInfo } from \"../services/dataService\";\n// import { FundInfo } from \"../data/models\";\n\nimport {Button,DropdownMenu,Dropdown, Input} from \"reactstrap/es\";\nimport \"hammerjs\";\nimport \"../CSS/GlobalCSS.css\";\nimport UserAlerts from \"../panels/UserAlert\";\n// import AddAlert from \"../panels/AddAlert\";\nconst defaultIdentifier = {\n  productName: \"Select Metric ...\",\n};\nconst defaultWatch = {\n  orderName: \"Select Movment ...\",\n};\n\nfunction getAlertData(email:string,callback:(arg0: any) => void){\n  var user = {\n      email:email,\n      request:\"getData\"\n  }\n  var url=\"/api/UserAlerts\";\n          const req = new Request(url,{\n              method:\"POST\",\n              headers:{\"Content-Type\":\"application/json\"},\n              body:JSON.stringify(user),\n          });\n          \n          fetch(req)\n          .then((res)=>{\n              //Catch server error\n                  //no error\n                  \n              return res.json();\n          }).catch((error)=>{\n              console.log(error);\n              return Promise.reject(error);\n          })\n          .then(query_result=>{\n              console.log(query_result);\n              callback(query_result)\n          }) \n  \n}\nexport default function AllocationPanel(props:any) {\n  function handleChange(event:any){\n   var symbol = event.target.value;\n   setState({\n     ...state,\n    symbol:symbol,\n\n   })\n  }\n  function handleClick(event:any){\n    setState({\n      ...state,\n      identifiers:['Price','Percent']\n \n    })\n  }\n  function handleAlert(event:any){\n    \n\n    \n\n\n\n/* The result can be observed in the DevTools(F12) console of the browser. */\n// console.log(event);\n//     console.log(state);\n    var user = {\n      email:email,\n      symbol:state.symbol,\n      identifier:state.identifier,\n      movment:state.movement,\n      change:event.target.form[0].defaultValue\n  }\n  console.log(user)\n  var url=\"/api/createAlert\";\n          const req = new Request(url,{\n              method:\"POST\",\n              headers:{\"Content-Type\":\"application/json\"},\n              body:JSON.stringify(user),\n          });\n          \n          fetch(req)\n          .then((res)=>{\n            if(res.status===500){\n            res.json()\n            .then((json)=>{\n                const {message,stackTrace}=json;\n              })\n              .catch((error)=>{\n                return Promise.reject(error);\n              });\n            }\n            else{\n              return res.json();\n            }\n          })\n          .then(query_result=>{\n              console.log(query_result);\n              if(query_result===\"New Alert Added\"){\n                alert(\"Alert Created Go to your alerts to view\");\n                setState({...state,ChangedAlerts:!state.ChangedAlerts})\n                \n              }else{\n                console.log(\"there was an error while adding new alert\")\n              }\n             \n          })\n  }\n  const email = props.email;\n  console.log(email)\n  const [state,setState]= React.useState({ \n    identifiers:[\"\"],\n    movements: [\"\"],\n    identifier:\"\",\n    movement:\"\",\n    symbol:\"\",\n    change:0,\n    ChangedAlerts:false\n})\nconst movementChange = (event:any) => {\n  setState({\n    ...state,\n\n    movement:event.target.value\n  })\n}\nconst identifierChange=(event: any)=>{\n  const identifier = event.target.value;\n  if(identifier==='Price'){\n    const movements= ['Above','Below']\n    setState({\n        ...state,\n       identifier:identifier,\n        movements: movements\n    })\n  }\n  else{\n      const movements=['Up','Down']\n      setState({\n        ...state,\n        identifier:identifier,\n        movements: movements\n    })\n  }\n  \n  \n}\n  \nReact.useEffect(() => {\n  getAlertData(props.email,props.callback)\n  \n}, [props.alertChange]);\n\n  return (\n    <PanelBar>\n      <PanelBarItem expanded={false} title=\"Alerts\">\n          <PanelBarItem expanded={false} title=\"Your Alerts\">\n            <UserAlerts email={email} alertChange={state.ChangedAlerts} callback={props.callback}/>\n          </PanelBarItem>\n          <PanelBarItem expanded={false} title=\"Add Alerts\">\n         \n      <div className=\"FormField\">\n      <input  className= \"FormField_Input\"  placeholder= \"Symbol\" onChange={handleChange} type=\"text\" name=\"stock\" />\n      <Button  className= \"ButtonNoRight\" onClick={handleClick}>Choose </Button>\n        <div className=\"row\">\n          <div className=\"m-3\">\n            <DropDownList \n            label = \"$ %\"\n            data={state.identifiers}\n          //   textfield={\"Price or % Change\"}\n            onChange= {identifierChange}\n            />\n          </div>\n          <div className= \"m-3\">\n            <DropDownList \n            label = \"Watch\"\n            data={state.movements}\n            onChange= {movementChange}\n          //   textfield=\"Price or % Change\"\n            /> \n          </div>\n        \n          <div className= \"m-3\">\n            <form>\n            <NumericTextBox defaultValue={0} step={.5} id={\"box\"} /><span><Button  className= \"ButtonNoRight\" onClick={handleAlert}>Save Alert </Button></span>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* <Button  className= \"ButtonNoRight\" onClick={(e)=>handleNewAlert(e)}>Save Alert</Button> */}\n    \n          </PanelBarItem>\n        </PanelBarItem>\n    </PanelBar>\n    \n    \n  )\n}\n","/Users/samehrlich/Desktop/final-app/client/src/panels/PerformancePanel.tsx",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartValueAxisItem,\n  ChartValueAxis,\n  ChartTitle,\n  ChartSeriesLabels,\n  ChartTooltip,\n  ChartLegend,\n  ChartSeriesItemTooltip,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { getHistory } from \"../services/dataService\";\nimport { History } from \"../data/models\";\nconst url =\"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=AAP&date_from=2020-07-10&date_to=2021-07-02&limit=500\";\nconst request = require('request');\nconst categories=['Mar','Apr','May','Jun','Jul']\n//const categories=['Jun','Jul','Aug','Sept','Oct','Nov','Dec','Jan`21','Feb','Mar','Apr','May','Jun','Jul']\n\nconst history_date = new Date();\nfunction clean_data(data:any):any{\n  var Ndata = Object.entries(data[\"Time Series (Daily)\"]);\n  var Dates = Object.keys(Ndata).map(key =>key);\n  // console.log(Dates,Ndata);\n  // var x = Ndata.reduce((json, value, key) => { json[key] = value; return json; }, {});\n  console.log(data[\"Time Series (Daily)\"])\n  return data;\n  var history= {\n    data:[\n        Ndata.map((entry:any)=>{\n        var values = entry[1]\n        var history ={\n          date:entry[0],\n          open: values[\"1. open\"],\n          high: values[\"2. high\"],\n          low: values[\"3. low\"],\n          close: values[\"4. close\"],\n          adjusted_Close:values[\"5. adjusted close\"],\n          volume:values[\"6. volume\"],\n          dividend_amount:values[\"7. dividend amount\"],\n          spilt_coefficient:values[\"8. split coefficient\"]\n        }\n        return(history)\n      })]\n  }\n  return history;\n}\nfunction convertHistoryDate(date:string):string{\n  var value = date \n    var newDates ={\n      date:value.slice(0,10),\n      month: value.slice(5,7),\n      day: value.slice(8,10),\n      year: value.slice(0,4)\n    }\n    var result= newDates.year+newDates.month+newDates.day;\n    return result \n   \n  \n}\n// const defaultTooltipRender = ({ data }) => (`Default Content ${data}`);\n// const nestedTooltipRender = ({ data }) => (\n// <span>\n//   <p>Series 1 value: {data}</p>\n  \n//   <p>Series 1 value: {data}</p>\n// </span>\n// );\nfunction getHistoryData(symbol:string,from:string,to:string,callback: (arg0: History[]) => void){\n  var url =\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\"+symbol+\"&compact=full&apikey=2TXPYH4TGZ32RG8D\";\n    \n\n    // request.get({\n    //     url: url,\n    //     json: true,\n    //     headers: {'User-Agent': 'request'}\n    //   }, (err:any, res:any, data:any) => {\n    //     if (err) {\n    //       console.log('Error:', err);\n    //     } else if (res.statusCode !== 200) {\n    //       console.log('Status:', res.statusCode);\n    //     } else {\n    //       // data is successfully parsed as a JSON object:\n    //       callback(data);\n    //     }\n    // });\n  // var fullUrl= \"http://api.marketstack.com/v1/eod?access_key=5dd6fd84e5ba4e974843da4e6e23db23&symbols=\"+symbol+\"&date_from=\"+from+\"&date_to=\"+to+\"&limit=500\";\n\n  request(url, { json: true }, (err: any, res: any, body: any) => {\n    if (err) { return console.log(err); }\n    var Ndata = Object.entries(body[\"Time Series (Daily)\"]);\n// console.log(Ndata);\n    return getHistory(body[\"Time Series (Daily)\"]).then((results: History[]) => {\n      \n      // console.log(results)\n      callback(results);\n    });\n    \n  })\n}\n// function getDate(){\n//   var dateOBJ =\n \n//   var currentDate;\n//   var test =  new Date().toISOString().split('T')[0];\n  \n//   if(month<10){\n    \n//     var Newmonth = \"0\"+month\n//     console.log(Newmonth)\n//     month = parseInt(Newmonth)\n//     if(day <10){\n//       var NewDay = \"0\"+day\n//       day = parseInt(NewDay)\n//       currentDate ={\n//         curMonth:month,\n//         curDay:day,\n//         curYear:year\n//       }\n//       return currentDate\n//     }\n    \n//   }\n//   else if(day <10){\n//     var NewDay = \"0\"+day\n//     day = parseInt(NewDay)\n//     currentDate ={\n//       curMonth:month.toString,\n//       curDay:day.toString,\n//       curYear:year.toString\n//     }\n//     return currentDate\n//   }\n  \n//   currentDate ={\n//     curMonth:month,\n//     curDay:day,\n//     curYear:year\n//   }\n  \n//   return currentDate;\n// }\n// getMinMax(data){ \n//   console.log()\n// }\nexport default function PerformancePanel(props:any) {\n  \n  var DateOBJ= new Date();\n  var year = DateOBJ.getUTCFullYear()\n  var currentDate = DateOBJ.toISOString().split('T')[0]\n  const [history, setHistory] = React.useState<History[]>();\n  console.log(currentDate)\n  if(props.symbol===\"\"||props.symbol===undefined) {\n    \n    props = {\n      symbol:\"TSLA\",\n      to: currentDate,\n      from: year+\"-01-01\",\n    }\n    \n  }\n  \n  else{ \n    console.log(\"chart property \", props)\n    props = {\n      symbol:props.symbol,\n      to:currentDate,\n      from:year+\"-01-01\",\n    }\n  }\n  \n  \n  React.useEffect(() => {\n    console.log(\"in useEffect \", props)\n    getHistoryData(props.symbol,props.from,props.to,setHistory);\n  }, [props.symbol]);\n \nif(history){\n  \nconsole.log((history))\n  var dates = Object.keys(history).map(date=>{\n    var DateOB= new Date(date);\n    var [month, day, year] = [DateOB.getUTCMonth()+1, DateOB.getUTCDate()+1, DateOB.getUTCFullYear()];\n    return (month+\"-\"+day+\"-\"+year);\n  })\n  var closeData = Object.values(history).map((data:any,idx)=> (data['4. close']))\n  // console.log(dates)\n  var Data = closeData.map((data:any,idx:number)=> [data,dates[idx]])\n  // console.log(Data)\n  // var history_OpenData = history.map(data=>({data:data.open,date:convertHistoryDate(data.date)}))\n  // var data = history_OpenData.map(data => data.data);\n \n  var title= \"YTD \"+props.symbol+\" Stock Price\";\n  // var min,max= getMinMax(history_OpenData);\n// console.log(history_OpenData);\n\n\n  return (\n    \n          <Chart>\n            <ChartTooltip shared={true}/>\n            <ChartTitle text={title} />\n            {/* <ChartTitle text=\"Line Chart\" /> */}\n            {/* <ChartLegend position=\"top\" orientation=\"horizontal\" display=\"false\" /> */}\n            <ChartValueAxis>\n              <ChartValueAxisItem\n                title={{\n                  text: \"Stock Price\",\n                }}\n                min={Math.floor(Math.min(...closeData)-1)}\n                max={Math.ceil(Math.max(...closeData))+10}\n              />\n            </ChartValueAxis>\n            <ChartCategoryAxis>\n              <ChartCategoryAxisItem \n                title={{\n                  text: \"Day/Month\",\n                }}\n                type={\"date\"}\n                baseUnit={\"days\"}\n                maxDivisions={8}\n                categories={dates}\n                />\n            </ChartCategoryAxis>\n            <ChartSeries>\n              <ChartSeriesItem type=\"line\" data={closeData} markers={{ visible: false }} style={'normal'}>\n              <ChartSeriesItemTooltip background=\"blue\"/>\n              </ChartSeriesItem>\n              {/* <ChartSeriesLabels content={'june'} /> */}\n            </ChartSeries>\n          </Chart>\n        \n  );\n  }\n  else{ \n    console.log(history);\n    return <h2>Performance</h2>\n  }\n}","/Users/samehrlich/Desktop/final-app/client/src/services/dataService.ts",["202"],"import { info } from \"../data/info\";\nimport { allocation } from \"../data/allocation\";\nimport { performance } from \"../data/performance\";\n// import { positions } from \"../data/positions\";\nimport { Allocation, History,EOD} from \"../data/models\";\n\nfunction getRandomDelay() {\n  // return 0;\n  return 500 + (Math.random() * 2000);\n  // return 9999999999;\n}\n\nexport function getFundInfo(): Promise<any> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(info);\n    }, getRandomDelay());\n  })\n}\n\nexport function getFundAllocation(): Promise<Allocation[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(allocation);\n    }, getRandomDelay());\n  });\n}\n\nexport function getHistory(stockHistory: History[] | PromiseLike<History[]>): Promise<History[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(stockHistory);\n    }, getRandomDelay());\n  });\n}\n\nexport function getPerformance(): Promise<string[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(performance);\n    }, getRandomDelay());\n  })\n}\nexport function routeChange(props:any[]):Promise<any[]>{\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(props);\n    }, getRandomDelay());\n  })\n}\n\n// export function getPositions(): Promise<Position[]> {\n//   return new Promise((resolve) => {\n//     setTimeout(() => {\n//       resolve(positions);\n//     }, getRandomDelay());\n//   });\n// }\n// export function getEodData(): Promise<EOD> {\n//   return new Promise((resolve) => {\n//     setTimeout(() => {\n//       resolve(info);\n//     }, getRandomDelay());\n//   })\n// }\n\n","/Users/samehrlich/Desktop/final-app/client/src/data/allocation.js",[],"/Users/samehrlich/Desktop/final-app/client/src/data/info.js",[],"/Users/samehrlich/Desktop/final-app/client/src/data/positions.js",[],["203","204"],"/Users/samehrlich/Desktop/final-app/client/src/data/performance.js",[],"/Users/samehrlich/Desktop/final-app/client/src/components/searchbar.jsx",["205","206","207","208","209","210","211","212","213"],"\nimport React from \"react\";\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\n\nimport {withRouter} from \"react-router-dom\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nimport \"hammerjs\";\nimport { DropDownTree } from \"@progress/kendo-react-dropdowns\";\nimport * as ReactDOM from \"react-dom\";\nimport { ComboBox } from \"@progress/kendo-react-dropdowns\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport UserAlerts from \"../panels/UserAlert\";\nimport AddAlert from \"../panels/AddAlert\";\n\nimport \"../CSS/GlobalCSS.css\";\n// import {pic} from \"../logo.svg\";\n\n\nexport default withRouter (class SearchBar extends React.Component{\n  constructor(props){\n    super(props)\n    this.addUserStock = this.addUserStock.bind(this);\n    this.handleChange=this.handleChange.bind(this);\n    // this.getUserStocks= this.getUserStocks.bind(this);\n    this.UpdateStockOnPage=this.UpdateStockOnPage.bind(this);\n    this.state ={\n      stock_to_watch:\"\",\n      stockHasbeenAdded:false,\n      email : this.props.email,\n      stocks:this.props.stocks,\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.stockHasbeenAdded !== this.state.stockHasbeenAdded) {\n      console.log('User has added a stock.')\n      \n        this.props.history.push(\"/profile\",[[{email:this.state.email,getStocks:this.state.stockHasbeenAdded},this.state.stocks]]);\n      \n      // else{\n      //     this.setState({stocks:this.state.stocks})\n      // }\n     \n    }\n  }\n  UpdateStockOnPage(result){\n    console.log(result)\n    if(result === 'User had already added this stock'){\n        alert(\"This stock is already on your watchlist\");\n    }\n    \n    else if(result === 'Successfully Updated'){\n        console.log(\"2nd ADD Stock Rerender\");\n        this.setState({stockHasbeenAdded:!this.state.stockHasbeenAdded});\n    }\n}\naddUserStock(){\n  if(this.state.stock_symbol_status !== \"stock not found\"){\n      console.log(\"Adding stock to \",this.state.stock_to_watch,this.state.email)\n      // this.connection.send(JSON.stringify({'type':'subscribe', 'symbol': this.state.stock_to_watch}))\n      var user={\n          email:this.props.email,\n          addStock: this.state.stock_to_watch\n      } \n     \n      var url=\"/api/AddUserStocks\";\n      const req = new Request(url,{\n          method:\"POST\",\n          headers:{\"Content-Type\":\"application/json\"},\n          body:JSON.stringify(user),\n      });\n      fetch(req)\n      .then((res)=>{\n          \n          return res.json();\n      }).catch((error)=>{\n          return Promise.reject(error);\n        })\n      .then(result => {\n          console.log(\"1st ADD Stock Rerender\");\n          this.UpdateStockOnPage(result)});\n      \n  }\n\n  else{\n      //put in this functionality \n      alert(\"stock not found\");\n  }\n  \n  \n}\n\n\n// updatePage(){\n//   console.log(\"In update page \",this.state.stocks);\n  \n//   this.props.history.push(\"/profile\",[[{email:this.state.email}],this.state.stocks])\n  \n  \n  \n// }\n\n\nhandleChange(event) {\n         \n  this.setState({stock_to_watch: event.target.value});\n}\n  render(){\n    console.log(this.state.stocks)\n    return(\n      <PanelBar> \n        <PanelBarItem expanded={true} title=\"Find Stocks\" >\n          <form className= \"FormFields\">\n            <div className=\"FormField\">\n            \n              <Button  className= \"ButtonNoRight\" onClick={this.addUserStock}>Add </Button>\n              <input  className= \"FormField_Input\" onChange={this.handleChange} placeholder= \"Symbol\" type=\"text\" name=\"stock\" />\n            </div>\n          </form>\n          <form className= \"FormFields\">\n            <div className=\"FormField\">\n            \n              <Button  className= \"ButtonNoRight\" onClick={this.addUserStock}>Show Chart </Button>\n              <input  className= \"FormField_Input\" onChange={this.handleChange} placeholder= \"Symbol\" type=\"text\" name=\"stock\" />\n            </div>\n          </form>\n        </PanelBarItem>\n        \n      </PanelBar>\n    )\n  }\n\n})\n\n\n\n  \n\n  \n// export default function InfoPanel() {\n//   var logo = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/><path d=\"M520.5 78.1z\"/></g></svg>;\n//   const [fundInfo, setFundInfo] = React.useState<FundInfo>();\n//   React.useEffect(() => {\n//     getFundInfo().then((data: FundInfo) => {\n//       setFundInfo(data);\n//     });\n//   }, []);\n\n//     return (\n//       <PanelBar>\n//       <PanelBarItem expanded={true} title=\"Add Stocks\">\n     \n    \n    \n\n//     <form className= \"FormFields\">\n//       <div className=\"FormField\">\n//         <input  className= \"FormField_Input\" placeholder= \"Stock Name\" type=\"text\" name=\"stock\" />\n//         <span className = \"play\"><Button  className= \"ButtonNoRight\" >Track </Button></span> \n      \n//       </div>\n//       {/* onChange={this.handleChange} */}\n//       {/* onClick={this.addUserStock} */}\n\n//     </form>\n\n\n   \n//       </PanelBarItem>\n//     </PanelBar>\n//     );\n//   }\n\n//   export default withRouter(SearchBar);","/Users/samehrlich/Desktop/final-app/client/src/panels/PositionsPanel.tsx",["214"],"import React from \"react\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport { getPositions } from \"../services/dataService\";\nimport { Position } from \"../data/models\";\nimport \"../styles/_panels.scss\"\nexport default function PositionsPanel() {\n  const [positions, setPositions] = React.useState<Position[]>();\n  React.useEffect(() => {\n    getPositions().then((data: Position[]) => {\n      setPositions(data);\n    });\n  }, []);\n\n  return (\n      <div className=\"fund-detail-list span\">\n          <h2>Watchlist</h2>\n          <Grid\n        data={positions}\n        style={{height:700}}\n        >\n        <GridColumn title=\"Symbol\" field=\"symbol\" locked={true} width={100} />\n        <GridColumn title=\"Name\" field=\"name\" />\n        <GridColumn title=\"Change\" field=\"day_change\" />\n        <GridColumn title=\"% Change\" field=\"change_pct\" />\n        <GridColumn title=\"Volume\" field=\"volume\" />\n        <GridColumn title=\"Market Cap\" field=\"market_cap\" />\n    </Grid>\n      </div>\n      \n    \n  );\n}\n","/Users/samehrlich/Desktop/final-app/client/src/components/mycommand.jsx",[],"/Users/samehrlich/Desktop/final-app/client/src/data/models.tsx",[],"/Users/samehrlich/Desktop/final-app/client/src/panels/UserAlert.tsx",["215","216","217","218","219","220","221","222"],"\nimport { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\nimport {Button} from \"reactstrap/es\";\nimport React from \"react\";\nimport { MultiColumnComboBox } from \"@progress/kendo-react-dropdowns\";\nimport { Alerts } from \"../data/models\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport \"./style.css\"\nimport { isJsxAttributes } from \"typescript\";\n\n\nconst $ = require( \"jquery\" );\n// function handleToggle(event:any){\n//     console.log(event)\n//     var user={\n//         email:props.email,\n//         symbol:data.symbol,\n//         identifier:data.Identifier,\n//         movement:data.movement\n//     }\n//     console.log(user,data)\n//     var url=\"/api/toggleAlert\";\n//         const req = new Request(url,{\n//             method:\"POST\",\n//             headers:{\"Content-Type\":\"application/json\"},\n//             body:JSON.stringify(user),\n//         });\n        \n//         fetch(req)\n//         .then((res)=>{\n//             //Catch server error\n//                 //no error\n                \n//             return res.json();\n//         }).catch((error)=>{\n//             console.log(error);\n//             return Promise.reject(error);\n//         })\n//         .then(query_result=>{\n//             console.log(query_result);\n            \n//            setState({alertChange:!state.alertChange})\n//         }) \n\n// }\nconst columns = [\n    {\n      field: \"Identifier\",\n      header: \"ID\",\n      width: \"100px\",\n    },\n    {\n      field: \"movement\",\n      header: \"Tracking\",\n      width: \"300px\",\n    },\n    {\n      field: \"valuechange\",\n      header: \"Change\",\n      width: \"300px\",\n    },\n  ];\n\nfunction getAlertData(email:string,callback:(arg0: Alerts) => void){\n    var user = {\n        email:email,\n        request:\"getData\"\n    }\n    var url=\"/api/UserAlerts\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                callback(query_result)\n            }) \n    \n}\nexport default function Useralerts(props:any) {\n    function toggleButton(props:any){\n        const activeValue = props.dataItem[props.field || \"\"];\n         var x = {\n             \"fill\": \"none\",\n             \"stroke-width\":3,\n             \"stroke-linejoin\":\"round\",\n             \"stroke-miterlimit\":10\n         }\n         var y ={\n            \"fill\":\"none\",\n            \"stroke\":\"#CD4C10\",\n            \"stroke-width\":3,\n            \"stroke-linejoin\":\"round\",\n            \"stroke-miterlimit\":10\n         }\n         var a ={\n            \"fill\":\"none\",\n            \"stroke\":\"#557D25\",\n            \"stroke-width\":3,\n            \"stroke-linejoin\":\"round\",\n            \"stroke-miterlimit\":10\n         }\n         var ss={\n            \"enable-background\":\"new 0 0 33 33\"\n         }\n        \n\n    \n        return(\n            <div>\n               <Button  className= \"ButtonNoRight\" onClick={(e)=> handleToggle(e,props.dataItem)}>\n\n               \n                <label htmlFor={props.id} className=\"cf\">\n                <input type=\"checkbox\" id={props.id} defaultChecked={JSON.parse(activeValue)}/> \n                <span>active</span>\n                <i className=\"indicator\">\n                <svg  xmlns=\"http://www.w3.org/2000/svg\" width={20} viewBox=\"0 0 33 33\">\n            <switch>\n                <g>\n                <path className=\"circ path\" style= {x} d=\"M6.2,6.2L6.2,6.2 c-5.7,5.7-5.7,14.8,0,20.5l0,0c5.7,5.7,14.8,5.7,20.5,0l0,0c5.7-5.7,5.7-14.8,0-20.5l0,0C21.1,0.6,11.9,0.6,6.2,6.2z\"/>\n                <polyline className=\"cross path\" style={y} points=\" 11.4,11.4 21.6,21.6 \"/>\n                <polyline className=\"cross path\" style={y} points=\"21.6,11.4 11.4,21.6\t\"/> \n                <polyline className=\"tick path\" style={a} points=\"10,17.3 13.8,21.1 23,11.9 \"/>\n                </g>\n            </switch>\n        </svg>\n                </i> \n                <span>Inactive</span>\n                </label>\n                </Button>\n                <button type=\"button\" className=\"btn-danger btn-circle btn-sm\" onClick={(e) =>removeAlert(e,props.dataItem)}>X</button>\n\n                </div>\n\n                \n        \n                  )\n        \n    }\n    function changeprefix(props: any){\n        const Value = props.dataItem[props.field || \"\"];\n        const check=props.dataItem['Identifier']\n        if(check == \"Percent\"){\n            return (\n                <td >\n                  {\"%\"+Value}   \n                </td>\n              )\n        }\n        else{\n            return (\n                <td >\n                  {\"$\"+Value}   \n                </td>\n              )\n        }\n        \n    }\n    function handleToggle(event:any,props:any){\n        console.log(event.target.attributes.checked,props)\n        var user={\n            email:state.email,\n            active:!props.active.toString(),\n            symbol:props.symbol,\n            identifier:props.Identifier,\n            movement:props.movement\n        }\n        // console.log(user,data)\n        console.log(user)\n        var url=\"/api/toggleAlert\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                \n                setState({...state,alertChange:!state.alertChange});\n            }) \n    \n    }\n    function removeAlert(event:any,data:any){\n        var user={\n            email:props.email,\n            symbol:data.symbol,\n            identifier:data.Identifier,\n            movement:data.movement\n        }\n        console.log(user,data)\n        var url=\"/api/RemoveAlerts\";\n            const req = new Request(url,{\n                method:\"POST\",\n                headers:{\"Content-Type\":\"application/json\"},\n                body:JSON.stringify(user),\n            });\n            \n            fetch(req)\n            .then((res)=>{\n                //Catch server error\n                    //no error\n                    \n                return res.json();\n            }).catch((error)=>{\n                console.log(error);\n                return Promise.reject(error);\n            })\n            .then(query_result=>{\n                console.log(query_result);\n                \n               setState({...state,removedAlert:!state.removedAlert})\n            }) \n    }\n    const [state,setState]= React.useState({ \n        \n        removedAlert:false,\n        alertChange:false,\n        email:props.email\n    })\n    const [AlertData, setAlertData] = React.useState<(Alerts)>();\n    React.useEffect(() => {\n      getAlertData(props.email,setAlertData)\n      props.callback(AlertData)\n    }, [props.alertChange,state.alertChange]);\n    if(JSON.stringify(AlertData)!==JSON.stringify(\"No Alerts found\")){ \n        //get the unique symbols, then get Alert type\n      \n       if(AlertData){ \n        var Stock_Alerts = AlertData.uniqueSymbols.map(symbol => {\n            console.log((symbol.symbol))\n            //alert data for the unique stock\n            var uniqueAlertData={Symbol:symbol,alerts:AlertData.alerts.filter((i,n)=>i.symbol===(symbol).symbol)};\n            \n            return uniqueAlertData;\n        })\n        return (\n            <PanelBar>\n                {Stock_Alerts.map(Alert=>{\n                    return(<PanelBarItem expanded={false} title={Alert.Symbol.symbol} >\n                                <Grid\n                                data={Alert.alerts}\n                                style={{top: '0px'}}\n                                 > \n                                    <GridColumn title=\"$ %\" field=\"Identifier\" />\n                                    <GridColumn title=\"Watch\" field=\"movement\" />\n                                    <GridColumn title=\"Value\" field=\"valuechange\" cell={changeprefix} />\n                                    <GridColumn title=\"On/Off\" field=\"active\"cell={toggleButton}/>\n                                </Grid>\n                   </PanelBarItem>)\n                    \n                })}\n            </PanelBar>)\n       }else{\n           return(\n               <td>there was an error</td>\n          )\n       }\n        \n        \n        // var rendItem = Stock_Alerts.forEach((Alert,n)=>{\n        //     console.log(Alert);\n        //     return(<PanelBarItem expanded={false} title={Alert.Symbol} >\n\n        //          <MultiColumnComboBox\n        //             data={Alert.alerts}\n        //             columns={columns}\n        //             />   \n        //     </PanelBarItem>)\n        // })\n        // Object.values(Stock_Alerts).map((element: any) =>{\n        //     console.log(element);\n        // })\n        \n        //************Too DOO handle the uniqueAlertData to display it has a panel with the stock symbol and then a bulti combo box as the drop down  */\n        \n    }\n    else {\n        return (\n            \n                 <td>Add Some Alerts</td>\n           \n           \n        )\n    }\n\n\n    \n    \n}","/Users/samehrlich/Desktop/final-app/client/src/panels/AddAlert.tsx",["223","224","225","226","227","228","229","230","231","232","233","234"],"import { PanelBar, PanelBarItem } from \"@progress/kendo-react-layout\";\nimport React from \"react\";\nimport { MultiColumnComboBox } from \"@progress/kendo-react-dropdowns\";\nimport { Alerts } from \"../data/models\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\nimport { NumericTextBox } from \"@progress/kendo-react-inputs\";\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\nimport {Button,DropdownMenu,Dropdown} from \"reactstrap/es\";\nconst defaultIdentifier = {\n    productName: \"Select Metric ...\",\n  };\n  const defaultWatch = {\n    orderName: \"Select Movment ...\",\n  };\n\n  export default function AddAlert(){\n      const [state,setState]= React.useState({ \n          identifier:null,\n          movement: [\"\"],\n      })\n\n      const identifierChange=(event: any)=>{\n          const identifier = event.target.value;\n          if(identifier==='Price'){\n            const movements= ['Above','Below']\n            setState({\n                ...state,\n                identifier:identifier,\n                movement: movements\n            })\n          }\n          else{\n              const movements=['Up','Down']\n              setState({\n                ...state,\n                identifier:identifier,\n                movement: movements\n            })\n          }\n          \n          \n      }\n      return(\n        <form className= \"FormFields\">\n        <div className=\"FormField\">\n            \n          <div className=\"row\">\n            <div className=\"m-3\">\n              <DropDownList \n              label = \"$ %\"\n              data={[\"Price\",\"% Change\"]}\n            //   textfield={\"Price or % Change\"}\n              onChange= {identifierChange}\n              />\n            </div>\n            <div className= \"m-3\">\n              <DropDownList \n              label = \"Watch\"\n              data={state.movement}\n            //   textfield=\"Price or % Change\"\n              />\n            </div>\n            <div className= \"m-3\">\n              <NumericTextBox defaultValue={0} step={.5} />\n            </div>\n          </div>\n        </div>\n        {/* <Button  className= \"ButtonNoRight\" onClick={(e)=>handleNewAlert(e)}>Save Alert</Button> */}\n      </form>\n      )\n  }","/Users/samehrlich/Desktop/final-app/client/src/components/email.js",["235","236"],"var sendMail = require('node-email-sender');\n\n\nfunction confirmation_email(receiver){\n    var confirm_address = \"http://noteifymusic.com.\"\n    var link = confirm_address.link(\"http://noteifymusic.com./confirm?email=\"+receiver)\n    console.log(link);\n    var emailConfig = {\n        emailFrom:'note.ify.me1@gmail.com',\n        transporterConfig:{\n            service: 'gmail',\n            auth: {\n                user: 'note.ify.me1@gmail.com',\n                pass: 'adminMusic!'\n            }\n        }\n    }\n    var response = sendMail.sendMail({\n        emailConfig: emailConfig,\n        to: receiver,\n        subject: \"Welcome to NoteifyMe!\",\n        content: \"Welcome to NoteifyMe, the web application that notifies you when you favorite music artists release new music. \\n\" + \n        \"Please click the following link to verify your email:\" + link\n    });\n    console.log(\"confirmation email sent to\",receiver);\n}\nfunction sendEmail(receiver, alert){\n    var emailConfig = {\n        emailFrom: 'seyankees@gmail.com', \n        transporterConfig:{\n            service: 'gmail',\n            auth: {\n                user:'seyankees@gmail.com',\n                pass:'sam is 103432!'\n            }\n        }\n    }\n    \n    var response = sendMail.sendMail({\n        emailConfig: emailConfig,\n        to: receiver,\n        subject: alert.symbol + ' ALERT TRIGGERED',\n        content: \"The \"+alert.Identifier+\" of \"+alert.symbol+\" is \"+alert.movement+\" \"+alert.valuechange\n    });\n    console.log(\"email sent to \", receiver);\n}\n\n//confirmation_email(\"aintili@bu.edu\");\n//sendEmail(\"ehrlichj@bu.edu\",\"Pink Floyd\");\n\nmodule.exports = {sendEmail, confirmation_email};\n","/Users/samehrlich/Desktop/final-app/client/src/panels/service.js",["237","238","239"],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":35,"column":28,"nodeType":"246","messageId":"247","endLine":35,"endColumn":30},{"ruleId":"244","severity":1,"message":"245","line":38,"column":32,"nodeType":"246","messageId":"247","endLine":38,"endColumn":34},{"ruleId":"248","severity":1,"message":"249","line":63,"column":32,"nodeType":"250","messageId":"251","endLine":63,"endColumn":39},{"ruleId":"248","severity":1,"message":"252","line":63,"column":40,"nodeType":"250","messageId":"251","endLine":63,"endColumn":50},{"ruleId":"248","severity":1,"message":"253","line":1,"column":25,"nodeType":"250","messageId":"251","endLine":1,"endColumn":39},{"ruleId":"248","severity":1,"message":"254","line":2,"column":9,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"255","line":3,"column":9,"nodeType":"250","messageId":"251","endLine":3,"endColumn":15},{"ruleId":"248","severity":1,"message":"256","line":3,"column":16,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"257","line":3,"column":29,"nodeType":"250","messageId":"251","endLine":3,"endColumn":37},{"ruleId":"248","severity":1,"message":"258","line":86,"column":15,"nodeType":"250","messageId":"251","endLine":86,"endColumn":22},{"ruleId":"244","severity":1,"message":"245","line":156,"column":24,"nodeType":"246","messageId":"247","endLine":156,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":159,"column":28,"nodeType":"246","messageId":"247","endLine":159,"endColumn":30},{"ruleId":"248","severity":1,"message":"255","line":2,"column":9,"nodeType":"250","messageId":"251","endLine":2,"endColumn":15},{"ruleId":"244","severity":1,"message":"245","line":35,"column":34,"nodeType":"246","messageId":"247","endLine":35,"endColumn":36},{"ruleId":"248","severity":1,"message":"259","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":12},{"ruleId":"240","replacedBy":"260"},{"ruleId":"242","replacedBy":"261"},{"ruleId":"248","severity":1,"message":"262","line":5,"column":7,"nodeType":"250","messageId":"251","endLine":5,"endColumn":13},{"ruleId":"248","severity":1,"message":"263","line":1,"column":15,"nodeType":"250","messageId":"251","endLine":1,"endColumn":24},{"ruleId":"248","severity":1,"message":"253","line":1,"column":25,"nodeType":"250","messageId":"251","endLine":1,"endColumn":39},{"ruleId":"248","severity":1,"message":"254","line":2,"column":9,"nodeType":"250","messageId":"251","endLine":2,"endColumn":18},{"ruleId":"248","severity":1,"message":"255","line":3,"column":9,"nodeType":"250","messageId":"251","endLine":3,"endColumn":15},{"ruleId":"248","severity":1,"message":"256","line":3,"column":16,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"257","line":3,"column":29,"nodeType":"250","messageId":"251","endLine":3,"endColumn":37},{"ruleId":"248","severity":1,"message":"264","line":6,"column":16,"nodeType":"250","messageId":"251","endLine":6,"endColumn":29},{"ruleId":"248","severity":1,"message":"265","line":7,"column":13,"nodeType":"250","messageId":"251","endLine":7,"endColumn":21},{"ruleId":"248","severity":1,"message":"266","line":9,"column":8,"nodeType":"250","messageId":"251","endLine":9,"endColumn":22},{"ruleId":"248","severity":1,"message":"267","line":13,"column":5,"nodeType":"250","messageId":"251","endLine":13,"endColumn":13},{"ruleId":"248","severity":1,"message":"268","line":14,"column":7,"nodeType":"250","messageId":"251","endLine":14,"endColumn":14},{"ruleId":"248","severity":1,"message":"269","line":105,"column":7,"nodeType":"250","messageId":"251","endLine":105,"endColumn":20},{"ruleId":"244","severity":1,"message":"270","line":185,"column":40,"nodeType":"246","messageId":"247","endLine":185,"endColumn":42},{"ruleId":"244","severity":1,"message":"270","line":196,"column":35,"nodeType":"246","messageId":"247","endLine":196,"endColumn":37},{"ruleId":"248","severity":1,"message":"271","line":214,"column":19,"nodeType":"250","messageId":"251","endLine":214,"endColumn":22},{"ruleId":"244","severity":1,"message":"270","line":285,"column":28,"nodeType":"246","messageId":"247","endLine":285,"endColumn":30},{"ruleId":"248","severity":1,"message":"249","line":322,"column":20,"nodeType":"250","messageId":"251","endLine":322,"endColumn":27},{"ruleId":"248","severity":1,"message":"252","line":322,"column":28,"nodeType":"250","messageId":"251","endLine":322,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":589,"column":24,"nodeType":"250","messageId":"251","endLine":589,"endColumn":31},{"ruleId":"248","severity":1,"message":"252","line":589,"column":32,"nodeType":"250","messageId":"251","endLine":589,"endColumn":42},{"ruleId":"272","severity":1,"message":"273","line":663,"column":15,"nodeType":"250","messageId":"274","endLine":663,"endColumn":19},{"ruleId":"275","severity":1,"message":"276","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":13},{"ruleId":"240","replacedBy":"277"},{"ruleId":"242","replacedBy":"278"},{"ruleId":"275","severity":1,"message":"279","line":7,"column":7,"nodeType":"250","messageId":"251","endLine":7,"endColumn":11},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"275","severity":1,"message":"280","line":3,"column":3,"nodeType":"250","messageId":"251","endLine":3,"endColumn":8},{"ruleId":"275","severity":1,"message":"281","line":4,"column":3,"nodeType":"250","messageId":"251","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"282","line":5,"column":3,"nodeType":"250","messageId":"251","endLine":5,"endColumn":14},{"ruleId":"275","severity":1,"message":"283","line":6,"column":3,"nodeType":"250","messageId":"251","endLine":6,"endColumn":18},{"ruleId":"275","severity":1,"message":"284","line":7,"column":3,"nodeType":"250","messageId":"251","endLine":7,"endColumn":20},{"ruleId":"275","severity":1,"message":"285","line":8,"column":3,"nodeType":"250","messageId":"251","endLine":8,"endColumn":13},{"ruleId":"275","severity":1,"message":"286","line":9,"column":3,"nodeType":"250","messageId":"251","endLine":9,"endColumn":15},{"ruleId":"275","severity":1,"message":"287","line":14,"column":10,"nodeType":"250","messageId":"251","endLine":14,"endColumn":27},{"ruleId":"275","severity":1,"message":"288","line":15,"column":10,"nodeType":"250","messageId":"251","endLine":15,"endColumn":20},{"ruleId":"275","severity":1,"message":"256","line":20,"column":16,"nodeType":"250","messageId":"251","endLine":20,"endColumn":28},{"ruleId":"275","severity":1,"message":"257","line":20,"column":29,"nodeType":"250","messageId":"251","endLine":20,"endColumn":37},{"ruleId":"275","severity":1,"message":"289","line":20,"column":39,"nodeType":"250","messageId":"251","endLine":20,"endColumn":44},{"ruleId":"275","severity":1,"message":"290","line":25,"column":7,"nodeType":"250","messageId":"251","endLine":25,"endColumn":24},{"ruleId":"275","severity":1,"message":"291","line":28,"column":7,"nodeType":"250","messageId":"251","endLine":28,"endColumn":19},{"ruleId":"275","severity":1,"message":"249","line":106,"column":24,"nodeType":"250","messageId":"251","endLine":106,"endColumn":31},{"ruleId":"275","severity":1,"message":"252","line":106,"column":32,"nodeType":"250","messageId":"251","endLine":106,"endColumn":42},{"ruleId":"292","severity":1,"message":"293","line":171,"column":4,"nodeType":"294","endLine":171,"endColumn":23,"suggestions":"295"},{"ruleId":"275","severity":1,"message":"284","line":11,"column":3,"nodeType":"250","messageId":"251","endLine":11,"endColumn":20},{"ruleId":"275","severity":1,"message":"281","line":13,"column":3,"nodeType":"250","messageId":"251","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"296","line":19,"column":7,"nodeType":"250","messageId":"251","endLine":19,"endColumn":10},{"ruleId":"275","severity":1,"message":"297","line":21,"column":7,"nodeType":"250","messageId":"251","endLine":21,"endColumn":17},{"ruleId":"275","severity":1,"message":"298","line":24,"column":7,"nodeType":"250","messageId":"251","endLine":24,"endColumn":19},{"ruleId":"275","severity":1,"message":"299","line":25,"column":10,"nodeType":"250","messageId":"251","endLine":25,"endColumn":20},{"ruleId":"275","severity":1,"message":"300","line":27,"column":7,"nodeType":"250","messageId":"251","endLine":27,"endColumn":12},{"ruleId":"301","severity":1,"message":"302","line":32,"column":3,"nodeType":"303","messageId":"304","endLine":49,"endColumn":4},{"ruleId":"301","severity":1,"message":"302","line":50,"column":3,"nodeType":"305","messageId":"304","endLine":50,"endColumn":18},{"ruleId":"275","severity":1,"message":"306","line":52,"column":10,"nodeType":"250","messageId":"251","endLine":52,"endColumn":28},{"ruleId":"275","severity":1,"message":"307","line":95,"column":9,"nodeType":"250","messageId":"251","endLine":95,"endColumn":14},{"ruleId":"292","severity":1,"message":"308","line":180,"column":6,"nodeType":"294","endLine":180,"endColumn":20,"suggestions":"309"},{"ruleId":"275","severity":1,"message":"310","line":192,"column":7,"nodeType":"250","messageId":"251","endLine":192,"endColumn":11},{"ruleId":"311","severity":1,"message":"312","line":230,"column":90,"nodeType":"313","messageId":"314","endLine":230,"endColumn":106},{"ruleId":"275","severity":1,"message":"315","line":5,"column":30,"nodeType":"250","messageId":"251","endLine":5,"endColumn":33},{"ruleId":"240","replacedBy":"277"},{"ruleId":"242","replacedBy":"278"},{"ruleId":"248","severity":1,"message":"256","line":6,"column":16,"nodeType":"250","messageId":"251","endLine":6,"endColumn":28},{"ruleId":"248","severity":1,"message":"257","line":6,"column":29,"nodeType":"250","messageId":"251","endLine":6,"endColumn":37},{"ruleId":"248","severity":1,"message":"316","line":8,"column":10,"nodeType":"250","messageId":"251","endLine":8,"endColumn":22},{"ruleId":"248","severity":1,"message":"265","line":9,"column":13,"nodeType":"250","messageId":"251","endLine":9,"endColumn":21},{"ruleId":"248","severity":1,"message":"317","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":18},{"ruleId":"248","severity":1,"message":"318","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":24},{"ruleId":"248","severity":1,"message":"319","line":12,"column":10,"nodeType":"250","messageId":"251","endLine":12,"endColumn":22},{"ruleId":"248","severity":1,"message":"320","line":13,"column":8,"nodeType":"250","messageId":"251","endLine":13,"endColumn":18},{"ruleId":"248","severity":1,"message":"321","line":14,"column":8,"nodeType":"250","messageId":"251","endLine":14,"endColumn":16},{"ruleId":"275","severity":1,"message":"264","line":2,"column":16,"nodeType":"250","messageId":"251","endLine":2,"endColumn":29},{"ruleId":"275","severity":1,"message":"322","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":29},{"ruleId":"275","severity":1,"message":"264","line":7,"column":16,"nodeType":"250","messageId":"251","endLine":7,"endColumn":29},{"ruleId":"275","severity":1,"message":"323","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":25},{"ruleId":"275","severity":1,"message":"324","line":12,"column":7,"nodeType":"250","messageId":"251","endLine":12,"endColumn":8},{"ruleId":"275","severity":1,"message":"325","line":46,"column":7,"nodeType":"250","messageId":"251","endLine":46,"endColumn":14},{"ruleId":"275","severity":1,"message":"326","line":115,"column":14,"nodeType":"250","messageId":"251","endLine":115,"endColumn":16},{"ruleId":"244","severity":1,"message":"245","line":156,"column":18,"nodeType":"246","messageId":"247","endLine":156,"endColumn":20},{"ruleId":"292","severity":1,"message":"327","line":248,"column":8,"nodeType":"294","endLine":248,"endColumn":45,"suggestions":"328"},{"ruleId":"275","severity":1,"message":"329","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":18},{"ruleId":"275","severity":1,"message":"330","line":1,"column":20,"nodeType":"250","messageId":"251","endLine":1,"endColumn":32},{"ruleId":"275","severity":1,"message":"322","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":29},{"ruleId":"275","severity":1,"message":"331","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":16},{"ruleId":"275","severity":1,"message":"332","line":5,"column":10,"nodeType":"250","messageId":"251","endLine":5,"endColumn":14},{"ruleId":"275","severity":1,"message":"264","line":5,"column":16,"nodeType":"250","messageId":"251","endLine":5,"endColumn":29},{"ruleId":"275","severity":1,"message":"333","line":5,"column":31,"nodeType":"250","messageId":"251","endLine":5,"endColumn":41},{"ruleId":"275","severity":1,"message":"255","line":8,"column":9,"nodeType":"250","messageId":"251","endLine":8,"endColumn":15},{"ruleId":"275","severity":1,"message":"256","line":8,"column":16,"nodeType":"250","messageId":"251","endLine":8,"endColumn":28},{"ruleId":"275","severity":1,"message":"257","line":8,"column":29,"nodeType":"250","messageId":"251","endLine":8,"endColumn":37},{"ruleId":"275","severity":1,"message":"290","line":9,"column":7,"nodeType":"250","messageId":"251","endLine":9,"endColumn":24},{"ruleId":"275","severity":1,"message":"291","line":12,"column":9,"nodeType":"250","messageId":"251","endLine":12,"endColumn":21},{"ruleId":"248","severity":1,"message":"334","line":18,"column":9,"nodeType":"250","messageId":"251","endLine":18,"endColumn":17},{"ruleId":"248","severity":1,"message":"334","line":39,"column":9,"nodeType":"250","messageId":"251","endLine":39,"endColumn":17},{"ruleId":"248","severity":1,"message":"335","line":1,"column":8,"nodeType":"250","messageId":"251","endLine":1,"endColumn":20},{"ruleId":"248","severity":1,"message":"268","line":2,"column":7,"nodeType":"250","messageId":"251","endLine":2,"endColumn":14},{"ruleId":"248","severity":1,"message":"336","line":35,"column":10,"nodeType":"250","messageId":"251","endLine":35,"endColumn":22},"no-native-reassign",["337"],"no-negated-in-lhs",["338"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'stackTrace' is assigned a value but never used.","'ChildComponent' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'DropdownMenu' is defined but never used.","'Dropdown' is defined but never used.","'element' is assigned a value but never used.","'logo' is defined but never used.",["337"],["338"],"'bcrypt' is assigned a value but never used.","'Component' is defined but never used.","'GridCellProps' is defined but never used.","'ReactDOM' is defined but never used.","'OverlayTrigger' is defined but never used.","'fetchUrl' is assigned a value but never used.","'request' is assigned a value but never used.","'viewChartOver' is defined but never used.","Expected '!==' and instead saw '!='.","'req' is assigned a value but never used.","no-redeclare","'grid' is already defined.","redeclared","@typescript-eslint/no-unused-vars","'react' is defined but never used.",["337"],["338"],"'user' is assigned a value but never used.","'Chart' is defined but never used.","'ChartLegend' is defined but never used.","'ChartSeries' is defined but never used.","'ChartSeriesItem' is defined but never used.","'ChartSeriesLabels' is defined but never used.","'ChartTitle' is defined but never used.","'ChartTooltip' is defined but never used.","'getFundAllocation' is defined but never used.","'Allocation' is defined but never used.","'Input' is defined but never used.","'defaultIdentifier' is assigned a value but never used.","'defaultWatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.callback' and 'props.email'. Either include them or remove the dependency array.","ArrayExpression",["339"],"'url' is assigned a value but never used.","'categories' is assigned a value but never used.","'history_date' is assigned a value but never used.","'clean_data' is defined but never used.","'Dates' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","ReturnStatement","'convertHistoryDate' is defined but never used.","'Ndata' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["340"],"'Data' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'EOD' is defined but never used.","'DropDownTree' is defined but never used.","'ComboBox' is defined but never used.","'NumericTextBox' is defined but never used.","'DropDownList' is defined but never used.","'UserAlerts' is defined but never used.","'AddAlert' is defined but never used.","'MultiColumnComboBox' is defined but never used.","'isJsxAttributes' is defined but never used.","'$' is assigned a value but never used.","'columns' is assigned a value but never used.","'ss' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'AlertData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["341"],"'PanelBar' is defined but never used.","'PanelBarItem' is defined but never used.","'Alerts' is defined but never used.","'Grid' is defined but never used.","'GridColumn' is defined but never used.","'response' is assigned a value but never used.","'StringStream' is assigned a value but never used.","'isMarketOpen' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},"Update the dependencies array to be: [props.alertChange, props.callback, props.email]",{"range":"348","text":"349"},"Update the dependencies array to be: [props, props.symbol]",{"range":"350","text":"351"},"Update the dependencies array to be: [AlertData, props, props.alertChange, state.alertChange]",{"range":"352","text":"353"},[4221,4240],"[props.alertChange, props.callback, props.email]",[5026,5040],"[props, props.symbol]",[7499,7536],"[AlertData, props, props.alertChange, state.alertChange]"]